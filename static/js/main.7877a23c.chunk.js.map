{"version":3,"sources":["components/Elements/Elements.js","assets/images/logo.png","components/Button/ButtonElements.js","components/Snackbar/SnackbarElements.js","components/Snackbar/index.js","components/Modal/ModalElements.js","context/AppReducer.js","context/GlobalState.js","assets/images/pokemon.svg","components/Pokemon/Pokemon.js","components/Modal/index.js","components/Button/index.js","components/Navbar/NavbarElements.js","assets/images/github-white.svg","assets/images/pokedex.png","components/Navbar/index.js","pages/PokemonDetails.js","components/Filter/FilterElements.js","components/Filter/index.js","assets/images/favicon.ico","components/HomeSection/HomeElements.js","components/HomeSection/index.js","components/Pokemon/index.js","assets/images/pikachu.png","components/Loading/LoadingElements.js","components/Loading/index.js","services/media.js","components/Category/CategoryElements.js","components/Navbar/Scroll.js","pages/PokemonHome.js","pages/PokemonList.js","app/App.js","index.js"],"names":["ListContainer","styled","div","PokemonDetailsContainer","PokemonDetailsContent","HeaderDetails","BodyDetails","FooterDetails","NomorJudul","Nomor","h2","Nama","NamaGenera","WeightHeight","Weight","Judulnya","Isinya","Region","DescriptionPokemon","About","Description","p","ImgBodyDetails","img","Tulisan","span","Icon","BungkusIcon","TypesText","Pembungkus","AbilitiesBungkus","PembungkusAbilities","Progress","Progressnya","props","width","BungkusProgress","Text","BungkusHpProgress","Bungkusan","BaseStat","TextValue","BungkusanDetails","BungkusanDetailsBawah","BungkusEvalution","IconEvo","PembungkusDetails","NamaDetails","Textnya","nav","scrollNav","LinkR","MainButton","MainSnackbar","Snackbar","forwardRef","ref","useState","showSnackbar","setShowSnackbar","useImperativeHandle","show","setTimeout","className","id","style","backgroundColor","type","message","Background","ModalWrapper","Namanya","ModalContent","CloseModalButton","BiX","Button","button","variable","state","action","listPokemon","payload","filter","movie","title","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addPokemonToList","removePokemonFromList","removeAllPokemonFromList","children","AboutText","ImageCard","CardList","imgUrl","Card","Header","Utama","Footer","IconTypes","IsiCard","MainFooter","JudulW","Penjelasan","Name","h4","Number","Types","color","Modal","showModal","setShowModal","data","image","tipe","nama","number","modalRef","useRef","snackbarRef12","useContext","setState","String","padStart","map","key","src","alt","onSubmit","Object","assign","prev","window","location","reload","current","placeholder","name","onChange","e","target","old","onClick","ButonCatch","random","setRandom","snackbarRef11","SnackbarType","num","Math","floor","pokeball","Nav","NavbarContainer","NavMenu","ul","IconButtonnya","scrollIcon","Navbar","setScrollNav","changeNav","scrollY","addEventListener","to","scroll","scrollToTop","logoImg","length","open","github","PokemonDetails","useParams","setData","types","setTypes","statistics","setStatistics","deskripsi","setDescription","genera","setGenera","names","setNames","images","setImages","url","setUrlnya","evochain","setEvoChain","urlability","setUrlAbilitinya","bisa","setBisa","idnya","setIDnya","getData","a","axios","get","catch","response","j","stats","Obj","stat","base_stat","push","i","abilities","ability","Objectnya","gambar","sprites","other","dream_world","front_default","gambar_2","getDescription","str","convertedStr","replace","newObj","flavor_text_entries","language","penjelasan","flavor_text","genus","evolution_chain","getEvoImages","evoChain","evoData","chain","evoDetails","species_name","species","min_level","trigger_name","trigger","item","hasOwnProperty","err","console","log","image_url","getAbility","evonyaNamanya","ObjectTik","text","stringName","charAt","toUpperCase","slice","document","weight","height","evolution","textDecoration","place","effect","fontSize","fontWeight","statistik","stat__name","stat__val","SelectContainer","SelectContent","SelectInput","Input","input","attrs","size","customStyles","control","styles","display","borderRadius","border","boxShadow","outline","stylesLogo","marginRight","marginLeft","Filters","optionsRegions","this","regions","nilaiValuenya","label","offset","limit","optionsTypes","nilaiTypes","optionsSortby","sortby","nilaiSortby","options","regionsSelect","typesSelect","sortSelect","valuesearch","searchChange","React","Component","HomeContainer","HomeContent","Content","Judul","h3","h1","HomeButton","HomeButtonList","LogoImg","Profile","JudulName","JudulDescription","JudulButton","JudulButtonRemove","ContentButton","DescriptionButton","HomeSectionList","description","snackbarRef","snackbarRef2","HomeSection","Pokemon","maxLength","PokemonCardList","titleNew","background","cursor","alignItems","CardLoading","IsiCardLoading","CardContent","Loading","breakpoints","devices","smartphone","ipads","tablet","laptop","desktops","screen_large","CategoryContainer","CategoryContent","IconCategory","BungkusanIconnya","Scroll","setScrollIcon","changeIcon","PokemonHome","getAllPokemons","getPokemonData","results","result","pokemonArr","filterArr","Promise","all","pokemonItem","then","sort","b","isTypeSelected","selectedType","isFilter","filterPokemons","allPokemons","showLoading","fetchEvoDetails","fetchEvoImages","evoChainArr","fetchPokemonData","pokemon","category","imageURL","abs","pokeNumber","pokeName","showInfo","genderRate","fetchPokemonDescription","pokemon_name","gender_rate","handleChangeRegions","valueregion","sorttype","isSearch","handleChangeTypes","valuetype","noDataFound","allPoks","handleChangeSort","sortArr","handleChangeSearch","event","searchArr","includes","toLowerCase","toString","searchPokemons","handleClick","top","body","scrollHeight","behavior","catergory","searchString","isChecked","evolID","evolName","evolTypes","evolImgURL","listnya","visible","opacity","transition","when","staggerChildren","delayChildren","hidden","itemsnya","x","Filter","logoTypes","motion","initial","animate","variants","keys","li","onElemClick","PokemonList","item_nya","scale","App","basename","exact","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"6hBAIaA,GAAgBC,KAAOC,IAAV,ysCA+CbC,GAA0BF,KAAOC,IAAV,4yBAoCvBE,GAAwBH,KAAOC,IAAV,4cAqBrBG,GAAgBJ,KAAOC,IAAV,kUAcbI,GAAcL,KAAOC,IAAV,6IAMXK,GAAgBN,KAAOC,IAAV,iKAQbM,GAAaP,KAAOC,IAAV,wGAOVO,GAAQR,KAAOS,GAAV,sHAOLC,GAAOV,KAAOS,GAAV,uJAQJE,GAAaX,KAAOS,GAAV,6HAOVG,GAAeZ,KAAOC,IAAV,+RAcZY,GAASb,KAAOC,IAAV,0OAWNa,GAAWd,KAAOS,GAAV,6RAcRM,GAASf,KAAOS,GAAV,qSAaNO,GAAShB,KAAOC,IAAV,oFAMNgB,GAAqBjB,KAAOC,IAAV,4OAYlBiB,GAAQlB,KAAOS,GAAV,sHAOLU,GAAcnB,KAAOoB,EAAV,sHAOXC,GAAiBrB,KAAOsB,IAAV,yeA+CdC,IAxBUvB,KAAOsB,IAAV,2fAwBGtB,KAAOwB,KAAV,02BAuCPC,GAAOzB,KAAOsB,IAAV,oRAcJI,GAAc1B,KAAOC,IAAV,yOAWX0B,GAAY3B,KAAOC,IAAV,gHAkBT2B,IAXgB5B,KAAOC,IAAV,gHAMAD,KAAOC,IAAV,2EAKGD,KAAOC,IAAV,4FAMV4B,GAAmB7B,KAAOC,IAAV,mcAmBhB6B,GAAsB9B,KAAOC,IAAV,2PAWnB8B,GAAW/B,KAAOC,IAAV,oGAKR+B,GAAchC,KAAOC,IAAV,6HAGX,SAACgC,GAAD,OAAWA,EAAMC,SAIjBC,GAAkBnC,KAAOC,IAAV,uIAQfmC,GAAOpC,KAAOS,GAAV,+PAaJ4B,GAAoBrC,KAAOC,IAAV,4HAOjBqC,GAAYtC,KAAOC,IAAV,sWAiBTsC,GAAWvC,KAAOS,GAAV,6IAQR+B,GAAYxC,KAAOS,GAAV,4QAmBTgC,IANYzC,KAAOC,IAAV,6FAMUD,KAAOC,IAAV,sOAWhByC,GAAwB1C,KAAOC,IAAV,8GAMrB0C,GAAmB3C,KAAOC,IAAV,+WAchB2C,GAAU5C,KAAOsB,IAAV,oRAcPuB,GAAoB7C,KAAOC,IAAV,6UAgBjB6C,GAAc9C,KAAOoB,EAAV,gLASX2B,GAAU/C,KAAOoB,EAAV,2K,IASDpB,KAAOgD,IAAV,+PACE,qBAAGC,UACD,wBAA0B,iBAYfjD,KAAOC,IAAV,wpBA+BLD,aAAOkD,KAAPlD,CAAH,iOAWGA,KAAOsB,IAAV,wI,OCznBL,OAA0B,iCCE5B6B,GAAanD,KAAOC,IAAV,myBCAVmD,GAAepD,KAAOC,IAAV,o3C,0BCsCVoD,GAnCEC,uBAAW,SAACrB,EAAOsB,GAChC,MAAwCC,qBAAS,GAAjD,oBAAOC,EAAP,KAAqBC,EAArB,KAWA,OATAC,+BAAoBJ,GAAK,iBAAO,CAC5BK,KAD4B,WAExBF,GAAgB,GAChBG,YAAW,WACPH,GAAgB,KACjB,UAKP,eAACN,GAAD,UACI,uBACIU,UAAU,WACVC,GAAIN,EAAe,OAAS,OAC5BO,MAAO,CACHC,gBACmB,YAAfhC,EAAMiC,KAAqB,UAAY,WALnD,UAQI,sBAAKJ,UAAU,OAAf,SACoB,YAAf7B,EAAMiC,KACH,eAAC,KAAD,IAEA,eAAC,KAAD,MAGR,sBAAKJ,UAAU,UAAf,SAA0B7B,EAAMkC,kB,2BC/BnCC,GAAapE,KAAOC,IAAV,yQA0BVoE,IAZOrE,KAAOC,IAAV,qPAYWD,KAAOC,IAAV,slBAcL,SAACgC,GAAD,OAAWA,EAAMqC,YAaxBC,GAAevE,KAAOC,IAAV,6kJA6KZuE,GAAmBxE,aAAOyE,KAAPzE,CAAH,0RAehB0E,GAAS1E,KAAO2E,OAAV,ib,SC1NJC,GA1BE,SAACC,EAAOC,GACrB,OAAQA,EAAOZ,MACX,IAAK,sBACD,OAAO,6BACAW,GADP,IAEIE,YAAY,CAAED,EAAOE,SAAV,oBAAsBH,EAAME,gBAE/C,IAAK,2BACD,OAAO,6BACAF,GADP,IAEIE,YAAaF,EAAME,YAAYE,QAC3B,SAACC,GAAD,OAAWA,EAAMC,QAAUL,EAAOE,aAI9C,IAAK,+BACD,OAAO,6BACAH,GADP,IAEIE,YAAa,KAGrB,QACI,OAAOF,IClBbO,GAAe,CACjBL,YAAaM,aAAaC,QAAQ,eAC5BC,KAAKC,MAAMH,aAAaC,QAAQ,gBAChC,IAGGG,GAAgBC,yBAAcN,IAE9BO,GAAiB,SAAC1D,GAC3B,MAA0B2D,sBAAWC,GAAYT,IAAjD,oBAAOP,EAAP,KAAciB,EAAd,KAEAC,sBAAU,WACNV,aAAaW,QAAQ,cAAeT,KAAKU,UAAUpB,EAAME,gBAC1D,CAACF,IAcJ,OACI,eAACY,GAAcS,SAAf,CACIC,MAAO,CACHpB,YAAaF,EAAME,YACnBqB,iBAhBa,SAAClB,GACtBY,EAAS,CAAE5B,KAAM,sBAAuBc,QAASE,KAgBzCmB,sBAbkB,SAAClB,GAC3BW,EAAS,CAAE5B,KAAM,2BAA4Bc,QAASG,KAa9CmB,yBAVqB,WAC7BR,EAAS,CAAE5B,KAAM,+BAAgCc,QAAS,OAI1D,SAQK/C,EAAMsE,YCxCJ,OAA0B,oCCG5BC,GAAYxG,KAAOoB,EAAV,uHAOTF,GAAQlB,KAAOC,IAAV,+TAgBLwG,GAAYzG,KAAOsB,IAAV,iSAcToF,GAAW1G,KAAOC,IAAV,ijCAaW0G,IAiBZ,SAAC1E,GAAD,OAAWA,EAAMqC,UAYvBmC,IAMDG,GAAO5G,KAAOC,IAAV,ijCAae0G,IAiBZ,SAAC1E,GAAD,OAAWA,EAAMqC,UAYvBmC,IAODI,GAAS7G,KAAOC,IAAV,mLASN6G,GAAQ9G,KAAOC,IAAV,6JASL8G,GAAS/G,KAAOC,IAAV,+FAMN+G,GAAYhH,KAAOsB,IAAV,sRAcT2F,GAAUjH,KAAOC,IAAV,4OAYPiH,GAAalH,KAAOC,IAAV,mTAcVkH,GAASnH,KAAOoB,EAAV,qIAONgG,GAAapH,KAAOoB,EAAV,qIAOViG,GAAOrH,KAAOsH,GAAV,mIAMJC,GAASvH,KAAOoB,EAAV,yHAMNoG,GAAQxH,KAAOC,IAAV,yQAEM,SAACgC,GAAD,OAAWA,EAAMwF,SAa5B9F,GAAY3B,KAAOC,IAAV,mRAgBTY,GAASb,KAAOC,IAAV,sGC9HJyH,GAvHD,SAAC,GAQR,IAPHC,EAOE,EAPFA,UACAC,EAME,EANFA,aACAC,EAKE,EALFA,KACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,KACAC,EAEE,EAFFA,KACAC,EACE,EADFA,OAEMC,EAAWC,oBACXC,EAAgBD,kBAAO,MACrB/B,EAAqBiC,sBAAW5C,IAAhCW,iBACR,EAA0B5C,oBAAS,IAAnC,oBAAOqB,EAAP,KAAcyD,EAAd,KAsBA,OACI,uCACI,eAAC,GAAD,CACI/E,IAAK6E,EACLjE,QAAQ,+BACRD,KApBC,YAsBJyD,EACG,eAACvD,GAAD,CAAYb,IAAK2E,EAAjB,SACI,gBAAC7D,GAAD,CAAcC,QAAS0D,EAAML,UAAWA,EAAxC,UACI,eAACpD,GAAD,UACI,sBACIT,UAAU,aACVE,MAAO,CAAE9B,MAAO,QAFpB,SAII,uBAAK4B,UAAU,iBAAf,UACI,uBAAKA,UAAU,eAAf,UACI,uBAAKA,UAAU,SAAf,cACMyE,OAAON,GAAQO,SAAS,EAAG,QAEjC,sBAAK1E,UAAU,QAAf,SACKiE,EAAKU,KAAI,SAACvE,EAAMwE,GAAP,OACN,eAAClB,GAAD,CAEIrC,MAAOjB,EACPJ,UAAS,yBAAoBI,GAHjC,SAKI,eAAC8C,GAAD,CACI2B,IAAG,aAAQzE,EAAR,WALFA,WAWrB,uBAAKJ,UAAU,aAAf,UACI,sBACI6E,IAAKb,EACLc,IAAI,iBACJ9E,UAAU,mBAEd,sBAAKA,UAAU,OAAf,yBAEJ,uBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,mBACA,sBAAKA,UAAU,QAAf,SACI,uBAAM+E,SAzD1B,WAChBzC,EAAiB0C,OAAOC,OAAOlB,EAAMhD,IACrC+C,GAAa,SAACoB,GAAD,OAAWA,KACxBV,EAAS,IACTW,OAAOC,SAASC,SAChBf,EAAcgB,QAAQxF,QAoDc,SACI,uBAAKE,UAAU,eAAf,UACI,sBAAKA,UAAU,aAAf,SACI,wBACIuF,YAAY,4BACZC,KAAK,QACLnD,MACItB,EAAMM,OACN,GAEJoE,SA5EnC,SAACC,GAClB,IAAMF,EAAOE,EAAEC,OAAOH,KAChBnD,EAAQqD,EAAEC,OAAOtD,MACvBmC,GAAS,SAACoB,GAAD,oBAAC,gBAAcA,GAAf,mBAAqBJ,EAAOnD,QA4EejC,KAAK,OACLJ,UAAU,iBAGlB,gBAACY,GAAD,kCAEI,eAAC,KAAD,wBAShC,eAACF,GAAD,CACIV,UAAU,eACV,aAAW,cACX6F,QAjFL,WACf/B,GAAa,SAACoB,GAAD,OAAWA,KACxBV,EAAS,YAmFD,SCnEDsB,GAtDI,SAAC,GAAyC,IAAvC/B,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3C,EAA4BzE,oBAAS,GAArC,oBAAOqG,EAAP,KAAeC,EAAf,KACA,EAAkCtG,qBAAS,GAA3C,oBAAOmE,EAAP,KAAkBC,EAAlB,KACMmC,EAAgB5B,kBAAO,MACvB6B,EACO,UADPA,EAEI,OAeV,OACI,eAAC7G,GAAD,UACI,uBAAKW,UAAU,eAAe,cAAS,WAAS,QAAhD,UACI,yBAAQA,UAAU,eAAe6F,QAfzB,WAChB,IAAMM,EAAMC,KAAKC,MAAM,EAAAD,KAAKL,UAC5BC,EAAUG,GACVF,EAAcX,QAAQxF,OAEV,IAARqG,GACArC,GAAa,SAACoB,GAAD,OAAWA,MASpB,SACI,sBAAKlF,UAAU,YAAY6E,IAAKyB,GAAUxB,IAAI,eAElD,eAAC,GAAD,CACIX,OAAQA,EACRD,KAAMA,EACND,KAAMA,EACND,MAAOA,EACPD,KAAMA,EACNF,UAAWA,EACXC,aAAcA,IAEN,IAAXiC,EACG,eAAC,GAAD,CACItG,IAAKwG,EACL5F,QAAQ,2CACRD,KAAM8F,IAGV,eAAC,GAAD,CACIzG,IAAKwG,EACL5F,QAAQ,yCACRD,KAAM8F,MAvB0C,Y,SC3B3DK,GAAMrK,KAAOgD,IAAV,wVACE,qBAAGC,UACD,wBAA0B,iBAgBjCqH,GAAkBtK,KAAOC,IAAV,0lCAoDfsK,GAAUvK,KAAOwK,GAAV,i3EAkGPC,GAAgBzK,KAAOC,IAAV,uVAcX,qBAAGyK,WAA+B,IAAM,OCxLxC,OAA0B,yCCA1B,OAA0B,oCC2D1BC,GAnDA,WACX,MAAkCnH,qBAAS,GAA3C,oBAAOP,EAAP,KAAkB2H,EAAlB,KAEMC,EAAY,WACV5B,OAAO6B,SAAW,IAClBF,GAAa,GAEbA,GAAa,IAIrB7E,sBAAU,WACNkD,OAAO8B,iBAAiB,SAAUF,KACnC,IAEH,IAQQ9F,EAAgBsD,sBAAW5C,IAA3BV,YACR,OACI,qCACI,eAAC,GAAD,CAAK9B,UAAWA,EAAhB,SACI,gBAAC,GAAD,WACI,eAAC,KAAD,CAAMa,UAAU,WAAWkH,GAAG,IAAIrB,QAb/B,WACfsB,iBAAOC,eAYK,SACI,sBAAKtC,IAAI,YAAYD,IAAKwC,OAE9B,eAACZ,GAAD,UACI,gCACI,gBAAC,KAAD,CAAMS,GAAG,aAAalH,UAAU,gBAAhC,UACI,oBAAGA,UAAU,SAAb,6BACA,oBAAGA,UAAU,SAAb,kBACA,uBAAMA,UAAU,cAAhB,SACKiB,EAAYqG,YAGrB,sBAAKtH,UAAU,WAAW6F,QArB/B,WACfV,OAAOoC,KAAK,kCAoBQ,SACI,sBAAK1C,IAAK2C,GAAQ1C,IAAI,iCC6WvC2C,GA1WQ,WACnB,IAAMjC,EAASkC,eAATlC,KACN,EAAwB9F,oBAAS,IAAjC,oBAAOqE,EAAP,KAAa4D,EAAb,KACA,EAA0BjI,oBAAS,IAAnC,oBAAOkI,EAAP,KAAcC,EAAd,KACA,EAAoCnI,oBAAS,IAA7C,oBAAOoI,EAAP,KAAmBC,EAAnB,KACA,EAAoCrI,oBAAS,IAA7C,oBAAOsI,EAAP,KAAkBC,EAAlB,KACA,EAA4BvI,oBAAS,IAArC,oBAAOwI,EAAP,KAAeC,EAAf,KACA,EAA0BzI,oBAAS,IAAnC,oBAAO0I,EAAP,KAAcC,EAAd,KACA,EAA4B3I,oBAAS,IAArC,oBAAO4I,EAAP,KAAeC,EAAf,KACA,EAAyB7I,oBAAS,IAAlC,oBAAO8I,EAAP,KAAYC,EAAZ,KACA,EAAgC/I,oBAAS,IAAzC,oBAAOgJ,EAAP,KAAiBC,EAAjB,KACA,EAAuCjJ,oBAAS,IAAhD,oBAAOkJ,EAAP,KAAmBC,EAAnB,KACA,EAAwBnJ,oBAAS,IAAjC,oBAAOoJ,EAAP,KAAaC,EAAb,KACA,EAA0BrJ,oBAAS,IAAnC,oBAAOsJ,EAAP,KAAcC,EAAd,KAEAhH,sBAAU,WACN,IAAMiH,EAAO,yCAAG,6CAAAC,EAAA,+EAEeC,KAClBC,IADkB,4CACuB7D,IACzC8D,QAJG,OASR,IAPMC,EAFE,OAKR5B,EAAQ4B,EAASxF,MACjBkF,EAASM,EAASxF,KAAK9D,IACjB6H,EAAa,GAEV0B,EAAI,EAAGA,EAAID,EAASxF,KAAK0F,MAAMnC,OAAQkC,KACtCE,EAAM,IACT,WAAiBH,EAASxF,KAAK0F,MAAMD,GAAGG,KAAKnE,KAChDkE,EAAG,UAAgBH,EAASxF,KAAK0F,MAAMD,GAAGI,UAC1C9B,EAAW+B,KAAKH,GAKpB,IAHA3B,EAAcD,GAERc,EAAa,GACVkB,EAAI,EAAGA,EAAIP,EAASxF,KAAKgG,UAAUzC,OAAQwC,IAChDlB,EAAWiB,KAAKN,EAASxF,KAAKgG,UAAUD,GAAGE,QAAQxB,KAKvD,IAHAK,EAAiBD,GAEXhB,EAAQ,GACLkC,EAAI,EAAGA,EAAIP,EAASxF,KAAK6D,MAAMN,OAAQwC,IAC5ClC,EAAMiC,KAAKN,EAASxF,KAAK6D,MAAMkC,GAAG1J,KAAKoF,MAE3CqC,EAASD,GACHqC,EAAY,CACdC,OAAQX,EAASxF,KAAKoG,QAAQC,MAAMC,YAC/BC,cACLC,SACIhB,EAASxF,KAAKoG,QAAQC,MAAM,oBACvBE,eAEb/B,EAAU0B,GAnCF,4GAAH,qDAwCbf,MACD,CAAC1D,IAEJvD,sBAAU,WACN,IAAMuI,EAAc,yCAAG,mDAAArB,EAAA,+EAEQC,KAClBC,IADkB,oDAC+BL,IACjDM,QAJU,OAETC,EAFS,OAKXkB,EAAMhJ,KAAKU,UAAUoH,EAASxF,MAE9B2G,EAAeD,EAAIE,QAAQ,MAAO,IAGlCC,EAASnJ,KAAKC,MAAMgJ,GACxBzC,EAAe2C,GAEPd,EAAI,EAbG,YAcXA,EAAIP,EAASxF,KAAK8G,oBAAoBvD,OAAS,GAdpC,oBAmBP,OADAiC,EAASxF,KAAK8G,oBAAoBf,GAAGgB,SAAStF,KAlBvC,wBAqBDyE,EAAY,CACdc,WACIxB,EAASxF,KAAK8G,oBAAoBf,GAC7BkB,aAEb/C,EAAegC,GA1BR,6BAeXH,IAfW,uBA+BNA,EAAI,EA/BE,aA+BCA,EAAIP,EAASxF,KAAKmE,OAAOZ,OAAS,GA/BnC,oBAgCmC,OAA1CiC,EAASxF,KAAKmE,OAAO4B,GAAGgB,SAAStF,KAhC1B,wBAiCDyE,EAAY,CACd/B,OAAQqB,EAASxF,KAAKmE,OAAO4B,GAAGmB,OAEpC9C,EAAU8B,GApCH,6BA+BsCH,IA/BtC,wBAyCNA,EAAI,EAzCE,aAyCCA,EAAIP,EAASxF,KAAKqE,MAAMd,OAAS,GAzClC,oBA0CkC,OAAzCiC,EAASxF,KAAKqE,MAAM0B,GAAGgB,SAAStF,KA1CzB,wBA2CDyE,EAAY,CACd/F,KAAMqF,EAASxF,KAAKqE,MAAM0B,GAAGtE,MAEjC6C,EAAS4B,GA9CF,6BAyCqCH,IAzCrC,wBAoDPA,EAAI,EApDG,aAqDXA,EAAIP,EAASxF,KAAKmH,gBAAgB1C,IAAIlB,QArD3B,wBAwDL2C,EAAY,CACdzB,IAAKe,EAASxF,KAAKmH,gBAAgB1C,KAEvCC,EAAUwB,GA3DC,6BAsDXH,IAtDW,0EAkEf7B,EAHkB,CACd8C,WAAY,yBAhED,0DAAH,qDAqEpBP,MACD,CAACxB,IAEJ/G,sBAAU,WACN,IAAMkJ,EAAY,yCAAG,uCAAAhC,EAAA,+EAEUC,KAAMC,IAAIb,EAAIA,KAFxB,OAEPe,EAFO,OAGP6B,EAAW,GACbC,EAAU9B,EAASxF,KAAKuH,MAE5B,GACUC,EAAaF,EAAO,kBAAsB,GAChDD,EAASvB,KAAK,CACVb,MAAOO,EAASxF,KAAK9D,GACrBuL,aAAcH,EAAQI,QAAQjG,KAC9BkG,UAAYH,EAAiBA,EAAWG,UAAf,EACzBC,aAAeJ,EAETA,EAAWK,QAAQpG,KADnB,KAENqG,KAAON,EAAoBA,EAAWM,KAAlB,OAExBR,EAAUA,EAAO,WAAe,SACzBA,GAAWA,EAAQS,eAAe,eAEpChC,EAAI,EApBA,YAoBGA,EAAIsB,EAAS9D,QApBhB,kCAqBc8B,KAClBC,IADkB,4CAEsB+B,EAAStB,GAAG0B,eAEpDlC,OAAM,SAACyC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAzBjC,SAqBHxC,EArBG,QA0BAxF,KAAKoG,QAAQC,MAAMC,YAAYC,cACjCc,EAAStB,GAAT,UACGP,EAASxF,KAAKoG,QAAQC,MAAMC,YAAYC,cAC3Cc,EAAStB,GAAT,UACGP,EAASxF,KAAKoG,QAAQC,MAClB,oBACFE,cAhCH,QAoBwBR,IApBxB,uBAkCbnB,EAAYyC,GAlCC,kDA0CbzC,EANkB,CACd,CACI6C,aAAc,WACdU,UAAW,WAvCN,0DAAH,qDA6ClBf,MACD,CAAC3C,IAEJvG,sBAAU,WACN,IAAMkK,EAAU,yCAAG,mCAAAhD,EAAA,+DAELiD,EAAgB,GACbtC,EAAI,EAHF,YAGKA,EAAIlB,EAAWtB,QAHpB,iCAIgB8B,KAAMC,IAAIT,EAAWkB,IAJrC,OAIDP,EAJC,OAKD8C,EAAY,CACdnI,KAAMqF,EAASxF,KAAKyB,KACpB8G,KAAM/C,EAASxF,KAAK8G,oBAAoB,GAAGG,aAE/CoB,EAAcvC,KAAKwC,GATZ,OAG4BvC,IAH5B,uBAWXf,EAAQqD,GAXG,4GAAH,qDAgBhBD,MACD,CAACvD,IAEJ,IAAI2D,EAAa/G,EAAKgH,OAAO,GAAGC,cAAgBjH,EAAKkH,MAAM,GAG3D,OAFAC,SAAStL,MAAT,UAAoBkL,EAApB,oBAGI,uCACI,eAAC,GAAD,IACA,eAACnQ,GAAD,UACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,gBAACG,GAAD,WACI,gBAACC,GAAD,eAAS+H,OAAOV,EAAK9D,IAAIyE,SAAS,EAAG,QACrC,eAAC9H,GAAD,UAAOmH,EAAKyB,UAEhB,gBAAC1I,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,wBACA,gBAACC,GAAD,WAAS8G,EAAK6I,OAAd,WAEJ,gBAAC7P,GAAD,WACI,eAACC,GAAD,wBACA,gBAACC,GAAD,WAAS8G,EAAK8I,OAAS,GAAvB,cAGR,gBAAC3P,GAAD,WACI,eAACR,GAAD,qBACA,eAACG,GAAD,UAAaqL,EAAOA,eAG5B,gBAAC3L,GAAD,WACI,gBAACoC,GAAD,WACuB,OAAlB2J,EAAO4B,OACJ,eAAC3M,GAAD,CACIsH,IAAKyD,EAAOiC,WAGhB,eAAChN,GAAD,CACIsH,IAAKyD,EAAO4B,SAIpB,eAACzM,GAAD,UAAU2K,EAAMlE,UAEpB,gBAACtF,GAAD,WACI,eAACH,GAAD,yBACA,eAACM,GAAD,UACK2J,EAAS/D,KAAI,SAACmI,EAAWlI,GAAZ,OACV,eAAC,KAAD,CACI1E,MAAO,CAAE6M,eAAgB,QAEzB7F,GACI,YAAc4F,EAAUtB,aAJhC,SAOI,gBAAC3M,GAAD,WACI,eAACC,GAAD,CACI+F,IAAKiI,EAAUZ,YAEnB,eAAClN,GAAD,UACK8N,EAAUtB,mBAVd5G,cAkBzB,gBAACpI,GAAD,WACI,gBAACW,GAAD,WACI,eAACC,GAAD,oBACA,eAACC,GAAD,UAAc2K,EAAU+C,gBAE5B,gBAAClN,GAAD,WACI,gBAACC,GAAD,WACK8J,EAAMjD,KAAI,SAACV,EAAMW,GAAP,OACP,gBAAChH,GAAD,CACI,cACA,WAAUqG,EAEVjE,UAAS,yBAAoBiE,GAJjC,UAMI,eAACtG,GAAD,CAAMkH,IAAG,aAAQZ,EAAR,UACT,eAAC,KAAD,CACI+I,MAAM,MACN5M,KAAK,QACL6M,OAAO,QACPhN,GAAIgE,EAJR,SAMI,oBACI/D,MAAO,CACHgN,SAAU,GACVC,WAAY,KAHpB,SAMKlJ,QAhBJA,MAqBb,eAAC,GAAD,CACIC,KAAMH,EAAKyB,KACXvB,KAAM2D,EACN5D,MAAOsE,EAAO4B,OACdnG,KAAMA,EACNI,OAAQJ,EAAK9D,QAGrB,eAACxB,GAAD,wBACA,eAACF,GAAD,UACKuJ,EAAWnD,KAAI,SAACyI,EAAWxI,GAAZ,OACZ,gBAACpG,GAAD,WACI,gBAACF,GAAD,WAAO8O,EAAUC,WAAjB,QACA,eAAChP,GAAD,UACI,eAACJ,GAAD,UACI,eAACC,GAAD,CACI8B,UACIoN,EAAUC,WAEdjP,MACIgP,EAAUE,UAAY,QAKtC,eAAC5O,GAAD,UACK0O,EAAUE,cAfH1I,WAqB5B,gBAACzH,GAAD,WACI,eAACC,GAAD,wBACA,eAACY,GAAD,UACK8K,EAAKnE,KAAI,SAACqF,EAASpF,GAAV,OACN,gBAAC7G,GAAD,CACI,cACA,WAAUiM,EAAQ9F,KAFtB,UAKI,eAACjF,GAAD,UAAU+K,EAAQ9F,OAClB,eAAC,KAAD,CACI8I,MAAM,MACN5M,KAAK,QACL6M,OAAO,QACPhN,GAAI+J,EAAQ9F,KAJhB,SAMI,oBAAGhE,MAAO,CAAEgN,SAAU,IAAtB,SACKlD,EAAQsC,WAVZ1H,uBCpYhC2I,GAAkBrR,KAAOC,IAAV,wiBA0BfqR,GAAgBtR,KAAOC,IAAV,kgBAsBbsR,GAAcvR,KAAOC,IAAV,qgBAmCXuR,IAbYxR,KAAOsB,IAAV,kRAaDtB,KAAOyR,MAAMC,OAAM,SAACzP,GAAD,MAAY,CAChDiC,KAAM,UADWlE,CAAH,imBA2BJ,SAACiC,GAAD,OAAWA,EAAM0P,QAChB,SAAC1P,GAAD,OAAWA,EAAM0P,S,SCtG1BC,GAAe,CACjBC,QAAS,SAACC,GAAD,oBAAC,gBAEHA,GAFE,IAGL5P,MAAO,IACP+B,gBAAiB,QACjB8N,QAAS,OACTC,aAAc,EACdC,OAAQ,OACRC,UAAW,OACX,6CAA8C,CAC1CjO,gBAAiB,QACjBgO,OAAQ,OACR/P,MAAO,IACPiQ,QAAS,OACTD,UAAW,QAEf,qEAAsE,CAClEjO,gBAAiB,QACjBgO,OAAQ,OACR/P,MAAO,IACPiQ,QAAS,OACTD,UAAW,QAGf,oEAAqE,CACjEjO,gBAAiB,QACjBgO,OAAQ,OACR/P,MAAO,IACPiQ,QAAS,OACTD,UAAW,QAGf,oEAAqE,CACjEjO,gBAAiB,QACjBgO,OAAQ,OACR/P,MAAO,IACPiQ,QAAS,OACTD,UAAW,YAKjBE,GAAa,CACfC,YAAa,MACbC,WAAY,MACZ,kDAAmD,CAC/CD,YAAa,OACbC,WAAY,SAIdC,G,gKACF,WACI,IAEMC,EAFaC,KAAKxQ,MAAMyQ,QAEIjK,KAAI,SAACkK,GAAD,MAAoB,CACtDC,MACID,EAAcrJ,KACd,OACCqJ,EAAcE,OAAS,GACxB,OACCF,EAAcG,MAAQH,EAAcE,QACrC,KACJ1M,MAAOwM,EAAcrJ,KACrBZ,IAAKiK,EAAcrJ,SAKjByJ,EAFaN,KAAKxQ,MAAMyJ,MAEEjD,KAAI,SAACuK,GAAD,MAAiB,CACjDJ,MAAOI,EACP7M,MAAO6M,EACPtK,IAAKsK,MAKHC,EAFcR,KAAKxQ,MAAMiR,OAEGzK,KAAI,SAAC0K,GAAD,MAAkB,CACpDP,MAAOO,EACPhN,MAAOgN,EACPzK,IAAKyK,MAGT,OACI,qCACI,eAAC9B,GAAD,UACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAAC,KAAD,CACI9J,MAAM,qBACNuJ,SAAS,QACThN,MAAOoO,KAGX,eAAC,KAAD,CACI/I,YAAY,UACZyI,OAAQF,GACRwB,QAASZ,EACTjJ,SAAUkJ,KAAKxQ,MAAMoR,mBAI7B,gBAAC9B,GAAD,WACI,eAAC,KAAD,CACI9J,MAAM,qBACNuJ,SAAS,QACThN,MAAOoO,KAEX,eAAC,KAAD,CACI/I,YAAY,QACZyI,OAAQF,GACRwB,QAASL,EACTxJ,SAAUkJ,KAAKxQ,MAAMqR,iBAG7B,gBAAC/B,GAAD,WACI,eAAC,KAAD,CACI9J,MAAM,qBACNuJ,SAAS,QACThN,MAAOoO,KAEX,eAAC,KAAD,CACI/I,YAAY,UACZyI,OAAQF,GACRwB,QAASH,EACT1J,SAAUkJ,KAAKxQ,MAAMsR,gBAG7B,gBAAChC,GAAD,WACI,eAAC,KAAD,CACI9J,MAAM,qBACNuJ,SAAS,QACThN,MAAOoO,KAEX,eAACZ,GAAD,CACIrL,MAAOsM,KAAKxQ,MAAMuR,YAClBjK,SAAUkJ,KAAKxQ,MAAMwR,aACrBpK,YAAY,yB,GAtFtBqK,KAAMC,WAgGbpB,MC/JA,OAA0B,oCCE5BqB,GAAgB5T,KAAOC,IAAV,6uBAiCb4T,GAAc7T,KAAOC,IAAV,uQAYX6T,GAAU9T,KAAOC,IAAV,+CAIP8T,GAAQ/T,KAAOgU,GAAV,mHAML7S,GAAcnB,KAAOiU,GAAV,uXAgBXC,GAAalU,KAAOC,IAAV,wgBAsBVkU,GAAiBnU,KAAOC,IAAV,yiBAuBdmU,GAAUpU,KAAOsB,IAAV,oQAaP+S,GAAUrU,KAAOC,IAAV,gFAKPqU,GAAYtU,KAAOoB,EAAV,4FAKTmT,GAAmBvU,KAAOoB,EAAV,mHAMhBoT,GAAcxU,KAAOiN,EAAV,0iBAuBXwH,GAAoBzU,KAAOC,IAAV,wrBA8BjByU,GAAgB1U,KAAOC,IAAV,mNAWb0U,GAAoB3U,KAAOC,IAAV,6FC/JjB2U,GAAkB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC9B,EAAkDxM,sBAAW5C,IAArDa,EAAR,EAAQA,yBAA0BvB,EAAlC,EAAkCA,YAW5B+P,EAAc3M,kBAAO,MACrB4M,EAAe5M,kBAAO,MAEtB6B,EAEI,OAEV,OACI,qCACI,gBAAC4J,GAAD,WACI,eAACC,GAAD,UACI,gBAACC,GAAD,WACI,eAACC,GAAD,gCACA,eAAC,GAAD,UAAcc,SAGtB,eAACV,GAAD,UACI,gBAACO,GAAD,WACI,eAACF,GAAD,0BACA,gBAACG,GAAD,WACI,eAAC,GAAD,CAAShM,IAAKwC,KACd,gBAACkJ,GAAD,WACI,eAACC,GAAD,yBACA,eAACC,GAAD,kCAKR,eAACE,GAAD,UAC4B,IAAvB1P,EAAYqG,OACT,yBACItH,UAAU,gBACV6F,QApCQ,WACpCoL,EAAa3L,QAAQxF,QAiCG,2CAOA,yBACIE,UAAU,gBACV6F,QAhDA,WAC5BrD,IACAwO,EAAY1L,QAAQxF,QA4CI,uCAQR,eAAC,GAAD,CACIL,IAAKuR,EACL3Q,QAAQ,qCACRD,KAAM8F,IAEV,eAAC,GAAD,CACIzG,IAAKwR,EACL5Q,QAAQ,iCACRD,KAAM8F,eASnBgL,GAvGK,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,YACnB,OACI,qCACI,gBAACjB,GAAD,WACI,eAACC,GAAD,UACI,gBAACC,GAAD,WACI,eAACC,GAAD,gCACA,eAAC,GAAD,UAAcc,SAGtB,eAACX,GAAD,UACI,gBAACQ,GAAD,WACI,eAACF,GAAD,0BACA,gBAACG,GAAD,WACI,eAAC,GAAD,CAAShM,IAAKwC,KACd,gBAACkJ,GAAD,WACI,eAACC,GAAD,yBACA,eAACC,GAAD,6C,SCZjB,SAASU,GAAQhT,GAC5B,IAAQ8B,EAA0C9B,EAA1C8B,GAAI+D,EAAsC7F,EAAtC6F,MAAOwB,EAA+BrH,EAA/BqH,KAAMpF,EAAyBjC,EAAzBiC,KAAMwM,EAAmBzO,EAAnByO,OAAQC,EAAW1O,EAAX0O,OACvC,OACI,qCACI,eAAC,KAAD,CAAM3F,GAAI,YAAc1B,EAAxB,SACI,eAAC,GAAD,CAAMhF,QAASgF,EAAf,SACI,gBAACrC,GAAD,WACI,gBAACJ,GAAD,WACI,gBAAC,GAAD,gBAAW0B,OAAOxE,GAAIyE,SAAS,EAAG,QAClC,eAAC,GAAD,UACKtE,EAAKuE,KAAI,SAACvE,EAAMwE,GAAP,OACN,eAAClB,GAAD,CAEIrC,MAAOjB,EAAKA,KAAKoF,KACjBxF,UAAS,yBAAoBI,EAAKA,KAAKoF,MAH3C,SAKI,eAACtC,GAAD,CACI2B,IAAG,UAAKzE,EAAKA,KAAKoF,KAAf,WALFpF,EAAKA,KAAKoF,cAW/B,gBAACxC,GAAD,WACI,eAACL,GAAD,CAAWkC,IAAKb,IAChB,eAACT,GAAD,CAAM6N,UAAU,KAAhB,SAAsB5L,OAE1B,gBAACvC,GAAD,WACI,eAAC,GAAD,UACI,eAACP,GAAD,sBAEJ,gBAACU,GAAD,WACI,gBAAC,GAAD,WACI,eAACC,GAAD,qBACA,gBAACC,GAAD,WAAasJ,EAAb,WAEJ,gBAAC,GAAD,WACI,eAACvJ,GAAD,qBACA,gBAACC,GAAD,WAAauJ,EAAS,GAAtB,0BAW7B,SAASwE,GAAgBlT,GAC5B,IAQ2BkE,EARnBpC,EAAoD9B,EAApD8B,GAAI+D,EAAgD7F,EAAhD6F,MAAOwB,EAAyCrH,EAAzCqH,KAAMpF,EAAmCjC,EAAnCiC,KAAMwM,EAA6BzO,EAA7ByO,OAAQC,EAAqB1O,EAArB0O,OAAQyE,EAAanT,EAAbmT,SACvC/O,EAA0BgC,sBAAW5C,IAArCY,sBACF+B,EAAgBD,kBAAO,MAU7B,OACI,uCACI,eAAC,GAAD,CACI5E,IAAK6E,EACLjE,QAAQ,iCACRD,KAXF,SAaF,eAACwC,GAAD,CAAUpC,QAASgF,EAAnB,SACI,gBAACrC,GAAD,WACI,gBAACJ,GAAD,WACI,gBAAC,GAAD,gBAAW0B,OAAOxE,GAAIyE,SAAS,EAAG,QAElC,gBAAC,GAAD,WACI,gBAAChB,GAAD,CACI,cACA,WAAS,SAETxD,MAAO,CAAEC,gBAAiB,OAC1BH,UAAU,iBALd,UAOI,yBACIE,MAAO,CACHqR,WAAY,cACZC,OAAQ,UACRvD,QAAS,OACTwD,WAAY,UAEhB5L,SA/BLxD,EA+BgCiP,EA/BtB,WACjC/O,EAAsBF,GACtBiC,EAAcgB,QAAQxF,SAsBE,SASI,eAAC,KAAD,CAAKE,UAAU,iBAEnB,eAAC,KAAD,CACIgN,MAAM,MACN5M,KAAK,QACL6M,OAAO,QACPhN,GAAG,SAJP,SAMI,oBACIC,MAAO,CACHgN,SAAU,GACVC,WAAY,KAHpB,wBArBA,UAgCP/M,EAAKuE,KAAI,SAACvE,EAAMwE,GAAP,OACN,eAAClB,GAAD,CAEIrC,MAAOjB,EAAKA,KAAKoF,KACjBxF,UAAS,yBAAoBI,EAAKA,KAAKoF,MAH3C,SAKI,eAACtC,GAAD,CACI2B,IAAG,UAAKzE,EAAKA,KAAKoF,KAAf,WALFpF,EAAKA,KAAKoF,eAW/B,eAAC,KAAD,CAAM0B,GAAI,YAAc1B,EAAxB,SACI,gBAACxC,GAAD,WACI,eAACL,GAAD,CAAWkC,IAAKb,IAChB,gBAACT,GAAD,CAAM6N,UAAU,KAAhB,UACK5L,EACD,qBAAGtF,MAAO,CAAEyD,MAAO,WAAnB,cAAkC2N,EAAlC,eAIZ,gBAACrO,GAAD,WACI,eAAC,GAAD,UACI,eAACP,GAAD,sBAEJ,gBAACU,GAAD,WACI,gBAAC,GAAD,WACI,eAACC,GAAD,qBACA,gBAACC,GAAD,WAAasJ,EAAb,WAEJ,gBAAC,GAAD,WACI,eAACvJ,GAAD,qBACA,gBAACC,GAAD,WAAauJ,EAAS,GAAtB,yBC3KjB,I,uFAAA,OAA0B,oCCE5B6E,GAAcxV,KAAOC,IAAV,+UAgBXwV,GAAiBzV,KAAOC,IAAV,2cAyBd4G,GAAS7G,KAAOC,IAAV,mLASN6G,GAAQ9G,KAAOC,IAAV,6JASL8G,GAAS/G,KAAOC,IAAV,8EAKNsH,GAASvH,KAAOC,IAAV,uOAUNuH,GAAQxH,KAAOC,IAAV,+MAUL0B,GAAY3B,KAAOC,IAAV,4FAMT+G,GAAYhH,KAAOC,IAAV,qPAWTuG,GAAYxG,KAAOoB,EAAV,6OAWTF,GAAQlB,KAAOC,IAAV,8UAeLiH,GAAalH,KAAOC,IAAV,kTAcVkH,GAASnH,KAAOoB,EAAV,oNAUNgG,GAAapH,KAAOoB,EAAV,oNAUVP,GAASb,KAAOC,IAAV,sGAMNwG,GAAYzG,KAAOC,IAAV,2PAWToH,GAAOrH,KAAOsH,GAAV,+LAQJoO,GAAc1V,KAAOC,IAAV,4GChIT0V,GAtCC,WACZ,OACI,eAACD,GAAD,UACI,eAACF,GAAD,UACI,gBAACC,GAAD,WACI,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,UACI,eAAC,GAAD,UACI,eAAC,GAAD,WAIZ,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,0BAEJ,gBAAC,GAAD,WACI,eAAC,GAAD,UACI,eAAC,GAAD,sBAEJ,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAAC,GAAD,qBACA,eAAC,GAAD,uBAEJ,gBAAC,GAAD,WACI,eAAC,GAAD,qBACA,eAAC,GAAD,sC,UClD1BG,GAEE,QAFFA,GAIE,QAJFA,GAKE,SALFA,GAOE,SAPFA,GASE,SAGKC,GAAU,CACnBC,WAAW,sCAAD,OAZN,QAYM,6BAA2EF,GAA3E,KACVG,MAAM,sCAAD,OAAwCH,GAAxC,6BAA2EA,GAA3E,KACLI,OAAO,sCAAD,OAAwCJ,GAAxC,6BAA2EA,GAA3E,KACNK,OAAO,sCAAD,OAAwCL,GAAxC,6BAA2EA,GAA3E,KAENM,SAAS,sCAAD,OAAwCN,GAAxC,KACRO,aAAa,sCAAD,OAAwCP,GAAxC,MChBHQ,GAAoBpW,KAAOC,IAAV,kYAYxB4V,GAAQI,OAIRJ,GAAQG,OAIRH,GAAQE,OAKDM,GAAkBrW,KAAOC,IAAV,6bAMtB4V,GAAQI,OAKRJ,GAAQG,OAKRH,GAAQE,MAKRF,GAAQC,YAKDQ,GAAetW,KAAOC,IAAV,0UAMnB4V,GAAQE,MAMRF,GAAQC,YAODrU,GAAOzB,KAAOsB,IAAV,yTAgBJH,GAAcnB,KAAOoB,EAAV,oVAMlByU,GAAQE,MAMRF,GAAQC,YAODpU,GAAc1B,KAAOC,IAAV,0MA2BXyV,IAjBO1V,KAAOoB,EAAV,+IAOKpB,KAAOC,IAAV,yLAUQD,KAAOC,IAAV,ukBAWd4V,GAAQI,OAIRJ,GAAQG,OAIRH,GAAQE,MAIRF,GAAQC,aAULS,IAJsBvW,KAAOC,IAAV,qDAIAD,KAAOC,IAAV,wIAKvB4V,GAAQC,aC/ICU,GAzBA,WACX,MAAoChT,qBAAS,GAA7C,oBAAOkH,EAAP,KAAmB+L,EAAnB,KAEMC,EAAa,WACXzN,OAAO6B,SAAW,IAClB2L,GAAc,GAEdA,GAAc,IAItB1Q,sBAAU,WACNkD,OAAO8B,iBAAiB,SAAU2L,KACnC,IAMH,OACI,eAACjM,GAAD,CAAeC,WAAYA,EAAYf,QALxB,WACfsB,iBAAOC,eAIP,SACI,eAAC,KAAD,OCJCyL,GAAb,oDACI,WAAY1U,GAAQ,IAAD,+BACf,cAAMA,IA2GV2U,eA5GmB,yCA4GF,WAAO/D,EAAQC,GAAf,gBAAA7F,EAAA,sEACUC,KAClBC,IADkB,kDAE4B2F,EAF5B,mBAE4CD,IAE9DzF,OAAM,SAACyC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAL7B,OACPxC,EADO,OAMb,EAAKwJ,eAAexJ,EAASxF,KAAKiP,SANrB,2CA5GE,0DAqHnBD,eArHmB,yCAqHF,WAAOE,GAAP,sBAAA9J,EAAA,6DAEP+J,EAAa,GACfC,EAAY,GAHH,SAIPC,QAAQC,IACVJ,EAAOtO,KAAI,SAAC2O,GACR,OAAOlK,KACFC,IADE,4CAEsCiK,EAAY9N,OAEpD+N,MAAK,SAACN,GACHC,EAAWrJ,KAAKoJ,EAAOlP,aAX1B,OAgBb,GADAmP,EAAWM,MAAK,SAACrK,EAAGsK,GAAJ,OAAWtK,EAAElJ,GAAKwT,EAAExT,GAAK,EAAIwT,EAAExT,GAAKkJ,EAAElJ,IAAM,EAAI,KAC5D,EAAKc,MAAM2S,eAAgB,CAC3B,IAAS5J,EAAI,EAAGA,EAAIoJ,EAAW5L,OAAQwC,IACnC,IAASN,EAAI,EAAGA,EAAI0J,EAAWpJ,GAAGlC,MAAMN,OAAQkC,IAExC,EAAKzI,MAAM4S,eACXT,EAAWpJ,GAAGlC,MAAM4B,GAAGpJ,KAAKoF,MAE5B2N,EAAUtJ,KAAKqJ,EAAWpJ,IAItC,EAAKtF,SAAS,CACVoP,UAAU,EACVC,eAAgBV,EAChBW,YAAaZ,EACba,aAAa,SAGjB,EAAKvP,SAAS,CACVoP,UAAU,EACVE,YAAaZ,EACba,aAAa,IArCR,2CArHE,wDA+JnBC,gBA/JmB,yCA+JD,WAAOxL,GAAP,sBAAAW,EAAA,sEAESC,KAClBC,IAAIb,GACJc,OAAM,SAACyC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAJ5B,OAERxC,EAFQ,OAMR6B,EAAW,GACbC,EAAU9B,EAASxF,KAAKuH,MAC5B,GACUC,EAAaF,EAAO,kBAAsB,GAChDD,EAASvB,KAAK,CACV2B,aAAcH,EAAQI,QAAQjG,KAC9BkG,UAAYH,EAAiBA,EAAWG,UAAf,EACzBC,aAAeJ,EAAoBA,EAAWK,QAAQpG,KAA1B,KAC5BqG,KAAON,EAAoBA,EAAWM,KAAlB,OAExBR,EAAUA,EAAO,WAAe,SACzBA,GAAWA,EAAQS,eAAe,eAC7C,EAAKmI,eAAe7I,GAlBN,2CA/JC,wDAoLnB6I,eApLmB,yCAoLF,WAAOC,GAAP,kBAAA/K,EAAA,sDAEJW,EAAI,EAFA,YAEGA,EAAIoK,EAAY5M,QAFnB,gCAGc8B,KAClBC,IADkB,4CAEsB6K,EAAYpK,GAAG0B,eAEvDlC,OAAM,SAACyC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAPjC,QAGHxC,EAHG,QAQAxF,KAAKoG,QAAQC,MAAMC,YAAYC,cACjC4J,EAAYpK,GAAZ,UACGP,EAASxF,KAAKoG,QAAQC,MAAMC,YAAYC,cAC3C4J,EAAYpK,GAAZ,UACGP,EAASxF,KAAKoG,QAAQC,MAClB,oBACFE,cAdH,OAE2BR,IAF3B,sBAgBb,EAAKtF,SAAS,CACV4G,SAAU8I,IAjBD,4CApLE,wDAyMnBC,iBAzMmB,yCAyMA,WAAOhQ,EAAQiQ,EAASC,EAAUC,GAAlC,4BAAAnL,EAAA,sEAEQC,KAClBC,IADkB,4CACuB+K,IACzC9K,OAAM,SAACyC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAJ3B,OASf,IAPMxC,EAFS,OAMTzB,EAAa,GACfyM,EAAM,GACJtU,EAAKsJ,EAASxF,KAAK9D,GAChB6J,EAAI,EAAGA,EAAIP,EAASxF,KAAKgG,UAAUzC,OAAQwC,IAChDyK,EAAI1K,KAAKN,EAASxF,KAAKgG,UAAUD,GAAGE,QAAQxE,MAEhD,IAASgE,EAAI,EAAGA,EAAID,EAASxF,KAAK0F,MAAMnC,OAAQkC,KACtCE,EAAM,IACT,WAAiBH,EAASxF,KAAK0F,MAAMD,GAAGG,KAAKnE,KAChDkE,EAAG,UAAgBH,EAASxF,KAAK0F,MAAMD,GAAGI,UAC1C9B,EAAW+B,KAAKH,GAEpB,EAAKlF,SAAS,CACVoI,OAAQrD,EAASxF,KAAK6I,OACtBC,OAAQtD,EAASxF,KAAK8I,OACtBwH,WACAG,WAAYvU,EACZqU,WACAG,SAAUL,EACVM,UAAU,EACVjL,MAAO3B,EACPiC,UAAWwK,IAEf,EAAK/P,SAAS,CACV4G,SAAU,GACVuJ,WAAY,GACZzM,OAAQ,KAEZ,EAAK0M,wBAAwBR,GAlCd,4CAzMA,8DA8OnBQ,wBA9OmB,yCA8OO,WAAOC,GAAP,sBAAA1L,EAAA,6DAElBjB,EAAS,GAFS,SAGCkB,KAClBC,IADkB,oDAC+BwL,IACjDvL,OAAM,SAACyC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MALpB,OAGhBxC,EAHgB,OAMtB,EAAKyK,gBAAgBzK,EAASxF,KAAKmH,gBAAgB1C,KAN7B,SASVsB,EAAI,EATM,YAUdA,EAAIP,EAASxF,KAAK8G,oBAAoBvD,OAAS,GAVjC,oBAc6C,OAAvDiC,EAASxF,KAAK8G,oBAAoBf,GAAGgB,SAAStF,KAdpC,wBAgBV,EAAKzE,MAAMgQ,YACPxH,EAASxF,KAAK8G,oBAAoBf,GAAGkB,YAjB/B,6BAWdlB,IAXc,uBAqBTN,EAAI,EArBK,aAqBFA,EAAID,EAASxF,KAAKmE,OAAOZ,QArBvB,oBAsBgC,OAA1CiC,EAASxF,KAAKmE,OAAOsB,GAAGsB,SAAStF,KAtBvB,wBAuBV0C,EAASqB,EAASxF,KAAKmE,OAAOsB,GAAGyB,MAvBvB,6BAqB+BzB,IArB/B,wBA2BlB,EAAKhF,SAAS,CACVuM,YAAa,EAAKhQ,MAAMgQ,YACxB4D,WAAYpL,EAASxF,KAAK+Q,YAC1B5M,WA9Bc,kDAiClB,EAAK1D,SAAS,CACVuM,YAAa,0BAlCC,0DA9OP,wDAqRnBgE,oBAAsB,SAAC1S,GAEnB,IAAK,IAAIyH,EAAI,EAAGA,EAAI,EAAK/I,MAAM6N,QAAQtH,OAAQwC,IAC3C,GAAI,EAAK/I,MAAM6N,QAAQ9E,GAAGtE,OAASnD,EAAMA,MAAO,CAC5C,EAAKmC,SAAS,CACVwQ,YAAa3S,EAAMA,MAEnB4S,SAAU,KACVC,UAAU,EACVtB,UAAU,EACVG,aAAa,IAEjB,EAAKjB,eACD,EAAK/R,MAAM6N,QAAQ9E,GAAGiF,OACtB,EAAKhO,MAAM6N,QAAQ9E,GAAGkF,OAE1B,QArSO,EA2SnBmG,kBAAoB,SAAC9S,GAEjB,GAAoB,cAAhBA,EAAMA,MAAV,CAyBI,EAAKmC,SAAS,CACVkP,gBAAgB,EAChBC,aAActR,EAAMA,QAI5B,IADA,IAAI8Q,EAAY,GACPrJ,EAAI,EAAGA,EAAI,EAAK/I,MAAM+S,YAAYxM,OAAQwC,IAC/C,IAAK,IAAIN,EAAI,EAAGA,EAAI,EAAKzI,MAAM+S,YAAYhK,GAAGlC,MAAMN,OAAQkC,IAEpDnH,EAAMA,QAAU,EAAKtB,MAAM+S,YAAYhK,GAAGlC,MAAM4B,GAAGpJ,KAAKoF,MAExD2N,EAAUtJ,KAAK,EAAK9I,MAAM+S,YAAYhK,IAI1B,SAAxB,EAAK/I,MAAMkU,SACL9B,EAAUK,MAAK,SAACrK,EAAGsK,GAAJ,OACXtK,EAAE3D,KAAOiO,EAAEjO,KAAO,EAAIiO,EAAEjO,KAAO2D,EAAE3D,MAAQ,EAAI,KAEjD2N,EAAUK,MAAK,SAACrK,EAAGsK,GAAJ,OACXtK,EAAElJ,GAAKwT,EAAExT,GAAK,EAAIwT,EAAExT,GAAKkJ,EAAElJ,IAAM,EAAI,KAE/C,EAAKuE,SAAS,CACV0Q,UAAU,EACVxF,YAAa,GACbkE,UAAU,EACVC,eAAgBV,EAChBiC,UAAW/S,EAAMA,QAEA,IAArB8Q,EAAU7L,OACJ,EAAK9C,SAAS,CAAE6Q,aAAa,IAC7B,EAAK7Q,SAAS,CAAE6Q,aAAa,QAxDnC,CACI,IAAMC,EAAU,EAAKvU,MAAM+S,YACC,SAAxB,EAAK/S,MAAMkU,UACXK,EAAQ9B,MAAK,SAACrK,EAAGsK,GAAJ,OACTtK,EAAE3D,KAAOiO,EAAEjO,KAAO,EAAIiO,EAAEjO,KAAO2D,EAAE3D,MAAQ,EAAI,KAEjD,EAAKhB,SAAS,CACVoP,UAAU,EACVwB,UAAW/S,EAAMA,MACjByR,YAAawB,EACb5B,gBAAgB,MAGpB4B,EAAQ9B,MAAK,SAACrK,EAAGsK,GAAJ,OACTtK,EAAElJ,GAAKwT,EAAExT,GAAK,EAAIwT,EAAExT,GAAKkJ,EAAElJ,IAAM,EAAI,KAEzC,EAAKuE,SAAS,CACVoP,UAAU,EACVwB,UAAW/S,EAAMA,MACjByR,YAAawB,EACb5B,gBAAgB,OAjUb,EAwWnB6B,iBAAmB,SAAClT,GAChB,IAAImT,EAEGA,EADP,EAAKzU,MAAM6S,SACM,EAAK7S,MAAM8S,eACX,EAAK9S,MAAM+S,YACR,OAAhBzR,EAAMA,MACNmT,EAAQhC,MAAK,SAACrK,EAAGsK,GAAJ,OAAWtK,EAAElJ,GAAKwT,EAAExT,GAAK,EAAIwT,EAAExT,GAAKkJ,EAAElJ,IAAM,EAAI,KAE7DuV,EAAQhC,MAAK,SAACrK,EAAGsK,GAAJ,OACTtK,EAAE3D,KAAOiO,EAAEjO,KAAO,EAAIiO,EAAEjO,KAAO2D,EAAE3D,MAAQ,EAAI,KAGrD,EAAKzE,MAAM6S,SACL,EAAKpP,SAAS,CACVqP,eAAgB2B,EAChBP,SAAU5S,EAAMA,QAEpB,EAAKmC,SAAS,CACVsP,YAAa0B,EACbP,SAAU5S,EAAMA,QAE1B2J,QAAQC,IAAI5J,EAAMA,QA7XH,EAgYnBoT,mBAAqB,SAACC,GAElBA,EAAM/P,OAAOtD,MAAMiF,OAAS,EACtB,EAAK9C,SAAS,CACV0Q,UAAU,EACVE,UAAW,YACX1F,YAAagG,EAAM/P,OAAOtD,QAE9B,EAAKmC,SAAS,CACV0Q,UAAU,EACVtB,UAAU,EACVlE,YAAagG,EAAM/P,OAAOtD,QAGpC,IADA,IAAIsT,EAAY,GACP7L,EAAI,EAAGA,EAAI,EAAK/I,MAAM+S,YAAYxM,OAAQwC,KAG3C,EAAK/I,MAAM+S,YAAYhK,GAAGtE,KAAKoQ,SAC3BF,EAAM/P,OAAOtD,MAAMwT,gBAEvB,EAAK9U,MAAM+S,YAAYhK,GAAG7J,GACrB6V,WACAF,SAASF,EAAM/P,OAAOtD,SAE3BsT,EAAU9L,KAAK,EAAK9I,MAAM+S,YAAYhK,IAGzB,IAArB6L,EAAUrO,OACJ,EAAK9C,SAAS,CAAE6Q,aAAa,EAAMU,eAAgB,KACnD,EAAKvR,SAAS,CAAE6Q,aAAa,EAAOU,eAAgBJ,KA7Z3C,EAianBK,YAAc,WACV7Q,OAAM,SAAa,CACf8Q,IAAKtJ,SAASuJ,KAAKC,aACnBC,SAAS,YAlab,EAAKrV,MAAQ,CACT+S,YAAa,GACbiC,eAAgB,GAChBlC,eAAgB,GAChBzI,SAAU,GACVrB,UAAW,GACX8C,OAAQ,GACRD,OAAQ,GACRyJ,UAAW,GACX5M,MAAO,GACP6K,SAAU,GACVG,SAAU,GACVD,WAAY,GACZG,WAAY,GACZzM,OAAQ,GACRwL,gBAAgB,EAChBC,aAAc,GACde,UAAU,EACVQ,UAAU,EACVoB,aAAc,GACdvF,YAAa,GACbgD,aAAa,EACbH,UAAU,EACVyB,aAAa,EACbrG,MAAO,IACPD,OAAQ,EACRwH,WAAW,EACXC,OAAQ,GACRC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZ/H,QAAS,CACL,CACIpJ,KAAM,QACNwJ,MAAO,IACPD,OAAQ,GAEZ,CACIvJ,KAAM,QACNwJ,MAAO,IACPD,OAAQ,KAEZ,CACIvJ,KAAM,QACNwJ,MAAO,IACPD,OAAQ,KAEZ,CACIvJ,KAAM,SACNwJ,MAAO,IACPD,OAAQ,KAEZ,CACIvJ,KAAM,QACNwJ,MAAO,IACPD,OAAQ,KAEZ,CACIvJ,KAAM,QACNwJ,MAAO,GACPD,OAAQ,KAEZ,CACIvJ,KAAM,QACNwJ,MAAO,GACPD,OAAQ,KAEZ,CACIvJ,KAAM,QACNwJ,MAAO,GACPD,OAAQ,MAGhBnH,MAAO,CACH,YACA,QACA,MACA,OACA,SACA,WACA,QACA,WACA,OACA,SACA,QACA,SACA,MACA,SACA,SACA,UACA,OACA,QACA,SAEJwH,OAAQ,CAAC,KAAM,SAhGJ,EADvB,sDAqGI,WACIT,KAAKmE,eAAenE,KAAK5N,MAAMgO,OAAQJ,KAAK5N,MAAMiO,SAtG1D,gCAyGI,cAzGJ,oBAyaI,WAAU,IAAD,OACC4H,EAAU,CACZC,QAAS,CACLC,QAAS,EACTC,WAAY,CACRC,KAAM,iBACNC,gBAAiB,IACjBC,cAAe,MAGvBC,OAAQ,CACJL,QAAS,EACTC,WAAY,CACRC,KAAM,mBAKZI,EAAW,CACbP,QAAS,CAAEC,QAAS,EAAGO,EAAG,GAC1BF,OAAQ,CAAEL,QAAS,EAAGO,GAAI,MAK9B,OAFA1K,SAAStL,MAAT,gBAGI,uCACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,CACI0P,YAAY,6EAGhB,eAACuG,GAAD,CACI1I,QAASD,KAAK5N,MAAM6N,QACpBhH,MAAO+G,KAAK5N,MAAM6G,MAClBwH,OAAQT,KAAK5N,MAAMqO,OACnB4F,YAAarG,KAAK5N,MAAMiU,YACxBI,UAAWzG,KAAK5N,MAAMqU,UACtBH,SAAUtG,KAAK5N,MAAMkU,SACrBvF,YAAaf,KAAK5N,MAAM2O,YACxBH,cAAeZ,KAAKoG,oBACpBvF,YAAab,KAAKwG,kBAClB1F,WAAYd,KAAK4G,iBACjB5F,aAAchB,KAAK8G,qBAEvB,eAACnD,GAAD,UACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAACC,GAAD,UACI,eAAC,GAAD,UACI,eAAC,GAAD,CAAM5N,IAAK0S,SAGnB,eAAC,GAAD,wCAEH5I,KAAK5N,MAAMgT,aACR,eAAC,GAAD,UACI,sBAAI/T,UAAU,qBAAd,UACI,qBAAIA,UAAU,WAAd,SACI,eAAC,GAAD,MAEJ,qBAAIA,UAAU,WAAd,SACI,eAAC,GAAD,MAEJ,qBAAIA,UAAU,WAAd,SACI,eAAC,GAAD,MAEJ,qBAAIA,UAAU,WAAd,SACI,eAAC,GAAD,MAEJ,qBAAIA,UAAU,WAAd,SACI,eAAC,GAAD,YAKd2O,KAAK5N,MAAMgT,aACT,eAAC,GAAD,UACKpF,KAAK5N,MAAMmU,SACR,eAACsC,GAAA,EAAO9Q,GAAR,CACI1G,UAAU,gBACVyX,QAAQ,SACRC,QAAQ,UACRC,SAAUf,EAJd,SAMK5R,OAAO4S,KACJjJ,KAAK5N,MAAMgV,gBACbpR,KAAI,SAACkH,EAAMjH,GAAP,OACF,eAAC4S,GAAA,EAAOK,GAAR,CACI7X,UAAU,WAKV2X,SAAUP,EANd,SAQI,eAACjG,GAAD,CAOIlR,GACI,EAAKc,MACAgV,eACDlK,GACF5L,GAEN+D,MACI,EAAKjD,MACAgV,eACDlK,GACF1B,QAAQC,MACLC,YACAC,cACC,EAAKvJ,MACAgV,eACDlK,GACF1B,QAAQC,MACLC,YACAC,cACL,EAAKvJ,MACAgV,eACDlK,GACF1B,QAAQC,MACN,oBACFE,cAEZ9E,KACI,EAAKzE,MACAgV,eACDlK,GACFrG,KAENpF,KACI,EAAKW,MACAgV,eACDlK,GACFjE,MAENiF,OACI,EAAK9L,MAAM+S,YACPjI,GACFgB,OAEND,OACI,EAAK7L,MAAM+S,YACPjI,GACFe,OAENkL,YAAa,kBACT,EAAK3D,iBACD,EAAKpT,MACAgV,eACDlK,GACF5L,GACF,EAAKc,MACAgV,eACDlK,GACFrG,KACF,EAAKzE,MACAgV,eACDlK,GACFjE,MACF,EAAK7G,MACAgV,eACDlK,GACF1B,QAAQC,MACLC,YACAC,cACC,EAAKvJ,MACAgV,eACDlK,GACF1B,QACGC,MACAC,YACAC,cACL,EAAKvJ,MACAgV,eACDlK,GACF1B,QACGC,MACD,oBAECE,iBAvFf,EAAKvJ,MACAgV,eACDlK,GACF5L,KAVN,EAAKc,MAAM+S,YAAYjI,GAClB5L,SAoGpB0O,KAAK5N,MAAM6S,SA8GZ,eAAC4D,GAAA,EAAO9Q,GAAR,CAWI1G,UAAU,gBACVyX,QAAQ,SACRC,QAAQ,UACRC,SAAUf,EAdd,SAgBK5R,OAAO4S,KACJjJ,KAAK5N,MAAM8S,gBACblP,KAAI,SAACkH,EAAMjH,GAAP,OACF,eAAC4S,GAAA,EAAOK,GAAR,CACI7X,UAAU,WAKV2X,SAAUP,EANd,SAQI,eAACjG,GAAD,CAOIlR,GACI,EAAKc,MACA8S,eACDhI,GACF5L,GAEN+D,MACI,EAAKjD,MACA8S,eACDhI,GACF1B,QAAQC,MACLC,YACAC,cACC,EAAKvJ,MACA8S,eACDhI,GACF1B,QAAQC,MACLC,YACAC,cACL,EAAKvJ,MACA8S,eACDhI,GACF1B,QAAQC,MACN,oBACFE,cAEZ9E,KACI,EAAKzE,MACA8S,eACDhI,GACFrG,KAENpF,KACI,EAAKW,MACA8S,eACDhI,GACFjE,MAENiF,OACI,EAAK9L,MAAM+S,YACPjI,GACFgB,OAEND,OACI,EAAK7L,MAAM+S,YACPjI,GACFe,OAENkL,YAAa,kBACT,EAAK3D,iBACD,EAAKpT,MACA8S,eACDhI,GACF5L,GACF,EAAKc,MACA8S,eACDhI,GACFrG,KACF,EAAKzE,MACA8S,eACDhI,GACFjE,MACF,EAAK7G,MACA8S,eACDhI,GACF1B,QAAQC,MACLC,YACAC,cACC,EAAKvJ,MACA8S,eACDhI,GACF1B,QACGC,MACAC,YACAC,cACL,EAAKvJ,MACA8S,eACDhI,GACF1B,QACGC,MACD,oBAECE,iBAvFf,EAAKvJ,MACA8S,eACDhI,GACF5L,KAVN,EAAKc,MAAM+S,YAAYjI,GAClB5L,SApIrB,eAACuX,GAAA,EAAO9Q,GAAR,CACI1G,UAAU,gBACVyX,QAAQ,SACRC,QAAQ,UACRC,SAAUf,EAJd,SAMK5R,OAAO4S,KACJjJ,KAAK5N,MAAM+S,aACbnP,KAAI,SAACkH,EAAMjH,GAAP,OACF,eAAC4S,GAAA,EAAOK,GAAR,CACI7X,UAAU,WAKV2X,SAAUP,EANd,SAQI,eAACjG,GAAD,CAMIlR,GACI,EAAKc,MAAM+S,YACPjI,GACF5L,GAEN+D,MACI,EAAKjD,MAAM+S,YACPjI,GACF1B,QAAQC,MACLC,YACAC,cACC,EAAKvJ,MACA+S,YACDjI,GACF1B,QAAQC,MACLC,YACAC,cACL,EAAKvJ,MACA+S,YACDjI,GACF1B,QAAQC,MACN,oBACFE,cAEZ9E,KACI,EAAKzE,MAAM+S,YACPjI,GACFrG,KAENpF,KACI,EAAKW,MAAM+S,YACPjI,GACFjE,MAENiF,OACI,EAAK9L,MAAM+S,YACPjI,GACFgB,OAEND,OACI,EAAK7L,MAAM+S,YACPjI,GACFe,OAENkL,YAAa,kBACT,EAAK3D,iBACD,EAAKpT,MACA+S,YACDjI,GACF5L,GACF,EAAKc,MACA+S,YACDjI,GACFrG,KACF,EAAKzE,MACA+S,YACDjI,GACFjE,MACF,EAAK7G,MACA+S,YACDjI,GACF1B,QAAQC,MACLC,YACAC,cACC,EAAKvJ,MACA+S,YACDjI,GACF1B,QACGC,MACAC,YACAC,cACL,EAAKvJ,MACA+S,YACDjI,GACF1B,QACGC,MACD,oBAECE,iBAlFf,EAAKvJ,MAAM+S,YACPjI,GACF5L,KATN,EAAKc,MAAM+S,YAAYjI,GAClB5L,uBAxnBzD,GAAiC2P,KAAMC,WCmDxBkI,GAhEK,WAChB,IAAQ9W,EAAgBsD,sBAAW5C,IAA3BV,YAcF+W,EAAW,CACbb,OAAQ,CAAEE,GAAI,IAAKP,QAAS,GAC5BD,QAAS,CACLQ,EAAG,EACHP,QAAS,IAIjB,OACI,uCACI,eAAC,GAAD,IACA,eAAC,GAAD,CAAiB/F,YAAY,kCAC7B,eAAC9U,GAAD,UACI,eAACub,GAAA,EAAOrb,IAAR,CACIwb,SA1BE,CACdR,OAAQ,CAAEL,QAAS,EAAGmB,MAAO,GAC7BpB,QAAS,CACLC,QAAS,EACTmB,MAAO,EACPlB,WAAY,CACRG,cAAe,GACfD,gBAAiB,MAoBbQ,QAAQ,SACRC,QAAQ,UACR1X,UAAU,eAJd,SAMKiB,EAAY0D,KAAI,SAACkH,EAAM/B,GAAP,OACb,eAAC0N,GAAA,EAAOK,GAAR,CACIF,SAAUK,EAEVhY,UAAU,WAHd,SAKI,eAACqR,GAAD,CACIpR,GAAI4L,EAAK5L,GACTuF,KAAMqG,EAAKrG,KACXpF,KAAMyL,EAAKjE,MACXgF,OAAQf,EAAKe,OACbC,OAAQhB,EAAKgB,OACb7I,MACI6H,EAAK1B,QAAQC,MAAMC,YAAYC,cACzBuB,EAAK1B,QAAQC,MAAMC,YACdC,cACLuB,EAAK1B,QAAQC,MAAM,oBACdE,cAEfgH,SAAUzF,EAAKxK,SAhBdyI,UAsBrB,eAAC,GAAD,QC5DNoO,G,gKACF,WACI,OACI,eAAC,GAAD,UACI,eAAC,KAAD,CAAeC,SAAS,cAAxB,SACI,gBAAC,KAAD,WACI,eAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,eAAC,GAAD,MAC/B,eAAC,KAAD,CACID,KAAK,iBACLC,QAAS,eAAC,GAAD,MAEb,eAAC,KAAD,CAAOD,KAAK,aAAaC,QAAS,eAAC,GAAD,iB,GAXxC1I,KAAMC,WAmBTqI,MCvBfK,KAASC,OACL,eAAC,KAAMC,WAAP,UACI,eAAC,GAAD,MAEJ9L,SAAS+L,eAAe,U","file":"static/js/main.7877a23c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport { Link as LinkR } from \"react-router-dom\";\n\nexport const ListContainer = styled.div`\n    max-width: 1300px;\n    /* height: 50vh; */\n    justify-content: flex-start;\n    margin-right: auto;\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    .grid_content {\n        display: grid;\n        grid-template-columns: repeat(5, auto);\n        width: 100%;\n        gap: 30px;\n        padding: 20px;\n        justify-content: center;\n        align-items: center;\n\n        @media (min-width: 320px) and (max-width: 599px) {\n            grid-template-columns: repeat(1, auto);\n        }\n\n        @media (min-width: 1100px) and (max-width: 1300px) {\n            grid-template-columns: repeat(4, auto);\n        }\n\n        @media (min-width: 840px) and (max-width: 1099px) {\n            grid-template-columns: repeat(3, auto);\n        }\n\n        @media (min-width: 600px) and (max-width: 839px) {\n            grid-template-columns: auto auto;\n        }\n\n        .card {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 80px;\n            padding: 20px;\n            background-color: #fff;\n            border-radius: 8px;\n        }\n    }\n`;\n\nexport const PokemonDetailsContainer = styled.div`\n    width: 100%;\n    height: 90vh;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    /* padding: 35px; */\n\n    @media (min-width: 1280px) {\n        max-width: 1200px;\n    }\n\n    @media (min-width: 1024px) and (max-width: 1280px) {\n        max-width: 1100px;\n    }\n\n    @media (min-width: 950px) and (max-width: 1023px) {\n        max-width: 950px;\n    }\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        max-width: 800px;\n        height: 170vh;\n        justify-content: flex-start;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        max-width: 600px;\n        height: 100%;\n        justify-content: flex-start;\n    }\n`;\n\nexport const PokemonDetailsContent = styled.div`\n    display: grid;\n    row-gap: 20px;\n    padding: 35px;\n    grid-template-columns: 0.5fr 1.5fr 1fr;\n    width: 100%;\n    height: 80%;\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n    }\n`;\n\nexport const HeaderDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    justify-content: space-between;\n\n    @media (min-width: 560px) and (max-width: 949px) {\n        flex-direction: row;\n    }\n    @media (min-width: 320px) and (max-width: 559px) {\n        flex-direction: column;\n    }\n`;\n\nexport const BodyDetails = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: space-between;\n`;\nexport const FooterDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-between;\n    gap: 20px;\n`;\n\nexport const NomorJudul = styled.div`\n    margin-top: 0;\n    margin-bottom: 0;\n    left: 0;\n    right: auto;\n`;\n\nexport const Nomor = styled.h2`\n    font-size: 16px;\n    font-weight: 600;\n    color: #fff;\n    margin-bottom: 10px;\n`;\n\nexport const Nama = styled.h2`\n    font-size: 20px;\n    font-weight: 700;\n    color: #fff;\n    margin-bottom: 10px;\n    text-transform: capitalize;\n`;\n\nexport const NamaGenera = styled.h2`\n    font-size: 20px;\n    font-weight: 700;\n    color: #fff;\n    text-transform: capitalize;\n`;\n\nexport const WeightHeight = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n\n    @media (min-width: 640px) and (max-width: 949px) {\n        flex-direction: row;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        flex-direction: column;\n    }\n`;\n\nexport const Weight = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        justify-content: flex-start;\n    }\n`;\n\nexport const Judulnya = styled.h2`\n    font-size: 14px;\n    font-weight: 400;\n    color: #fff;\n    padding: 5px;\n    @media (min-width: 580px) and (max-width: 949px) {\n        padding: 0 5px;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        padding: 0;\n    }\n`;\n\nexport const Isinya = styled.h2`\n    font-size: 16px;\n    font-weight: 500;\n    color: #0079ff;\n    padding: 10px;\n    @media (min-width: 580px) and (max-width: 949px) {\n        padding: 0 10px;\n    }\n    @media (min-width: 320px) and (max-width: 579px) {\n        padding: 0 10px;\n    }\n`;\n\nexport const Region = styled.div`\n    margin-bottom: 0;\n    left: 0;\n    right: auto;\n`;\n\nexport const DescriptionPokemon = styled.div`\n    margin-top: 0;\n    margin-bottom: 0;\n    left: 0;\n    right: auto;\n    text-align: right;\n    width: 100%;\n    @media (min-width: 320px) and (max-width: 949px) {\n        text-align: left;\n    }\n`;\n\nexport const About = styled.h2`\n    font-size: 16px;\n    font-weight: 600;\n    color: #fff;\n    margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n    font-size: 14px;\n    font-weight: 400;\n    color: #fff;\n    margin-bottom: 10px;\n`;\n\nexport const ImgBodyDetails = styled.img`\n    height: 400px;\n    transition: 0.1s all ease;\n    opacity: 1;\n    max-width: 100%;\n    /* filter: grayscale(100%);\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    } */\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        height: 400px;\n        padding: 50px;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        height: 300px;\n        padding: 30px;\n    }\n`;\n\nexport const ImgBody = styled.img`\n    height: 300px;\n    transition: 0.1s all ease;\n    cursor: pointer;\n    opacity: 0.5;\n    max-width: 100%;\n    filter: grayscale(100%);\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        height: 400px;\n        padding: 50px;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        height: 300px;\n        padding: 30px;\n    }\n`;\n\nexport const Tulisan = styled.span`\n    display: block;\n    position: absolute;\n    bottom: auto;\n    top: 200px;\n    bottom: auto;\n    right: auto;\n    left: auto;\n    font-family: \"Nunito\", sans-serif;\n    font-size: 130px;\n    font-weight: 600;\n    word-break: keep-all;\n    word-wrap: normal;\n    transform: translateX(-45%);\n    opacity: 0.5;\n    color: rgba(0, 0, 0, 0.67);\n\n    @media (min-width: 1024px) and (max-width: 1280px) {\n        font-size: 110px;\n    }\n\n    @media (min-width: 950px) and (max-width: 1023px) {\n        font-size: 100px;\n    }\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        top: 270px;\n        left: 250px;\n        font-size: 100px;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        width: 100%;\n        font-size: 45px;\n        display: contents;\n        color: #fff;\n    }\n`;\n\nexport const Icon = styled.img`\n    transition: 0.1s all ease;\n    height: 30px;\n    width: 30px;\n    cursor: pointer;\n    opacity: 0.5;\n    filter: grayscale(100%);\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n`;\n\nexport const BungkusIcon = styled.div`\n    display: flex;\n    border-radius: 16px;\n    justify-content: center;\n    align-items: center;\n    height: 60px;\n    width: 60px;\n    border-radius: 16px;\n    box-shadow: 2px 1px 10px #000067;\n`;\n\nexport const TypesText = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n`;\n\nexport const FooterContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nexport const StatStatus = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nexport const Pembungkus = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n`;\n\nexport const AbilitiesBungkus = styled.div`\n    display: flex;\n    background: linear-gradient(to bottom, #ffffff 0%, #f7f7f7 100%);\n    border-radius: 8px;\n    justify-content: center;\n    align-items: center;\n    height: 30px;\n    margin-left: 20px;\n    /* width: 200px; */\n    color: #222;\n    font-size: 14px;\n    font-weight: 500;\n\n    @media (min-width: 320px) and (max-width: 949px) {\n        margin-right: 20px;\n        margin-left: 0;\n    }\n`;\n\nexport const PembungkusAbilities = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    /* gap: 20px; */\n    justify-content: flex-end;\n\n    @media (min-width: 320px) and (max-width: 949px) {\n        justify-content: flex-start;\n    }\n`;\n\nexport const Progress = styled.div`\n    background-color: rgb(233, 233, 233);\n    border-radius: 0.5rem;\n`;\n\nexport const Progressnya = styled.div`\n    height: 10px;\n    border-radius: 1rem;\n    width: ${(props) => props.width}%;\n    transition: 1s ease-in-out;\n`;\n\nexport const BungkusProgress = styled.div`\n    width: 200px;\n\n    @media (min-width: 320px) and (max-width: 949px) {\n        width: 100%;\n    }\n`;\n\nexport const Text = styled.h2`\n    font-size: 14px;\n    font-weight: 600;\n    color: #fff;\n    text-align: left;\n    width: 130px;\n    text-transform: capitalize;\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        width: 200px;\n    }\n`;\n\nexport const BungkusHpProgress = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 14px;\n`;\n\nexport const Bungkusan = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 14px;\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        width: 100%;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        width: 100%;\n        flex-direction: column;\n        align-items: flex-start;\n    }\n`;\n\nexport const BaseStat = styled.h2`\n    font-size: 16px;\n    font-weight: 600;\n    color: #fff;\n    margin-bottom: 10px;\n    margin-top: 10px;\n`;\n\nexport const TextValue = styled.h2`\n    font-size: 14px;\n    font-weight: 600;\n    color: #fff;\n    text-align: right;\n    text-transform: capitalize;\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        margin-left: auto;\n        margin-right: 0;\n    }\n`;\n\nexport const Evalution = styled.div`\n    display: flex;\n    align-items: flex-end;\n    bottom: 0;\n`;\n\nexport const BungkusanDetails = styled.div`\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n    align-items: center;\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        flex-direction: column;\n    }\n`;\n\nexport const BungkusanDetailsBawah = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    flex-direction: column;\n`;\n\nexport const BungkusEvalution = styled.div`\n    display: flex;\n    flex-direction: column;\n    background: linear-gradient(to bottom, #ffffff 0%, #7b7b7b 100%);\n    border-radius: 16px;\n    justify-content: center;\n    align-items: center;\n    height: 100px;\n    width: 100px;\n    border-radius: 16px;\n    /* background: #dad8d8; */\n    box-shadow: 2px 1px 10px #000067;\n`;\n\nexport const IconEvo = styled.img`\n    transition: 0.1s all ease;\n    height: 60px;\n    width: 60px;\n    cursor: pointer;\n    opacity: 0.5;\n    filter: grayscale(100%);\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.2);\n    }\n`;\n\nexport const PembungkusDetails = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 50px;\n\n    /* @media (min-width: 320px) and (max-width: 579px) {\n        flex-direction: column;\n        gap: 20px;\n    } */\n\n    @media (min-width: 320px) and (max-width: 500px) {\n        flex-direction: column;\n        gap: 20px;\n    }\n`;\n\nexport const NamaDetails = styled.p`\n    padding-top: 6px;\n    font-size: 12px;\n    font-weight: 500;\n    color: #fff;\n    text-transform: capitalize;\n    text-decoration: none;\n`;\n\nexport const Textnya = styled.p`\n    display: inline-block;\n    font-size: 14px;\n    font-weight: 500;\n    color: #222;\n    padding-right: 14px;\n    padding-left: 14px;\n`;\n\nexport const Nav = styled.nav`\n    background: ${({ scrollNav }) =>\n        scrollNav ? \"rgba(10, 17, 26, 0.9)\" : \"transparent\"};\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n    transition: 0.8s all ease;\n`;\n\nexport const NavbarContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    padding-right: 35px;\n    padding-left: 35px;\n    margin-right: auto;\n    margin-left: auto;\n    z-index: 1;\n\n    @media (min-width: 1281px) {\n        max-width: 1200px;\n    }\n\n    @media (min-width: 1024px) and (max-width: 1280px) {\n        max-width: 1100px;\n    }\n\n    @media (min-width: 950px) and (max-width: 1023px) {\n        max-width: 950px;\n    }\n\n    @media (min-width: 580px) and (max-width: 949px) {\n        max-width: 800px;\n    }\n\n    @media (min-width: 320px) and (max-width: 579px) {\n        max-width: 600px;\n    }\n`;\n\nexport const NavLogo = styled(LinkR)`\n    color: #ffffff;\n    justify-self: flex-start;\n    cursor: pointer;\n    font-size: 1.5rem;\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n    text-decoration: none;\n`;\n\nexport const LogoImg = styled.img`\n    height: 35px;\n    transition: 0.3s all ease;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.c20a3473.png\";","import styled from \"styled-components\";\n\nexport const MainButton = styled.div`\n    .icon_bungkus {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: #fff;\n        border-radius: 16px;\n        height: 60px;\n        width: 60px;\n        box-shadow: 2px 1px 10px #000067;\n\n        .button__item {\n            border: none;\n            background: transparent;\n        }\n    }\n\n    .text_tooltip {\n        font-weight: 600;\n        font-size: 12px;\n    }\n\n    .icon_main {\n        --size: 38px;\n        transition: 0.1s all ease;\n        cursor: pointer;\n        height: var(--size);\n        width: var(--size);\n        opacity: 1;\n\n        &:hover {\n            filter: grayscale(0%);\n            transform: scale(1.2);\n            opacity: 1;\n        }\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const MainSnackbar = styled.div`\n    .snackbar {\n        position: absolute;\n        left: 50%;\n        top: 5%;\n        transform: translate(-50%, -50%);\n        width: 400px;\n        height: 45px;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        text-align: center;\n        color: #fff;\n\n        @media (min-width: 320px) and (max-width: 599px) {\n            top: 15%;\n            width: 360px;\n            position: fixed;\n        }\n\n        .icon {\n            flex: 15%;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            justify-content: center;\n\n            svg {\n                font-size: 20px;\n            }\n        }\n\n        .message {\n            flex: 85%;\n            text-align: start;\n            font-weight: 500;\n        }\n    }\n\n    #show {\n        visibility: visible;\n        animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;\n    }\n\n    #hide {\n        visibility: hidden;\n    }\n\n    @keyframes fadeIn {\n        from {\n            bottom: 0;\n            opacity: 0;\n        }\n        to {\n            bottom: 30px;\n            opacity: 1;\n        }\n    }\n\n    @keyframes fadeOut {\n        from {\n            bottom: 30px;\n            opacity: 1;\n        }\n        to {\n            bottom: 0;\n            opacity: 0;\n        }\n    }\n`;\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport { MainSnackbar } from \"./SnackbarElements\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport { BsFillPatchCheckFill } from \"react-icons/bs\";\n\nconst Snackbar = forwardRef((props, ref) => {\n    const [showSnackbar, setShowSnackbar] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        show() {\n            setShowSnackbar(true);\n            setTimeout(() => {\n                setShowSnackbar(false);\n            }, 3000);\n        },\n    }));\n\n    return (\n        <MainSnackbar>\n            <div\n                className=\"snackbar\"\n                id={showSnackbar ? \"show\" : \"hide\"}\n                style={{\n                    backgroundColor:\n                        props.type === \"success\" ? \"#0caecc\" : \"#FF0033\",\n                }}\n            >\n                <div className=\"icon\">\n                    {props.type === \"success\" ? (\n                        <BsFillPatchCheckFill />\n                    ) : (\n                        <FaInfoCircle />\n                    )}\n                </div>\n                <div className=\"message\">{props.message}</div>\n            </div>\n        </MainSnackbar>\n    );\n});\n\nexport default Snackbar;\n","import styled from \"styled-components\";\nimport { BiX } from \"react-icons/bi\";\n\nexport const Background = styled.div`\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 2;\n`;\n\nexport const Card = styled.div`\n    width: 100%;\n    min-height: 300px;\n    text-align: center;\n    border-radius: 24px;\n    margin: 0;\n    position: relative;\n    display: inline-block;\n    background-color: #222;\n    overflow: hidden;\n`;\n\nexport const ModalWrapper = styled.div`\n    width: 350px;\n    height: 500px;\n    box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n    background: #222;\n    color: #000;\n    /* display: flex; */\n    position: relative;\n    z-index: 10;\n    border-radius: 24px;\n    padding: 40px;\n    overflow: hidden;\n\n    &::after {\n        content: \"${(props) => props.Namanya}\";\n        position: absolute;\n        text-transform: capitalize;\n        top: 50%;\n        font-size: 7em;\n        font-weight: 800;\n        font-style: italic;\n        color: rgba(255, 255, 25, 0.03);\n        left: -10%;\n        right: -10%;\n    }\n`;\n\nexport const ModalContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n    color: #141414;\n    height: 100%;\n    width: 100%;\n\n    .pembungkus {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        gap: 20px;\n\n        .content__modal {\n            display: grid;\n            grid-template-columns: auto;\n            grid-template-rows: auto;\n            row-gap: 20px;\n            grid-template-areas:\n                \"header\"\n                \"utama\"\n                \"footer\";\n            padding: 20px;\n            width: 100%;\n            color: #fff;\n\n            .header_modal {\n                grid-area: header;\n                gap: 20px;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                position: relative;\n\n                .number {\n                    font-size: 16px;\n                    font-weight: 600;\n                }\n\n                .types {\n                    display: flex;\n                    flex-direction: row;\n                    gap: 4px;\n\n                    .typenya {\n                        --size: 40px;\n                        display: flex;\n                        padding: 10px;\n                        width: var(--size);\n                        height: var(--size);\n                        border-radius: 8px;\n                        text-align: center;\n                        align-items: center;\n                        justify-content: center;\n                        gap: 5px;\n                        background-color: red;\n                        color: #fff;\n                    }\n                }\n            }\n\n            .body_modal {\n                grid-area: utama;\n                gap: 20px;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n                align-items: center;\n                position: relative;\n\n                .text {\n                    font-size: 16px;\n                    font-weight: 600;\n                }\n\n                .gambar_pokemon {\n                    height: 150px;\n                    transition: 0.1s all ease;\n                    /* cursor: pointer; */\n                    opacity: 1;\n                    max-width: 100%;\n                    /* filter: grayscale(100%); */\n                }\n            }\n\n            .footer_modal {\n                grid-area: footer;\n                margin-top: 10px;\n\n                .atas {\n                    display: grid;\n                    background-color: #5fbd58;\n                    height: 30px;\n                    max-width: 70%;\n                    margin-bottom: -10px;\n                    border-radius: 8px;\n                    text-align: center;\n                    margin-left: auto;\n                    margin-right: auto;\n                    position: relative;\n                    z-index: 2;\n                    font-size: 14px;\n                    color: #fff;\n                    align-items: center;\n                }\n\n                .bawah {\n                    display: flex;\n                    background-color: #fff;\n                    height: 50px;\n                    max-width: 100%;\n                    border-radius: 8px;\n                    text-align: center;\n                    gap: 5px;\n                    padding: 6px 6px;\n                    position: relative;\n                    z-index: 1;\n                }\n            }\n        }\n    }\n\n    .heading {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n\n        .judul {\n            font-size: 16px;\n            font-weight: 500;\n        }\n\n        p {\n            font-size: 12px;\n            font-weight: 400;\n            color: #000;\n        }\n    }\n\n    .content_form {\n        display: flex;\n        gap: 20px;\n        flex-direction: column;\n        width: 100%;\n\n        .form {\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n\n            .text_form {\n                font-size: 14px;\n                font-weight: 500;\n            }\n        }\n\n        .input_form {\n            border: 1px solid #fff;\n            border-radius: 4px;\n            padding: 10px;\n            height: 40px;\n            font-size: 14px;\n\n            &:focus {\n                outline: none;\n                border: 1px solid #0f8af9;\n            }\n        }\n    }\n`;\n\nexport const CloseModalButton = styled(BiX)`\n    cursor: pointer;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    width: 24px;\n    height: 24px;\n    padding: 0;\n    z-index: 10;\n    color: rgb(255, 255, 255);\n    background: red;\n    border-radius: 8px;\n    padding: 3px;\n`;\n\nexport const Button = styled.button`\n    min-width: 60px;\n    padding: 12px 20px;\n    border-radius: 4px;\n    border: none;\n    background: #0f8af9;\n    color: #fff;\n    font-size: 14px;\n    cursor: pointer;\n    width: 100%;\n    box-shadow: rgb(2 12 27 / 70%) 0px 10px 30px -15px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n\n    &:hover {\n        background: #2276c2;\n    }\n`;\n","const variable = (state, action) => {\n    switch (action.type) {\n        case \"ADD_POKEMON_TO_LIST\":\n            return {\n                ...state,\n                listPokemon: [action.payload, ...state.listPokemon],\n            };\n        case \"REMOVE_POKEMON_FROM_LIST\":\n            return {\n                ...state,\n                listPokemon: state.listPokemon.filter(\n                    (movie) => movie.title !== action.payload\n                ),\n            };\n\n        case \"REMOVE_ALL_POKEMON_FROM_LIST\":\n            return {\n                ...state,\n                listPokemon: [],\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default variable;\n","import React, { useReducer, createContext, useEffect } from \"react\";\n\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n    listPokemon: localStorage.getItem(\"listPokemon\")\n        ? JSON.parse(localStorage.getItem(\"listPokemon\"))\n        : [],\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = (props) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    useEffect(() => {\n        localStorage.setItem(\"listPokemon\", JSON.stringify(state.listPokemon));\n    }, [state]);\n\n    const addPokemonToList = (movie) => {\n        dispatch({ type: \"ADD_POKEMON_TO_LIST\", payload: movie });\n    };\n\n    const removePokemonFromList = (title) => {\n        dispatch({ type: \"REMOVE_POKEMON_FROM_LIST\", payload: title });\n    };\n\n    const removeAllPokemonFromList = () => {\n        dispatch({ type: \"REMOVE_ALL_POKEMON_FROM_LIST\", payload: {} });\n    };\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                listPokemon: state.listPokemon,\n                addPokemonToList,\n                removePokemonFromList,\n                removeAllPokemonFromList,\n            }}\n        >\n            {props.children}\n        </GlobalContext.Provider>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/pokemon.b48f59b1.svg\";","import styled from \"styled-components\";\nimport imgUrl from \"../../assets/images/pokemon.svg\";\n\nexport const AboutText = styled.p`\n    font-size: 12px;\n    color: #fff;\n    font-weight: 500;\n    text-align: center;\n`;\n\nexport const About = styled.div`\n    display: grid;\n    background-color: #5fbd58;\n\n    height: 22px;\n    max-width: 50%;\n    margin-bottom: -10px;\n    border-radius: 8px;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    z-index: 2;\n    align-items: center;\n`;\n\nexport const ImageCard = styled.img`\n    height: 100px;\n    transition: 0.1s all ease;\n    cursor: pointer;\n    opacity: 0.5;\n    max-width: 100%;\n    filter: grayscale(100%);\n    /* &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    } */\n`;\n\nexport const CardList = styled.div`\n    width: 100%;\n    min-height: 300px;\n    text-align: center;\n    border-radius: 24px;\n    margin: 0;\n    position: relative;\n    display: inline-block;\n    background-color: #222;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        background-image: url(${imgUrl});\n        position: absolute;\n        left: -30px;\n        top: -10px;\n        width: 43%;\n        height: 28%;\n        opacity: 0.2;\n        /* clip-path: circle(100%); */\n        transition: 0.5s ease-in-out;\n    }\n\n    &:hover::before {\n        /* clip-path: circle(70px at 5% 5%); */\n        transform: scale(1.3);\n    }\n\n    &::after {\n        content: \"${(props) => props.Namanya}\";\n        position: absolute;\n        text-transform: capitalize;\n        top: 50%;\n        font-size: 5em;\n        font-weight: 800;\n        font-style: italic;\n        color: rgba(255, 255, 25, 0.03);\n        left: -10%;\n        right: -10%;\n    }\n\n    &:hover ${ImageCard} {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n`;\nexport const Card = styled.div`\n    width: 100%;\n    min-height: 300px;\n    text-align: center;\n    border-radius: 24px;\n    margin: 0;\n    position: relative;\n    display: inline-block;\n    background-color: #222;\n    overflow: hidden;\n\n    &::before {\n        content: \"\";\n        background-image: url(${imgUrl});\n        position: absolute;\n        left: -30px;\n        top: -10px;\n        width: 43%;\n        height: 30%;\n        opacity: 0.2;\n        /* clip-path: circle(100%); */\n        transition: 0.5s ease-in-out;\n    }\n\n    &:hover::before {\n        /* clip-path: circle(70px at 5% 5%); */\n        transform: scale(1.3);\n    }\n\n    &::after {\n        content: \"${(props) => props.Namanya}\";\n        position: absolute;\n        text-transform: capitalize;\n        top: 50%;\n        font-size: 5em;\n        font-weight: 800;\n        font-style: italic;\n        color: rgba(255, 255, 25, 0.03);\n        left: -10%;\n        right: -10%;\n    }\n\n    &:hover ${ImageCard} {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n`;\n\nexport const Header = styled.div`\n    grid-area: header;\n    gap: 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n`;\n\nexport const Utama = styled.div`\n    grid-area: utama;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 100px;\n    margin: auto;\n`;\n\nexport const Footer = styled.div`\n    grid-area: footer;\n    margin-top: 10px;\n    z-index: 0;\n`;\n\nexport const IconTypes = styled.img`\n    transition: 0.1s all ease;\n    height: 14px;\n    width: 14px;\n    cursor: pointer;\n    opacity: 0.8;\n    filter: grayscale(100%);\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n`;\n\nexport const IsiCard = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n    row-gap: 20px;\n    grid-template-areas:\n        \"header\"\n        \"utama\"\n        \"footer\";\n    padding: 20px;\n`;\n\nexport const MainFooter = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    background-color: rgba(255, 255, 255, 0.64);\n    height: 45px;\n    max-width: 100%;\n    border-radius: 8px;\n    text-align: center;\n    gap: 5px;\n    padding: 6px 0;\n    position: relative;\n    z-index: 1;\n`;\n\nexport const JudulW = styled.p`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.64);\n    color: #fff;\n    font-weight: 500;\n`;\n\nexport const Penjelasan = styled.p`\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.64);\n    color: #000;\n    font-weight: 500;\n`;\n\nexport const Name = styled.h4`\n    display: inline-block;\n    text-transform: capitalize;\n    color: rgba(255, 255, 255, 0.64);\n`;\n\nexport const Number = styled.p`\n    display: inline-block;\n    color: rgba(255, 255, 255, 0.64);\n    font-weight: 600;\n`;\n\nexport const Types = styled.div`\n    display: flex;\n    background-color: ${(props) => props.color};\n    padding: 10px;\n    max-width: 80px;\n    border-radius: 8px;\n    text-align: center;\n    gap: 5px;\n\n    .palingatas {\n        position: relative;\n        z-index: 99;\n    }\n`;\n\nexport const TypesText = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n\n    .text_hover {\n        color: #fff;\n        font-size: 14px;\n        transition: 0.1s ease-in-out;\n\n        &:hover {\n            transform: scale(1.3);\n        }\n    }\n`;\n\nexport const Weight = styled.div`\n    margin-top: 5px;\n    display: flex;\n    flex-direction: column;\n`;\n","import React, { useRef, useState, useContext } from \"react\";\nimport {\n    Background,\n    Button,\n    CloseModalButton,\n    ModalContent,\n    ModalWrapper,\n} from \"./ModalElements\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport Snackbar from \"../Snackbar\";\nimport { IconTypes, Types } from \"../Pokemon/Pokemon\";\n\nconst Modal = ({\n    showModal,\n    setShowModal,\n    data,\n    image,\n    tipe,\n    nama,\n    number,\n}) => {\n    const modalRef = useRef();\n    const snackbarRef12 = useRef(null);\n    const { addPokemonToList } = useContext(GlobalContext);\n    const [state, setState] = useState({});\n    const handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setState((old) => ({ ...old, [name]: value }));\n    };\n    const SnackbarType = {\n        success: \"success\",\n        fail: \"fail\",\n    };\n    const handleInput = () => {\n        addPokemonToList(Object.assign(data, state));\n        setShowModal((prev) => !prev);\n        setState(\"\");\n        window.location.reload();\n        snackbarRef12.current.show();\n    };\n    const closeModal = () => {\n        setShowModal((prev) => !prev);\n        setState(\"\");\n    };\n\n    return (\n        <>\n            <Snackbar\n                ref={snackbarRef12}\n                message=\"Success add Pokemon to list!\"\n                type={SnackbarType.success}\n            />\n            {showModal ? (\n                <Background ref={modalRef}>\n                    <ModalWrapper Namanya={nama} showModal={showModal}>\n                        <ModalContent>\n                            <div\n                                className=\"pembungkus\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <div className=\"content__modal\">\n                                    <div className=\"header_modal\">\n                                        <div className=\"number\">\n                                            #{String(number).padStart(3, \"0\")}\n                                        </div>\n                                        <div className=\"types\">\n                                            {tipe.map((type, key) => (\n                                                <Types\n                                                    key={type}\n                                                    title={type}\n                                                    className={`poke__type__bg ${type}`}\n                                                >\n                                                    <IconTypes\n                                                        src={`../${type}.png`}\n                                                    ></IconTypes>\n                                                </Types>\n                                            ))}\n                                        </div>\n                                    </div>\n                                    <div className=\"body_modal\">\n                                        <img\n                                            src={image}\n                                            alt=\"gambar_pokemon\"\n                                            className=\"gambar_pokemon\"\n                                        />\n                                        <div className=\"text\">Bulbasur</div>\n                                    </div>\n                                    <div className=\"footer_modal\">\n                                        <div className=\"atas\">Input</div>\n                                        <div className=\"bawah\">\n                                            <form onSubmit={handleInput}>\n                                                <div className=\"content_form\">\n                                                    <div className=\"class_form\">\n                                                        <input\n                                                            placeholder=\"input your pokemon name !\"\n                                                            name=\"title\"\n                                                            value={\n                                                                state.title ||\n                                                                \"\"\n                                                            }\n                                                            onChange={\n                                                                handleChange\n                                                            }\n                                                            type=\"text\"\n                                                            className=\"input_form\"\n                                                        />\n                                                    </div>\n                                                    <Button>\n                                                        Process To Next Step\n                                                        <FaAngleRight />\n                                                    </Button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </ModalContent>\n                        <CloseModalButton\n                            className=\"button_close\"\n                            aria-label=\"Close modal\"\n                            onClick={closeModal}\n                        />\n                    </ModalWrapper>\n                </Background>\n            ) : null}\n        </>\n    );\n};\n\nexport default Modal;\n","import pokeball from \"../../assets/images/logo.png\";\nimport React, { useState, useRef } from \"react\";\nimport { MainButton } from \"./ButtonElements\";\nimport Snackbar from \"../Snackbar\";\nimport Modal from \"../Modal\";\n\nconst ButonCatch = ({ data, image, tipe, nama, number }) => {\n    const [random, setRandom] = useState(0);\n    const [showModal, setShowModal] = useState(false);\n    const snackbarRef11 = useRef(null);\n    const SnackbarType = {\n        success: \"success\",\n        fail: \"fail\",\n    };\n\n    const clickHandle = () => {\n        const num = Math.floor(Math.random() * (1 + 1));\n        setRandom(num);\n        snackbarRef11.current.show();\n\n        if (num === 1) {\n            setShowModal((prev) => !prev);\n        } else {\n            // console.log(\"Ups\");\n        }\n    };\n\n    return (\n        <MainButton>\n            <div className=\"icon_bungkus\" data-tip data-for=\"catch\" key=\"catch\">\n                <button className=\"button__item\" onClick={clickHandle}>\n                    <img className=\"icon_main\" src={pokeball} alt=\"pokeball\" />\n                </button>\n                <Modal\n                    number={number}\n                    nama={nama}\n                    tipe={tipe}\n                    image={image}\n                    data={data}\n                    showModal={showModal}\n                    setShowModal={setShowModal}\n                />\n                {random === 1 ? (\n                    <Snackbar\n                        ref={snackbarRef11}\n                        message=\"Yes, your success to gacha this Pokemon!\"\n                        type={SnackbarType.success}\n                    />\n                ) : (\n                    <Snackbar\n                        ref={snackbarRef11}\n                        message=\"Upss, your gacha is failed, try again!\"\n                        type={SnackbarType.fail}\n                    />\n                )}\n            </div>\n        </MainButton>\n    );\n};\n\nexport default ButonCatch;\n","import styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n    background: ${({ scrollNav }) =>\n        scrollNav ? \"rgba(10, 17, 26, 0.9)\" : \"transparent\"};\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    transition: 0.8s all ease;\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        height: 80px;\n    }\n`;\n\nexport const NavbarContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    height: 80px;\n    padding-right: 35px;\n    padding-left: 35px;\n    margin-right: auto;\n    margin-left: auto;\n    z-index: 1;\n\n    @media (min-width: 1281px) {\n        max-width: 1300px;\n    }\n\n    @media (min-width: 1100px) and (max-width: 1280px) {\n        max-width: 1100px;\n    }\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        max-width: 950px;\n    }\n\n    @media (min-width: 600px) and (max-width: 839px) {\n        max-width: 830px;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        max-width: 550px;\n    }\n\n    .nav_logo {\n        color: #ffffff;\n        justify-self: flex-start;\n        cursor: pointer;\n        font-size: 1.5rem;\n        display: flex;\n        align-items: center;\n        font-weight: bold;\n        text-decoration: none;\n\n        img {\n            height: 35px;\n            transition: 0.3s all ease;\n\n            &:hover {\n                transform: scale(1.1);\n            }\n        }\n    }\n`;\n\nexport const NavMenu = styled.ul`\n    display: flex;\n    align-items: center;\n    list-style: none;\n    text-align: center;\n\n    li {\n        height: 80px;\n        display: flex;\n        gap: 20px;\n\n        .navlinks {\n            color: #ffffff;\n            display: flex;\n            align-items: center;\n            text-decoration: none;\n            font-weight: 600;\n            height: 100%;\n            cursor: pointer;\n            transition: all 0.4s ease-in-out;\n\n            &.active {\n                background-color: #9e45c5;\n                color: #fff;\n                &:hover {\n                    color: #fff;\n                }\n            }\n\n            &:hover {\n                color: #9e45c5;\n            }\n\n            img {\n                height: 35px;\n                transition: 0.3s all ease;\n\n                &:hover {\n                    transform: scale(1.1);\n                }\n            }\n        }\n\n        .navlinks_link {\n            color: #ffffff;\n            display: flex;\n            align-items: center;\n            text-decoration: none;\n            font-weight: 600;\n            height: 100%;\n            cursor: pointer;\n            transition: all 0.4s ease-in-out;\n\n            &.active {\n                background-color: #9e45c5;\n                color: #fff;\n                &:hover {\n                    color: #fff;\n                }\n            }\n\n            &:hover {\n                color: #9e45c5;\n            }\n\n            .text_jumlah {\n                background-color: #ef144a;\n                border-radius: 5px;\n                color: #fff;\n                font-size: 10px;\n                font-weight: 500;\n                min-height: 20px;\n                min-width: 20px;\n                padding: 4px;\n                text-align: center;\n                -webkit-transform: translate(30%, -40%);\n                transform: translate(30%, -40%);\n            }\n\n            .laptop {\n                display: initial;\n\n                @media (min-width: 320px) and (max-width: 599px) {\n                    display: none;\n                }\n            }\n\n            .mobile {\n                display: none;\n\n                @media (min-width: 320px) and (max-width: 599px) {\n                    display: initial;\n                }\n            }\n        }\n    }\n`;\n\nexport const IconButtonnya = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #fff;\n    border-radius: 10px;\n    width: 40px;\n    height: 40px;\n    position: fixed;\n    z-index: 2;\n    bottom: 2vh;\n    right: 2.5%;\n    cursor: pointer;\n    transition: 1s all ease-out;\n    opacity: ${({ scrollIcon }) => (scrollIcon ? \"0\" : \"1\")};\n`;\n","export default __webpack_public_path__ + \"static/media/github-white.382ce239.svg\";","export default __webpack_public_path__ + \"static/media/pokedex.2800773d.png\";","import { animateScroll as scroll } from \"react-scroll\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Nav, NavbarContainer, NavMenu } from \"./NavbarElements\";\nimport { Link } from \"react-router-dom\";\nimport github from \"../../assets/images/github-white.svg\";\nimport logoImg from \"../../assets/images/pokedex.png\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nconst Navbar = () => {\n    const [scrollNav, setScrollNav] = useState(false);\n\n    const changeNav = () => {\n        if (window.scrollY >= 150) {\n            setScrollNav(true);\n        } else {\n            setScrollNav(false);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", changeNav);\n    }, []);\n\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    };\n\n    const openGithub = () => {\n        window.open(\"https://github.com/id-prawito\");\n    };\n\n    const { listPokemon } = useContext(GlobalContext);\n    return (\n        <>\n            <Nav scrollNav={scrollNav}>\n                <NavbarContainer>\n                    <Link className=\"nav_logo\" to=\"/\" onClick={toggleHome}>\n                        <img alt=\"image_nav\" src={logoImg}></img>\n                    </Link>\n                    <NavMenu>\n                        <li>\n                            <Link to=\"/mypokemon\" className=\"navlinks_link\">\n                                <p className=\"laptop\">My Pokemon List</p>\n                                <p className=\"mobile\">List</p>\n                                <span className=\"text_jumlah\">\n                                    {listPokemon.length}\n                                </span>\n                            </Link>\n                            <div className=\"navlinks\" onClick={openGithub}>\n                                <img src={github} alt=\"images_github\" />\n                            </div>\n                        </li>\n                    </NavMenu>\n                </NavbarContainer>\n            </Nav>\n        </>\n    );\n};\n\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport \"../app/app.css\";\n\nimport {\n    AbilitiesBungkus,\n    About,\n    BaseStat,\n    BodyDetails,\n    Bungkusan,\n    BungkusanDetails,\n    BungkusanDetailsBawah,\n    BungkusEvalution,\n    BungkusHpProgress,\n    BungkusIcon,\n    BungkusProgress,\n    Description,\n    DescriptionPokemon,\n    FooterDetails,\n    HeaderDetails,\n    Icon,\n    IconEvo,\n    ImgBodyDetails,\n    Isinya,\n    Judulnya,\n    Nama,\n    NamaDetails,\n    NamaGenera,\n    Nomor,\n    NomorJudul,\n    Pembungkus,\n    PembungkusAbilities,\n    PembungkusDetails,\n    PokemonDetailsContainer,\n    PokemonDetailsContent,\n    Progress,\n    Progressnya,\n    Region,\n    Text,\n    Textnya,\n    TextValue,\n    Tulisan,\n    TypesText,\n    Weight,\n    WeightHeight,\n} from \"../components/Elements/Elements\";\nimport { Link } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport ButonCatch from \"../components/Button\";\nimport Navbar from \"../components/Navbar\";\n\nconst PokemonDetails = () => {\n    let { name } = useParams();\n    const [data, setData] = useState([]);\n    const [types, setTypes] = useState([]);\n    const [statistics, setStatistics] = useState([]);\n    const [deskripsi, setDescription] = useState({});\n    const [genera, setGenera] = useState({});\n    const [names, setNames] = useState({});\n    const [images, setImages] = useState({});\n    const [url, setUrlnya] = useState([]);\n    const [evochain, setEvoChain] = useState([]);\n    const [urlability, setUrlAbilitinya] = useState([]);\n    const [bisa, setBisa] = useState([]);\n    const [idnya, setIDnya] = useState(\"\");\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                const response = await axios\n                    .get(`https://pokeapi.co/api/v2/pokemon/${name}`)\n                    .catch();\n                setData(response.data);\n                setIDnya(response.data.id);\n                const statistics = [];\n\n                for (let j = 0; j < response.data.stats.length; j++) {\n                    const Obj = {};\n                    Obj[\"stat__name\"] = response.data.stats[j].stat.name;\n                    Obj[\"stat__val\"] = response.data.stats[j].base_stat;\n                    statistics.push(Obj);\n                }\n                setStatistics(statistics);\n\n                const urlability = [];\n                for (let i = 0; i < response.data.abilities.length; i++) {\n                    urlability.push(response.data.abilities[i].ability.url);\n                }\n                setUrlAbilitinya(urlability);\n\n                const types = [];\n                for (let i = 0; i < response.data.types.length; i++) {\n                    types.push(response.data.types[i].type.name);\n                }\n                setTypes(types);\n                const Objectnya = {\n                    gambar: response.data.sprites.other.dream_world\n                        .front_default,\n                    gambar_2:\n                        response.data.sprites.other[\"official-artwork\"]\n                            .front_default,\n                };\n                setImages(Objectnya);\n            } catch {\n                // console.log(\"error\");\n            }\n        };\n        getData();\n    }, [name]);\n\n    useEffect(() => {\n        const getDescription = async () => {\n            try {\n                const response = await axios\n                    .get(`https://pokeapi.co/api/v2/pokemon-species/${idnya}`)\n                    .catch();\n                var str = JSON.stringify(response.data);\n                // Remove \\ from the string\n                var convertedStr = str.replace(/\\f/g, \"\");\n\n                // Convert updated string back to object\n                var newObj = JSON.parse(convertedStr);\n                setDescription(newObj);\n                for (\n                    let i = 0;\n                    i < response.data.flavor_text_entries.length - 1;\n                    i++\n                ) {\n                    if (\n                        response.data.flavor_text_entries[i].language.name ===\n                        \"en\"\n                    ) {\n                        const Objectnya = {\n                            penjelasan:\n                                response.data.flavor_text_entries[i]\n                                    .flavor_text,\n                        };\n                        setDescription(Objectnya);\n                        break;\n                    }\n                }\n\n                for (let i = 0; i < response.data.genera.length - 1; i++) {\n                    if (response.data.genera[i].language.name === \"en\") {\n                        const Objectnya = {\n                            genera: response.data.genera[i].genus,\n                        };\n                        setGenera(Objectnya);\n                        break;\n                    }\n                }\n\n                for (let i = 0; i < response.data.names.length - 1; i++) {\n                    if (response.data.names[i].language.name === \"ja\") {\n                        const Objectnya = {\n                            nama: response.data.names[i].name,\n                        };\n                        setNames(Objectnya);\n                        break;\n                    }\n                }\n\n                for (\n                    let i = 0;\n                    i < response.data.evolution_chain.url.length;\n                    i++\n                ) {\n                    const Objectnya = {\n                        url: response.data.evolution_chain.url,\n                    };\n                    setUrlnya(Objectnya);\n                    break;\n                }\n            } catch (e) {\n                const Objectnya = {\n                    penjelasan: \"Deskripnya Tidak Ada\",\n                };\n                setDescription(Objectnya);\n            }\n        };\n        getDescription();\n    }, [idnya]);\n\n    useEffect(() => {\n        const getEvoImages = async () => {\n            try {\n                const response = await axios.get(url.url);\n                const evoChain = [];\n                let evoData = response.data.chain;\n\n                do {\n                    const evoDetails = evoData[\"evolution_details\"][0];\n                    evoChain.push({\n                        idnya: response.data.id,\n                        species_name: evoData.species.name,\n                        min_level: !evoDetails ? 1 : evoDetails.min_level,\n                        trigger_name: !evoDetails\n                            ? null\n                            : evoDetails.trigger.name,\n                        item: !evoDetails ? null : evoDetails.item,\n                    });\n                    evoData = evoData[\"evolves_to\"][0];\n                } while (!!evoData && evoData.hasOwnProperty(\"evolves_to\"));\n\n                for (let i = 0; i < evoChain.length; i++) {\n                    const response = await axios\n                        .get(\n                            `https://pokeapi.co/api/v2/pokemon/${evoChain[i].species_name}`\n                        )\n                        .catch((err) => console.log(\"Error:\", err));\n                    response.data.sprites.other.dream_world.front_default\n                        ? (evoChain[i][\"image_url\"] =\n                              response.data.sprites.other.dream_world.front_default)\n                        : (evoChain[i][\"image_url\"] =\n                              response.data.sprites.other[\n                                  \"official-artwork\"\n                              ].front_default);\n                }\n                setEvoChain(evoChain);\n            } catch (e) {\n                const Objectnya = [\n                    {\n                        species_name: \"notfound\",\n                        image_url: \"error\",\n                    },\n                ];\n                setEvoChain(Objectnya);\n            }\n        };\n        getEvoImages();\n    }, [url]);\n\n    useEffect(() => {\n        const getAbility = async () => {\n            try {\n                const evonyaNamanya = [];\n                for (let i = 0; i < urlability.length; i++) {\n                    const response = await axios.get(urlability[i]);\n                    const ObjectTik = {\n                        nama: response.data.name,\n                        text: response.data.flavor_text_entries[0].flavor_text,\n                    };\n                    evonyaNamanya.push(ObjectTik);\n                }\n                setBisa(evonyaNamanya);\n            } catch {\n                // console.log(\"error\", error);\n            }\n        };\n        getAbility();\n    }, [urlability]);\n\n    let stringName = name.charAt(0).toUpperCase() + name.slice(1);\n    document.title = `${stringName} | Pokédex-id`;\n\n    return (\n        <>\n            <Navbar />\n            <PokemonDetailsContainer>\n                <PokemonDetailsContent>\n                    <HeaderDetails>\n                        <NomorJudul>\n                            <Nomor>#{String(data.id).padStart(3, \"0\")}</Nomor>\n                            <Nama>{data.name}</Nama>\n                        </NomorJudul>\n                        <WeightHeight>\n                            <Weight>\n                                <Judulnya>Weight : </Judulnya>\n                                <Isinya>{data.weight} g</Isinya>\n                            </Weight>\n                            <Weight>\n                                <Judulnya>Height : </Judulnya>\n                                <Isinya>{data.height / 10} m</Isinya>\n                            </Weight>\n                        </WeightHeight>\n                        <Region>\n                            <Nomor>Genera</Nomor>\n                            <NamaGenera>{genera.genera}</NamaGenera>\n                        </Region>\n                    </HeaderDetails>\n                    <BodyDetails>\n                        <BungkusanDetails>\n                            {images.gambar === null ? (\n                                <ImgBodyDetails\n                                    src={images.gambar_2}\n                                ></ImgBodyDetails>\n                            ) : (\n                                <ImgBodyDetails\n                                    src={images.gambar}\n                                ></ImgBodyDetails>\n                            )}\n\n                            <Tulisan>{names.nama}</Tulisan>\n                        </BungkusanDetails>\n                        <BungkusanDetailsBawah>\n                            <BaseStat>Evolutions</BaseStat>\n                            <PembungkusDetails>\n                                {evochain.map((evolution, key) => (\n                                    <Link\n                                        style={{ textDecoration: \"none\" }}\n                                        key={key}\n                                        to={\n                                            \"/pokemon/\" + evolution.species_name\n                                        }\n                                    >\n                                        <BungkusEvalution>\n                                            <IconEvo\n                                                src={evolution.image_url}\n                                            ></IconEvo>\n                                            <NamaDetails>\n                                                {evolution.species_name}\n                                            </NamaDetails>\n                                        </BungkusEvalution>\n                                    </Link>\n                                ))}\n                            </PembungkusDetails>\n                        </BungkusanDetailsBawah>\n                    </BodyDetails>\n                    <FooterDetails>\n                        <DescriptionPokemon>\n                            <About>About</About>\n                            <Description>{deskripsi.penjelasan}</Description>\n                        </DescriptionPokemon>\n                        <TypesText>\n                            <Pembungkus>\n                                {types.map((tipe, key) => (\n                                    <BungkusIcon\n                                        data-tip\n                                        data-for={tipe}\n                                        key={tipe}\n                                        className={`poke__type__bg ${tipe}`}\n                                    >\n                                        <Icon src={`../${tipe}.png`}></Icon>\n                                        <ReactTooltip\n                                            place=\"top\"\n                                            type=\"light\"\n                                            effect=\"solid\"\n                                            id={tipe}\n                                        >\n                                            <p\n                                                style={{\n                                                    fontSize: 12,\n                                                    fontWeight: 600,\n                                                }}\n                                            >\n                                                {tipe}\n                                            </p>\n                                        </ReactTooltip>\n                                    </BungkusIcon>\n                                ))}\n                                <ButonCatch\n                                    nama={data.name}\n                                    tipe={types}\n                                    image={images.gambar}\n                                    data={data}\n                                    number={data.id}\n                                />\n                            </Pembungkus>\n                            <BaseStat>Base Stat</BaseStat>\n                            <BungkusHpProgress>\n                                {statistics.map((statistik, key) => (\n                                    <Bungkusan key={key}>\n                                        <Text>{statistik.stat__name} :</Text>\n                                        <BungkusProgress>\n                                            <Progress>\n                                                <Progressnya\n                                                    className={\n                                                        statistik.stat__name\n                                                    }\n                                                    width={\n                                                        statistik.stat__val / 2\n                                                    }\n                                                ></Progressnya>\n                                            </Progress>\n                                        </BungkusProgress>\n                                        <TextValue>\n                                            {statistik.stat__val}\n                                        </TextValue>\n                                    </Bungkusan>\n                                ))}\n                            </BungkusHpProgress>\n                        </TypesText>\n                        <DescriptionPokemon>\n                            <About>Abilities</About>\n                            <PembungkusAbilities>\n                                {bisa.map((ability, key) => (\n                                    <AbilitiesBungkus\n                                        data-tip\n                                        data-for={ability.nama}\n                                        key={key}\n                                    >\n                                        <Textnya>{ability.nama}</Textnya>\n                                        <ReactTooltip\n                                            place=\"top\"\n                                            type=\"light\"\n                                            effect=\"solid\"\n                                            id={ability.nama}\n                                        >\n                                            <p style={{ fontSize: 12 }}>\n                                                {ability.text}\n                                            </p>\n                                        </ReactTooltip>\n                                    </AbilitiesBungkus>\n                                ))}\n                            </PembungkusAbilities>\n                        </DescriptionPokemon>\n                    </FooterDetails>\n                </PokemonDetailsContent>\n            </PokemonDetailsContainer>\n        </>\n    );\n};\n\nexport default PokemonDetails;\n","import styled from \"styled-components\";\n\nexport const SelectContainer = styled.div`\n    width: 100%;\n    /* height: 20vh; */\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n\n    @media (min-width: 1280px) {\n        max-width: 1300px;\n    }\n\n    @media (min-width: 1100px) and (max-width: 1280px) {\n        max-width: 1100px;\n        height: 100%;\n    }\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        height: 100%;\n        max-width: 950px;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        /* height: 40vh; */\n    }\n`;\n\nexport const SelectContent = styled.div`\n    width: 100%;\n    padding: 35px;\n    display: grid;\n    gap: 10px;\n    justify-items: center;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        grid-template-columns: 1fr 1fr;\n    }\n\n    @media (min-width: 425px) and (max-width: 839px) {\n        grid-template-columns: 1fr 1fr;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        grid-template-columns: auto;\n        gap: 20px;\n    }\n`;\n\nexport const SelectInput = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 280px;\n    width: 100%;\n    align-items: center;\n    border-radius: 4px;\n    background-color: #fff;\n    padding: 4px;\n    box-shadow: rgba(240, 240, 240, 0.5) 0px 2px 6px;\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        max-width: 380px;\n    }\n\n    @media (min-width: 600px) and (max-width: 839px) {\n        max-width: 380px;\n        width: 260px;\n    }\n`;\n\nexport const LogoInput = styled.img`\n    height: 30px;\n    -webkit-transition: 0.1s all ease;\n    transition: 0.1s all ease;\n    cursor: pointer;\n    position: relative;\n    z-index: 2;\n\n    @media (min-width: 600px) and (max-width: 839px) {\n        height: 30px;\n    }\n`;\n\nexport const Input = styled.input.attrs((props) => ({\n    type: \"text\",\n}))`\n    color: #222;\n    font-size: 1em;\n    border: none;\n    width: 230px;\n    border-radius: 3px;\n    padding: 2px 8px;\n    &:focus {\n        outline: none;\n    }\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        width: 100%;\n        margin-left: 6px;\n    }\n    @media (min-width: 600px) and (max-width: 839px) {\n        width: 100%;\n        margin-left: 6px;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        height: 40px;\n    }\n\n    /* here we use the dynamically computed prop */\n    margin: ${(props) => props.size};\n    padding: ${(props) => props.size};\n`;\n","import React from \"react\";\nimport { BiDisc } from \"react-icons/bi\";\nimport {\n    Input,\n    SelectContainer,\n    SelectContent,\n    SelectInput,\n} from \"./FilterElements\";\nimport Select from \"react-select\";\nimport \"../../app/app.css\";\n\nconst customStyles = {\n    control: (styles) => ({\n        // none of react-select's styles are passed to <Control />\n        ...styles,\n        width: 230,\n        backgroundColor: \"white\",\n        display: \"flex\",\n        borderRadius: 5,\n        border: \"none\",\n        boxShadow: \"none\",\n        \"@media only screen and (max-width: 1280px)\": {\n            backgroundColor: \"white\",\n            border: \"none\",\n            width: 200,\n            outline: \"none\",\n            boxShadow: \"none\",\n        },\n        \"@media only screen and (min-width: 768px) and (max-width: 1099px) \": {\n            backgroundColor: \"white\",\n            border: \"none\",\n            width: 340,\n            outline: \"none\",\n            boxShadow: \"none\",\n        },\n\n        \"@media only screen and (min-width: 600px) and (max-width: 839px) \": {\n            backgroundColor: \"white\",\n            border: \"none\",\n            width: 220,\n            outline: \"none\",\n            boxShadow: \"none\",\n        },\n\n        \"@media only screen and (min-width: 320px) and (max-width: 599px) \": {\n            backgroundColor: \"white\",\n            border: \"none\",\n            width: 230,\n            outline: \"none\",\n            boxShadow: \"none\",\n        },\n    }),\n};\n\nconst stylesLogo = {\n    marginRight: \"5px\",\n    marginLeft: \"5px\",\n    \"@media (miWidth: 1025px) and (maxWidth: 1280px)\": {\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n    },\n};\n\nclass Filters extends React.Component {\n    render() {\n        const nilaiValue = this.props.regions;\n\n        const optionsRegions = nilaiValue.map((nilaiValuenya) => ({\n            label:\n                nilaiValuenya.name +\n                \" ( \" +\n                (nilaiValuenya.offset + 1) +\n                \" - \" +\n                (nilaiValuenya.limit + nilaiValuenya.offset) +\n                \" )\",\n            value: nilaiValuenya.name,\n            key: nilaiValuenya.name,\n        }));\n\n        const typesValue = this.props.types;\n\n        const optionsTypes = typesValue.map((nilaiTypes) => ({\n            label: nilaiTypes,\n            value: nilaiTypes,\n            key: nilaiTypes,\n        }));\n\n        const sortByValue = this.props.sortby;\n\n        const optionsSortby = sortByValue.map((nilaiSortby) => ({\n            label: nilaiSortby,\n            value: nilaiSortby,\n            key: nilaiSortby,\n        }));\n\n        return (\n            <>\n                <SelectContainer>\n                    <SelectContent>\n                        <SelectInput>\n                            <BiDisc\n                                color=\"rgb(122, 121, 121)\"\n                                fontSize=\"1.4em\"\n                                style={stylesLogo}\n                            />\n\n                            <Select\n                                placeholder=\"Regions\"\n                                styles={customStyles}\n                                options={optionsRegions}\n                                onChange={this.props.regionsSelect}\n                            ></Select>\n                        </SelectInput>\n\n                        <SelectInput>\n                            <BiDisc\n                                color=\"rgb(122, 121, 121)\"\n                                fontSize=\"1.4em\"\n                                style={stylesLogo}\n                            />\n                            <Select\n                                placeholder=\"Types\"\n                                styles={customStyles}\n                                options={optionsTypes}\n                                onChange={this.props.typesSelect}\n                            />\n                        </SelectInput>\n                        <SelectInput>\n                            <BiDisc\n                                color=\"rgb(122, 121, 121)\"\n                                fontSize=\"1.4em\"\n                                style={stylesLogo}\n                            />\n                            <Select\n                                placeholder=\"Sort By\"\n                                styles={customStyles}\n                                options={optionsSortby}\n                                onChange={this.props.sortSelect}\n                            />\n                        </SelectInput>\n                        <SelectInput>\n                            <BiDisc\n                                color=\"rgb(122, 121, 121)\"\n                                fontSize=\"1.4em\"\n                                style={stylesLogo}\n                            />\n                            <Input\n                                value={this.props.valuesearch}\n                                onChange={this.props.searchChange}\n                                placeholder=\"Search\"\n                            ></Input>\n                        </SelectInput>\n                    </SelectContent>\n                </SelectContainer>\n            </>\n        );\n    }\n}\n\nexport default Filters;\n","export default __webpack_public_path__ + \"static/media/favicon.4368af11.ico\";","import styled from \"styled-components\";\n\nexport const HomeContainer = styled.div`\n    width: 100%;\n    /* height: 45vh; */\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px 0px;\n\n    @media (min-width: 1280px) {\n        max-width: 1300px;\n    }\n    @media (min-width: 1100px) and (max-width: 1280px) {\n        max-width: 1100px;\n    }\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        max-width: 950px;\n    }\n\n    @media (min-width: 600px) and (max-width: 839px) {\n        max-width: 830px;\n        padding: 20px 0px;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        max-width: 550px;\n        padding: 20px 0px;\n    }\n`;\n\nexport const HomeContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 35px;\n    display: grid;\n    grid-template-columns: 1fr;\n    @media (min-width: 320px) and (max-width: 599px) {\n        padding: 10px 35px;\n    }\n`;\n\nexport const Content = styled.div`\n    margin: 0;\n`;\n\nexport const Judul = styled.h3`\n    font-size: 24px;\n    font-weight: 500;\n    color: rgba(255, 255, 255, 0.64);\n`;\n\nexport const Description = styled.h1`\n    color: #ffffff;\n    font-weight: 700;\n    font-size: 46px;\n    line-height: 60px;\n    margin-top: 8px;\n    margin-bottom: 16px;\n    @media (min-width: 600px) and (max-width: 839px) {\n        font-size: 40px;\n    }\n    @media (min-width: 320px) and (max-width: 599px) {\n        font-size: 26px;\n        line-height: 40px;\n    }\n`;\n\nexport const HomeButton = styled.div`\n    /* display: flex; */\n    flex-direction: column;\n    width: 100%;\n    padding: 35px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        grid-template-columns: auto;\n    }\n\n    @media (min-width: 600px) and (max-width: 839px) {\n        grid-template-columns: auto;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        grid-template-columns: auto;\n        padding: 10px 35px;\n    }\n`;\n\nexport const HomeButtonList = styled.div`\n    flex-direction: row;\n    width: 100%;\n    padding: 35px;\n    display: flex;\n\n    @media (min-width: 840px) and (max-width: 1099px) {\n        grid-template-columns: auto;\n        flex-direction: column;\n    }\n\n    @media (min-width: 600px) and (max-width: 839px) {\n        grid-template-columns: auto;\n        flex-direction: column;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        grid-template-columns: auto;\n        padding: 10px 35px;\n        flex-direction: column;\n    }\n`;\n\nexport const LogoImg = styled.img`\n    height: 35px;\n    transition: 0.1s all ease;\n    cursor: pointer;\n    opacity: 0.5;\n    filter: grayscale(100%);\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n`;\n\nexport const Profile = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const JudulName = styled.p`\n    font-size: 12px;\n    color: rgba(255, 255, 255, 0.64);\n`;\n\nexport const JudulDescription = styled.p`\n    font-size: 18px;\n    font-weight: 500;\n    color: rgba(255, 255, 255, 0.64);\n`;\n\nexport const JudulButton = styled.a`\n    font-size: 14px;\n    display: inline-block;\n    padding: 16px 48px;\n    border-radius: 20px;\n    color: #ffffff;\n    background-color: transparent;\n    cursor: pointer;\n    font-weight: 600;\n    border: 2px solid #5547ff;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    max-width: 200px;\n    text-align: center;\n    &:hover {\n        transform: scale(1.02);\n    }\n    @media (min-width: 320px) and (max-width: 599px) {\n        padding: 16px 48px;\n        font-size: 12px;\n    }\n`;\n\nexport const JudulButtonRemove = styled.div`\n    font-size: 14px;\n    display: inline-block;\n    padding: 16px 48px;\n    border-radius: 20px;\n    color: #ffffff;\n    background-color: red;\n    cursor: pointer;\n    font-weight: 600;\n    border: 1px solid #fff;\n    transition: all 0.2s ease-in-out;\n    text-decoration: none;\n    max-width: 100%;\n    text-align: center;\n    &:hover {\n        transform: scale(1.02);\n    }\n    .button_remove {\n        cursor: pointer;\n        color: rgb(255, 255, 255);\n        font-weight: 600;\n        background: transparent;\n    }\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        padding: 16px 48px;\n        font-size: 12px;\n    }\n`;\n\nexport const ContentButton = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 80px;\n\n    @media (min-width: 320px) and (max-width: 599px) {\n        gap: 30px;\n        flex-direction: column;\n    }\n`;\n\nexport const DescriptionButton = styled.div`\n    display: flex;\n    gap: 12px;\n    align-items: center;\n`;\n","import React, { useContext } from \"react\";\nimport { useRef } from \"react\";\nimport logoImg from \"../../assets/images/favicon.ico\";\nimport Snackbar from \"../Snackbar\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport {\n    Description,\n    HomeContainer,\n    HomeContent,\n    Judul,\n    Content,\n    LogoImg,\n    Profile,\n    HomeButton,\n    JudulName,\n    JudulDescription,\n    JudulButton,\n    ContentButton,\n    DescriptionButton,\n    HomeButtonList,\n    JudulButtonRemove,\n} from \"./HomeElements\";\n\nconst HomeSection = ({ description }) => {\n    return (\n        <>\n            <HomeContainer>\n                <HomeContent>\n                    <Content>\n                        <Judul>Pokédex.design</Judul>\n                        <Description>{description}</Description>\n                    </Content>\n                </HomeContent>\n                <HomeButton>\n                    <ContentButton>\n                        <JudulButton>Get Started</JudulButton>\n                        <DescriptionButton>\n                            <LogoImg src={logoImg}></LogoImg>\n                            <Profile>\n                                <JudulName>Created By</JudulName>\n                                <JudulDescription>\n                                    Prawito (Boy)\n                                </JudulDescription>\n                            </Profile>\n                        </DescriptionButton>\n                    </ContentButton>\n                </HomeButton>\n            </HomeContainer>\n        </>\n    );\n};\n\nexport const HomeSectionList = ({ description }) => {\n    const { removeAllPokemonFromList, listPokemon } = useContext(GlobalContext);\n\n    const handleClickRemove = () => () => {\n        removeAllPokemonFromList();\n        snackbarRef.current.show();\n    };\n\n    const handleClickRemoveDontHave = () => () => {\n        snackbarRef2.current.show();\n    };\n\n    const snackbarRef = useRef(null);\n    const snackbarRef2 = useRef(null);\n\n    const SnackbarType = {\n        success: \"success\",\n        fail: \"fail\",\n    };\n    return (\n        <>\n            <HomeContainer>\n                <HomeContent>\n                    <Content>\n                        <Judul>Pokédex.design</Judul>\n                        <Description>{description}</Description>\n                    </Content>\n                </HomeContent>\n                <HomeButtonList>\n                    <ContentButton>\n                        <JudulButton>Get Started</JudulButton>\n                        <DescriptionButton>\n                            <LogoImg src={logoImg}></LogoImg>\n                            <Profile>\n                                <JudulName>Created By</JudulName>\n                                <JudulDescription>\n                                    Prawito (Boy)\n                                </JudulDescription>\n                            </Profile>\n                        </DescriptionButton>\n                        <JudulButtonRemove>\n                            {listPokemon.length === 0 ? (\n                                <button\n                                    className=\"button_remove\"\n                                    onClick={handleClickRemoveDontHave()}\n                                >\n                                    YOU DONT HAVE POKEMON IN LIST\n                                </button>\n                            ) : (\n                                <button\n                                    className=\"button_remove\"\n                                    onClick={handleClickRemove()}\n                                >\n                                    REMOVE ALL POKEMON LIST\n                                </button>\n                            )}\n                        </JudulButtonRemove>\n                        <Snackbar\n                            ref={snackbarRef}\n                            message=\"Succes to remove all your Pokemon!\"\n                            type={SnackbarType.fail}\n                        />\n                        <Snackbar\n                            ref={snackbarRef2}\n                            message=\"You dont have Pokemon in List!\"\n                            type={SnackbarType.fail}\n                        />\n                    </ContentButton>\n                </HomeButtonList>\n            </HomeContainer>\n        </>\n    );\n};\n\nexport default HomeSection;\n","import React, { useContext, useRef } from \"react\";\nimport \"../../app/app.css\";\nimport { Link } from \"react-router-dom\";\nimport { FiX } from \"react-icons/fi\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport {\n    About,\n    AboutText,\n    Footer,\n    Header,\n    IconTypes,\n    ImageCard,\n    IsiCard,\n    JudulW,\n    MainFooter,\n    Name,\n    Penjelasan,\n    Types,\n    Utama,\n    TypesText,\n    Weight,\n    Card,\n    Number,\n    CardList,\n} from \"./Pokemon\";\nimport ReactTooltip from \"react-tooltip\";\nimport Snackbar from \"../Snackbar\";\n\nexport default function Pokemon(props) {\n    const { id, image, name, type, weight, height } = props;\n    return (\n        <>\n            <Link to={`/pokemon/` + name}>\n                <Card Namanya={name}>\n                    <IsiCard>\n                        <Header>\n                            <Number> #{String(id).padStart(3, \"0\")}</Number>\n                            <TypesText>\n                                {type.map((type, key) => (\n                                    <Types\n                                        key={type.type.name}\n                                        title={type.type.name}\n                                        className={`poke__type__bg ${type.type.name}`}\n                                    >\n                                        <IconTypes\n                                            src={`${type.type.name}.png`}\n                                        ></IconTypes>\n                                    </Types>\n                                ))}\n                            </TypesText>\n                        </Header>\n                        <Utama>\n                            <ImageCard src={image}></ImageCard>\n                            <Name maxLength=\"12\">{name}</Name>\n                        </Utama>\n                        <Footer>\n                            <About>\n                                <AboutText>About</AboutText>\n                            </About>\n                            <MainFooter>\n                                <Weight>\n                                    <JudulW>Weight</JudulW>\n                                    <Penjelasan>{weight} g</Penjelasan>\n                                </Weight>\n                                <Weight>\n                                    <JudulW>Height</JudulW>\n                                    <Penjelasan>{height / 10} m</Penjelasan>\n                                </Weight>\n                            </MainFooter>\n                        </Footer>\n                    </IsiCard>\n                </Card>\n            </Link>\n        </>\n    );\n}\n\nexport function PokemonCardList(props) {\n    const { id, image, name, type, weight, height, titleNew } = props;\n    const { removePokemonFromList } = useContext(GlobalContext);\n    const snackbarRef12 = useRef(null);\n\n    const SnackbarType = {\n        success: \"success\",\n        fail: \"fail\",\n    };\n    const handleClickRemove = (value) => () => {\n        removePokemonFromList(value);\n        snackbarRef12.current.show();\n    };\n    return (\n        <>\n            <Snackbar\n                ref={snackbarRef12}\n                message=\"Succes to remove your Pokemon!\"\n                type={SnackbarType.fail}\n            />\n            <CardList Namanya={name}>\n                <IsiCard>\n                    <Header>\n                        <Number> #{String(id).padStart(3, \"0\")}</Number>\n\n                        <TypesText>\n                            <Types\n                                data-tip\n                                data-for=\"remove\"\n                                key=\"remove\"\n                                style={{ backgroundColor: \"red\" }}\n                                className=\"poke__type__bg\"\n                            >\n                                <button\n                                    style={{\n                                        background: \"transparent\",\n                                        cursor: \"pointer\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                    }}\n                                    onClick={handleClickRemove(titleNew)}\n                                >\n                                    <FiX className=\"text_hover\" />\n                                </button>\n                                <ReactTooltip\n                                    place=\"top\"\n                                    type=\"light\"\n                                    effect=\"solid\"\n                                    id=\"remove\"\n                                >\n                                    <p\n                                        style={{\n                                            fontSize: 12,\n                                            fontWeight: 600,\n                                        }}\n                                    >\n                                        Remove\n                                    </p>\n                                </ReactTooltip>\n                            </Types>\n\n                            {type.map((type, key) => (\n                                <Types\n                                    key={type.type.name}\n                                    title={type.type.name}\n                                    className={`poke__type__bg ${type.type.name}`}\n                                >\n                                    <IconTypes\n                                        src={`${type.type.name}.png`}\n                                    ></IconTypes>\n                                </Types>\n                            ))}\n                        </TypesText>\n                    </Header>\n                    <Link to={`/pokemon/` + name}>\n                        <Utama>\n                            <ImageCard src={image}></ImageCard>\n                            <Name maxLength=\"12\">\n                                {name}\n                                <p style={{ color: \"#08a0ff\" }}>({titleNew})</p>\n                            </Name>\n                        </Utama>\n                    </Link>\n                    <Footer>\n                        <About>\n                            <AboutText>About</AboutText>\n                        </About>\n                        <MainFooter>\n                            <Weight>\n                                <JudulW>Weight</JudulW>\n                                <Penjelasan>{weight} g</Penjelasan>\n                            </Weight>\n                            <Weight>\n                                <JudulW>Height</JudulW>\n                                <Penjelasan>{height / 10} m</Penjelasan>\n                            </Weight>\n                        </MainFooter>\n                    </Footer>\n                </IsiCard>\n            </CardList>\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/pikachu.cb81c8c0.png\";","import styled from \"styled-components\";\n\nexport const CardLoading = styled.div`\n    width: 220px;\n    min-height: 300px;\n    text-align: center;\n    border-radius: 24px;\n    margin: 0;\n    position: relative;\n    display: inline-block;\n    background-color: #222;\n    overflow: hidden;\n\n    @media (min-width: 320px) and (max-width: 1099px) {\n        width: 220px;\n    }\n`;\n\nexport const IsiCardLoading = styled.div`\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n    row-gap: 20px;\n    grid-template-areas:\n        \"header\"\n        \"utama\"\n        \"footer\";\n    padding: 20px;\n    animation: pulse 2s infinite;\n\n    @keyframes pulse {\n        0% {\n            opacity: 1;\n        }\n        50% {\n            opacity: 0.5;\n        }\n        100% {\n            opacity: 1;\n        }\n    }\n`;\n\nexport const Header = styled.div`\n    grid-area: header;\n    gap: 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: relative;\n`;\n\nexport const Utama = styled.div`\n    grid-area: utama;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    width: 100px;\n    margin: auto;\n`;\n\nexport const Footer = styled.div`\n    grid-area: footer;\n    margin-top: 10px;\n`;\n\nexport const Number = styled.div`\n    display: inline-block;\n    color: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n    font-weight: 600;\n    width: 50px;\n    height: 20px;\n    background-color: rgba(255, 255, 255, 0.1);\n`;\n\nexport const Types = styled.div`\n    display: flex;\n    background-color: rgba(255, 255, 255, 0.1);\n    padding: 10px;\n    max-width: 80px;\n    border-radius: 8px;\n    text-align: center;\n    gap: 5px;\n`;\n\nexport const TypesText = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n`;\n\nexport const IconTypes = styled.div`\n    transition: 0.1s all ease;\n    height: 14px;\n    width: 14px;\n    cursor: pointer;\n    opacity: 0.8;\n    filter: grayscale(100%);\n    border-radius: 4px;\n    background-color: rgba(255, 255, 255, 0.1);\n`;\n\nexport const AboutText = styled.p`\n    font-size: 12px;\n    color: transparent;\n    font-weight: 500;\n    text-align: center;\n    background-color: rgba(255, 255, 255, 0.1);\n    margin: auto;\n    width: 50px;\n    border-radius: 4px;\n`;\n\nexport const About = styled.div`\n    display: grid;\n    background-color: rgba(255, 255, 255, 0.1);\n    height: 22px;\n    max-width: 50%;\n    margin-bottom: -10px;\n    border-radius: 8px;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n    z-index: 2;\n    align-items: center;\n`;\n\nexport const MainFooter = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    background-color: rgba(255, 255, 255, 0.1);\n    height: 45px;\n    max-width: 100%;\n    border-radius: 8px;\n    text-align: center;\n    gap: 5px;\n    padding: 6px 0;\n    position: relative;\n    z-index: 1;\n`;\n\nexport const JudulW = styled.p`\n    font-size: 10px;\n    color: transparent;\n    font-weight: 500;\n    background-color: rgba(255, 255, 255, 0.1);\n    margin: auto;\n    width: 50px;\n    border-radius: 4px;\n`;\n\nexport const Penjelasan = styled.p`\n    font-size: 12px;\n    color: transparent;\n    font-weight: 500;\n    margin: auto;\n    width: 70px;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n`;\n\nexport const Weight = styled.div`\n    margin-top: 5px;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const ImageCard = styled.div`\n    height: 100px;\n    transition: 0.1s all ease;\n    cursor: pointer;\n    opacity: 0.5;\n    max-width: 100%;\n    filter: grayscale(100%);\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 10px;\n`;\n\nexport const Name = styled.h4`\n    display: inline-block;\n    text-transform: capitalize;\n    color: transparent;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n`;\n\nexport const CardContent = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 30px;\n`;\n","import React from \"react\";\nimport {\n    CardLoading,\n    IsiCardLoading,\n    Header,\n    Utama,\n    Footer,\n    Number,\n    TypesText,\n    Types,\n    About,\n    AboutText,\n    IconTypes,\n    ImageCard,\n    JudulW,\n    MainFooter,\n    Name,\n    Penjelasan,\n    Weight,\n    CardContent,\n} from \"./LoadingElements\";\n\nconst Loading = () => {\n    return (\n        <CardContent>\n            <CardLoading>\n                <IsiCardLoading>\n                    <Header>\n                        <Number></Number>\n                        <TypesText>\n                            <Types>\n                                <IconTypes></IconTypes>\n                            </Types>\n                        </TypesText>\n                    </Header>\n                    <Utama>\n                        <ImageCard></ImageCard>\n                        <Name>Bulbasur</Name>\n                    </Utama>\n                    <Footer>\n                        <About>\n                            <AboutText>About</AboutText>\n                        </About>\n                        <MainFooter>\n                            <Weight>\n                                <JudulW>Weight</JudulW>\n                                <Penjelasan>500 g</Penjelasan>\n                            </Weight>\n                            <Weight>\n                                <JudulW>Height</JudulW>\n                                <Penjelasan>0.78 m</Penjelasan>\n                            </Weight>\n                        </MainFooter>\n                    </Footer>\n                </IsiCardLoading>\n            </CardLoading>\n        </CardContent>\n    );\n};\n\nexport default Loading;\n","const breakpoints = {\n    xs: \"320px\", // min-width : 320px and max-width : 480px\n    sm: \"600px\",\n\n    md: \"840px\",\n    ml: \"1100px\",\n\n    lg: \"1280px\",\n\n    xl: \"1824px\",\n};\n\nexport const devices = {\n    smartphone: `@media only screen and (min-width: ${breakpoints.xs}) and (max-width: ${breakpoints.sm})`,\n    ipads: `@media only screen and (min-width: ${breakpoints.sm}) and (max-width: ${breakpoints.md})`,\n    tablet: `@media only screen and (min-width: ${breakpoints.md}) and (max-width: ${breakpoints.ml})`,\n    laptop: `@media only screen and (min-width: ${breakpoints.ml}) and (max-width: ${breakpoints.lg})`,\n\n    desktops: `@media only screen and (min-width: ${breakpoints.lg})`,\n    screen_large: `@media only screen and (min-width: ${breakpoints.xl})`,\n};\n","import styled from \"styled-components\";\nimport { devices } from \"../../services/media\";\n\nexport const CategoryContainer = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    margin-right: auto;\n    margin-left: auto;\n\n    @media (min-width: 1281px) {\n        max-width: 1300px;\n    }\n\n    ${devices.laptop} {\n        max-width: 1100px;\n    }\n\n    ${devices.tablet} {\n        max-width: 950px;\n    }\n\n    ${devices.ipads} {\n        max-width: 830px;\n    }\n`;\n\nexport const CategoryContent = styled.div`\n    display: grid;\n    grid-template-rows: 150px auto;\n    padding: 35px;\n    width: 100%;\n\n    ${devices.laptop} {\n        grid-template-columns: auto;\n        justify-content: center;\n    }\n\n    ${devices.tablet} {\n        grid-template-columns: auto;\n        justify-content: center;\n    }\n\n    ${devices.ipads} {\n        grid-template-columns: auto;\n        gap: 30px;\n    }\n\n    ${devices.smartphone} {\n        grid-template-columns: auto;\n    }\n`;\n\nexport const IconCategory = styled.div`\n    display: flex;\n    align-items: flex-start;\n    flex-direction: row;\n    gap: 20px;\n\n    ${devices.ipads} {\n        justify-content: center;\n        flex-direction: row;\n        gap: 20px;\n    }\n\n    ${devices.smartphone} {\n        justify-content: center;\n        flex-direction: row;\n        gap: 20px;\n    }\n`;\n\nexport const Icon = styled.img`\n    --size: 30px;\n    transition: 0.1s all ease;\n    height: var(--size);\n    width: var(--size);\n    opacity: 0.5;\n    filter: grayscale(100%);\n    cursor: pointer;\n\n    &:hover {\n        opacity: 1;\n        filter: grayscale(0%);\n        transform: scale(1.3);\n    }\n`;\n\nexport const Description = styled.p`\n    color: rgba(255, 255, 255, 0.64);\n    line-height: 60px;\n    font-weight: 500;\n    font-size: 40px;\n\n    ${devices.ipads} {\n        line-height: 45px;\n        font-size: 35px;\n        margin-top: 0;\n    }\n\n    ${devices.smartphone} {\n        margin-bottom: 20px;\n        line-height: 45px;\n        font-size: 35px;\n    }\n`;\n\nexport const BungkusIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #5547ff;\n    border-radius: 16px;\n    height: 60px;\n    width: 60px;\n`;\n\nexport const Text = styled.p`\n    display: inline-block;\n    color: rgba(255, 255, 255, 0.64);\n    font-weight: 600;\n    font-size: 12px;\n`;\n\nexport const ImgBox = styled.div`\n    position: absolute;\n    transform: translateY(-50%);\n    transition: 0.5s;\n    height: 220px;\n    z-index: 100;\n    width: 100%;\n    top: 50%;\n`;\n\nexport const CardContent = styled.div`\n    display: grid;\n    gap: 30px;\n\n    .card__content_home {\n        display: grid;\n        grid-template-columns: repeat(5, auto);\n        justify-content: center;\n        align-items: center;\n        gap: 30px;\n\n        ${devices.laptop} {\n            grid-template-columns: repeat(4, auto);\n        }\n\n        ${devices.tablet} {\n            grid-template-columns: repeat(3, auto);\n        }\n\n        ${devices.ipads} {\n            grid-template-columns: repeat(2, auto);\n        }\n\n        ${devices.smartphone} {\n            grid-template-columns: repeat(1, auto);\n        }\n    }\n`;\n\nexport const CardContainerTambah = styled.div`\n    flex-wrap: wrap;\n`;\n\nexport const BungkusanIconnya = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n\n    ${devices.smartphone} {\n        display: none;\n    }\n`;\n","import { animateScroll as scroll } from \"react-scroll\";\nimport React, { useState, useEffect } from \"react\";\nimport { FaAngleUp } from \"react-icons/fa\";\nimport { IconButtonnya } from \"./NavbarElements\";\n\nconst Scroll = () => {\n    const [scrollIcon, setScrollIcon] = useState(true);\n\n    const changeIcon = () => {\n        if (window.scrollY >= 550) {\n            setScrollIcon(false);\n        } else {\n            setScrollIcon(true);\n        }\n    };\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", changeIcon);\n    }, []);\n\n    const toggleHome = () => {\n        scroll.scrollToTop();\n    };\n\n    return (\n        <IconButtonnya scrollIcon={scrollIcon} onClick={toggleHome}>\n            <FaAngleUp />\n        </IconButtonnya>\n    );\n};\nexport default Scroll;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Filters from \"../components/Filter\";\nimport HomeSection from \"../components/HomeSection\";\nimport Navbar from \"../components/Navbar\";\nimport Pokemon from \"../components/Pokemon/index.js\";\nimport logoTypes from \"../assets/images/pikachu.png\";\nimport Loading from \"../components/Loading\";\nimport { motion } from \"framer-motion\";\nimport {\n    CategoryContainer,\n    BungkusIcon,\n    CategoryContent,\n    Description,\n    Icon,\n    IconCategory,\n    CardContent,\n    BungkusanIconnya,\n} from \"../components/Category/CategoryElements\";\nimport Scroll from \"../components/Navbar/Scroll\";\nimport \"../app/app.css\";\n\nexport class PokemonHome extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allPokemons: [],\n            searchPokemons: [],\n            filterPokemons: [],\n            evoChain: [],\n            abilities: \"\",\n            height: \"\",\n            weight: \"\",\n            catergory: \"\",\n            stats: [],\n            imageURL: \"\",\n            pokeName: \"\",\n            pokeNumber: \"\",\n            genderRate: \"\",\n            genera: \"\",\n            isTypeSelected: false,\n            selectedType: \"\",\n            showInfo: false,\n            isSearch: false,\n            searchString: \"\",\n            description: \"\",\n            showLoading: true,\n            isFilter: false,\n            noDataFound: false,\n            limit: 151,\n            offset: 0,\n            isChecked: false,\n            evolID: \"\",\n            evolName: \"\",\n            evolTypes: [],\n            evolImgURL: \"\",\n            regions: [\n                {\n                    name: \"Kanto\",\n                    limit: 151,\n                    offset: 0,\n                },\n                {\n                    name: \"Johto\",\n                    limit: 100,\n                    offset: 151,\n                },\n                {\n                    name: \"Hoenn\",\n                    limit: 135,\n                    offset: 251,\n                },\n                {\n                    name: \"Sinnoh\",\n                    limit: 108,\n                    offset: 386,\n                },\n                {\n                    name: \"Unova\",\n                    limit: 155,\n                    offset: 494,\n                },\n                {\n                    name: \"Kalos\",\n                    limit: 72,\n                    offset: 649,\n                },\n                {\n                    name: \"Alola\",\n                    limit: 88,\n                    offset: 721,\n                },\n                {\n                    name: \"Galar\",\n                    limit: 89,\n                    offset: 809,\n                },\n            ],\n            types: [\n                \"all types\",\n                \"grass\",\n                \"bug\",\n                \"dark\",\n                \"dragon\",\n                \"electric\",\n                \"fairy\",\n                \"fighting\",\n                \"fire\",\n                \"flying\",\n                \"ghost\",\n                \"ground\",\n                \"ice\",\n                \"normal\",\n                \"poison\",\n                \"psychic\",\n                \"rock\",\n                \"steel\",\n                \"water\",\n            ],\n            sortby: [\"ID\", \"Name\"],\n        };\n    }\n\n    componentDidMount() {\n        this.getAllPokemons(this.state.offset, this.state.limit);\n    }\n\n    componentDidUpdate() {\n        // console.log(\"updatedd\");\n    }\n\n    getAllPokemons = async (offset, limit) => {\n        const response = await axios\n            .get(\n                `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\n            )\n            .catch((err) => console.log(\"Error:\", err));\n        this.getPokemonData(response.data.results);\n    };\n\n    getPokemonData = async (result) => {\n        // debugger;\n        const pokemonArr = [],\n            filterArr = [];\n        await Promise.all(\n            result.map((pokemonItem) => {\n                return axios\n                    .get(\n                        `https://pokeapi.co/api/v2/pokemon/${pokemonItem.name}`\n                    )\n                    .then((result) => {\n                        pokemonArr.push(result.data);\n                    });\n            })\n        );\n        pokemonArr.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0));\n        if (this.state.isTypeSelected) {\n            for (let i = 0; i < pokemonArr.length; i++) {\n                for (let j = 0; j < pokemonArr[i].types.length; j++) {\n                    if (\n                        this.state.selectedType ===\n                        pokemonArr[i].types[j].type.name\n                    ) {\n                        filterArr.push(pokemonArr[i]);\n                    }\n                }\n            }\n            this.setState({\n                isFilter: true,\n                filterPokemons: filterArr,\n                allPokemons: pokemonArr,\n                showLoading: false,\n            });\n        } else {\n            this.setState({\n                isFilter: false,\n                allPokemons: pokemonArr,\n                showLoading: false,\n            });\n        }\n    };\n\n    fetchEvoDetails = async (url) => {\n        // debugger\n        const response = await axios\n            .get(url)\n            .catch((err) => console.log(\"Error:\", err));\n        // console.log(response);\n        const evoChain = [];\n        let evoData = response.data.chain;\n        do {\n            const evoDetails = evoData[\"evolution_details\"][0];\n            evoChain.push({\n                species_name: evoData.species.name,\n                min_level: !evoDetails ? 1 : evoDetails.min_level,\n                trigger_name: !evoDetails ? null : evoDetails.trigger.name,\n                item: !evoDetails ? null : evoDetails.item,\n            });\n            evoData = evoData[\"evolves_to\"][0];\n        } while (!!evoData && evoData.hasOwnProperty(\"evolves_to\"));\n        this.fetchEvoImages(evoChain);\n    };\n\n    fetchEvoImages = async (evoChainArr) => {\n        // debugger\n        for (let i = 0; i < evoChainArr.length; i++) {\n            const response = await axios\n                .get(\n                    `https://pokeapi.co/api/v2/pokemon/${evoChainArr[i].species_name}`\n                )\n                .catch((err) => console.log(\"Error:\", err));\n            response.data.sprites.other.dream_world.front_default\n                ? (evoChainArr[i][\"image_url\"] =\n                      response.data.sprites.other.dream_world.front_default)\n                : (evoChainArr[i][\"image_url\"] =\n                      response.data.sprites.other[\n                          \"official-artwork\"\n                      ].front_default);\n        }\n        this.setState({\n            evoChain: evoChainArr,\n        });\n    };\n\n    fetchPokemonData = async (number, pokemon, category, imageURL) => {\n        // debugger\n        const response = await axios\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\n            .catch((err) => console.log(\"Error:\", err));\n        // console.log(response);\n        const statistics = [],\n            abs = [];\n        const id = response.data.id;\n        for (let i = 0; i < response.data.abilities.length; i++) {\n            abs.push(response.data.abilities[i].ability.name);\n        }\n        for (let j = 0; j < response.data.stats.length; j++) {\n            const Obj = {};\n            Obj[\"stat__name\"] = response.data.stats[j].stat.name;\n            Obj[\"stat__val\"] = response.data.stats[j].base_stat;\n            statistics.push(Obj);\n        }\n        this.setState({\n            weight: response.data.weight,\n            height: response.data.height,\n            category,\n            pokeNumber: id,\n            imageURL,\n            pokeName: pokemon,\n            showInfo: true,\n            stats: statistics,\n            abilities: abs,\n        });\n        this.setState({\n            evoChain: [],\n            genderRate: \"\",\n            genera: \"\",\n        });\n        this.fetchPokemonDescription(pokemon);\n    };\n\n    fetchPokemonDescription = async (pokemon_name) => {\n        // debugger;\n        let genera = \"\";\n        const response = await axios\n            .get(`https://pokeapi.co/api/v2/pokemon-species/${pokemon_name}`)\n            .catch((err) => console.log(\"Error:\", err));\n        this.fetchEvoDetails(response.data.evolution_chain.url);\n        try {\n            for (\n                let i = 0;\n                i < response.data.flavor_text_entries.length - 1;\n                i++\n            ) {\n                if (\n                    response.data.flavor_text_entries[i].language.name === \"en\"\n                ) {\n                    this.state.description =\n                        response.data.flavor_text_entries[i].flavor_text;\n                    break;\n                }\n            }\n            for (let j = 0; j < response.data.genera.length; j++) {\n                if (response.data.genera[j].language.name === \"en\") {\n                    genera = response.data.genera[j].genus;\n                    break;\n                }\n            }\n            this.setState({\n                description: this.state.description,\n                genderRate: response.data.gender_rate,\n                genera,\n            });\n        } catch (e) {\n            this.setState({\n                description: \"Description not found\",\n            });\n        }\n    };\n\n    handleChangeRegions = (value) => {\n        // debugger;\n        for (let i = 0; i < this.state.regions.length; i++) {\n            if (this.state.regions[i].name === value.value) {\n                this.setState({\n                    valueregion: value.value,\n                    // valuetype: \"all types\",\n                    sorttype: \"ID\",\n                    isSearch: false,\n                    isFilter: false,\n                    showLoading: true,\n                });\n                this.getAllPokemons(\n                    this.state.regions[i].offset,\n                    this.state.regions[i].limit\n                );\n                break;\n            }\n        }\n        // console.log(value.value);\n    };\n\n    handleChangeTypes = (value) => {\n        // debugger;\n        if (value.value === \"all types\") {\n            const allPoks = this.state.allPokemons;\n            if (this.state.sorttype === \"Name\") {\n                allPoks.sort((a, b) =>\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n                );\n                this.setState({\n                    isFilter: false,\n                    valuetype: value.value,\n                    allPokemons: allPoks,\n                    isTypeSelected: false,\n                });\n            } else {\n                allPoks.sort((a, b) =>\n                    a.id > b.id ? 1 : b.id > a.id ? -1 : 0\n                );\n                this.setState({\n                    isFilter: false,\n                    valuetype: value.value,\n                    allPokemons: allPoks,\n                    isTypeSelected: false,\n                });\n            }\n            return;\n        } else {\n            this.setState({\n                isTypeSelected: true,\n                selectedType: value.value,\n            });\n        }\n        let filterArr = [];\n        for (let i = 0; i < this.state.allPokemons.length; i++) {\n            for (let j = 0; j < this.state.allPokemons[i].types.length; j++) {\n                if (\n                    value.value === this.state.allPokemons[i].types[j].type.name\n                ) {\n                    filterArr.push(this.state.allPokemons[i]);\n                }\n            }\n        }\n        this.state.sorttype === \"Name\"\n            ? filterArr.sort((a, b) =>\n                  a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n              )\n            : filterArr.sort((a, b) =>\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\n              );\n        this.setState({\n            isSearch: false,\n            valuesearch: \"\",\n            isFilter: true,\n            filterPokemons: filterArr,\n            valuetype: value.value,\n        });\n        filterArr.length === 0\n            ? this.setState({ noDataFound: true })\n            : this.setState({ noDataFound: false });\n    };\n\n    handleChangeSort = (value) => {\n        let sortArr;\n        this.state.isFilter\n            ? (sortArr = this.state.filterPokemons)\n            : (sortArr = this.state.allPokemons);\n        if (value.value === \"ID\") {\n            sortArr.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0));\n        } else {\n            sortArr.sort((a, b) =>\n                a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n            );\n        }\n        this.state.isFilter\n            ? this.setState({\n                  filterPokemons: sortArr,\n                  sorttype: value.value,\n              })\n            : this.setState({\n                  allPokemons: sortArr,\n                  sorttype: value.value,\n              });\n        console.log(value.value);\n    };\n\n    handleChangeSearch = (event) => {\n        // debugger\n        event.target.value.length > 0\n            ? this.setState({\n                  isSearch: true,\n                  valuetype: \"all types\",\n                  valuesearch: event.target.value,\n              })\n            : this.setState({\n                  isSearch: false,\n                  isFilter: false,\n                  valuesearch: event.target.value,\n              });\n        let searchArr = [];\n        for (let i = 0; i < this.state.allPokemons.length; i++) {\n            // eslint-disable-next-line eqeqeq\n            if (\n                this.state.allPokemons[i].name.includes(\n                    event.target.value.toLowerCase()\n                ) ||\n                this.state.allPokemons[i].id\n                    .toString()\n                    .includes(event.target.value)\n            ) {\n                searchArr.push(this.state.allPokemons[i]);\n            }\n        }\n        searchArr.length === 0\n            ? this.setState({ noDataFound: true, searchPokemons: [] })\n            : this.setState({ noDataFound: false, searchPokemons: searchArr });\n        // console.log(event.target.value);\n    };\n\n    handleClick = () => {\n        window[`scrollTo`]({\n            top: document.body.scrollHeight,\n            behavior: `smooth`,\n        });\n    };\n\n    render() {\n        const listnya = {\n            visible: {\n                opacity: 1,\n                transition: {\n                    when: \"beforeChildren\",\n                    staggerChildren: 0.35,\n                    delayChildren: 0.75,\n                },\n            },\n            hidden: {\n                opacity: 0,\n                transition: {\n                    when: \"afterChildren\",\n                },\n            },\n        };\n\n        const itemsnya = {\n            visible: { opacity: 1, x: 0 },\n            hidden: { opacity: 0, x: -150 },\n        };\n\n        document.title = `Pokédex-id`;\n\n        return (\n            <>\n                <Scroll />\n                <Navbar />\n                <HomeSection\n                    description=\"Search for a Pokémon by name or using its National\n                            Pokédex number.\"\n                />\n                <Filters\n                    regions={this.state.regions}\n                    types={this.state.types}\n                    sortby={this.state.sortby}\n                    valueregion={this.state.valueregion}\n                    valuetype={this.state.valuetype}\n                    sorttype={this.state.sorttype}\n                    valuesearch={this.state.valuesearch}\n                    regionsSelect={this.handleChangeRegions}\n                    typesSelect={this.handleChangeTypes}\n                    sortSelect={this.handleChangeSort}\n                    searchChange={this.handleChangeSearch}\n                />\n                <CategoryContainer>\n                    <CategoryContent>\n                        <IconCategory>\n                            <BungkusanIconnya>\n                                <BungkusIcon>\n                                    <Icon src={logoTypes}></Icon>\n                                </BungkusIcon>\n                            </BungkusanIconnya>\n                            <Description>Design Pokédex Card</Description>\n                        </IconCategory>\n                        {this.state.showLoading && (\n                            <CardContent>\n                                <ul className=\"card__content_home\">\n                                    <li className=\"card__li\">\n                                        <Loading />\n                                    </li>\n                                    <li className=\"card__li\">\n                                        <Loading />\n                                    </li>\n                                    <li className=\"card__li\">\n                                        <Loading />\n                                    </li>\n                                    <li className=\"card__li\">\n                                        <Loading />\n                                    </li>\n                                    <li className=\"card__li\">\n                                        <Loading />\n                                    </li>\n                                </ul>\n                            </CardContent>\n                        )}\n                        {!this.state.showLoading && (\n                            <CardContent>\n                                {this.state.isSearch ? (\n                                    <motion.ul\n                                        className=\"card__content\"\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        variants={listnya}\n                                    >\n                                        {Object.keys(\n                                            this.state.searchPokemons\n                                        ).map((item, key) => (\n                                            <motion.li\n                                                className=\"card__li\"\n                                                key={\n                                                    this.state.allPokemons[item]\n                                                        .id\n                                                }\n                                                variants={itemsnya}\n                                            >\n                                                <Pokemon\n                                                    key={\n                                                        this.state\n                                                            .searchPokemons[\n                                                            item\n                                                        ].id\n                                                    }\n                                                    id={\n                                                        this.state\n                                                            .searchPokemons[\n                                                            item\n                                                        ].id\n                                                    }\n                                                    image={\n                                                        this.state\n                                                            .searchPokemons[\n                                                            item\n                                                        ].sprites.other\n                                                            .dream_world\n                                                            .front_default\n                                                            ? this.state\n                                                                  .searchPokemons[\n                                                                  item\n                                                              ].sprites.other\n                                                                  .dream_world\n                                                                  .front_default\n                                                            : this.state\n                                                                  .searchPokemons[\n                                                                  item\n                                                              ].sprites.other[\n                                                                  \"official-artwork\"\n                                                              ].front_default\n                                                    }\n                                                    name={\n                                                        this.state\n                                                            .searchPokemons[\n                                                            item\n                                                        ].name\n                                                    }\n                                                    type={\n                                                        this.state\n                                                            .searchPokemons[\n                                                            item\n                                                        ].types\n                                                    }\n                                                    height={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].height\n                                                    }\n                                                    weight={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].weight\n                                                    }\n                                                    onElemClick={() =>\n                                                        this.fetchPokemonData(\n                                                            this.state\n                                                                .searchPokemons[\n                                                                item\n                                                            ].id,\n                                                            this.state\n                                                                .searchPokemons[\n                                                                item\n                                                            ].name,\n                                                            this.state\n                                                                .searchPokemons[\n                                                                item\n                                                            ].types,\n                                                            this.state\n                                                                .searchPokemons[\n                                                                item\n                                                            ].sprites.other\n                                                                .dream_world\n                                                                .front_default\n                                                                ? this.state\n                                                                      .searchPokemons[\n                                                                      item\n                                                                  ].sprites\n                                                                      .other\n                                                                      .dream_world\n                                                                      .front_default\n                                                                : this.state\n                                                                      .searchPokemons[\n                                                                      item\n                                                                  ].sprites\n                                                                      .other[\n                                                                      \"official-artwork\"\n                                                                  ]\n                                                                      .front_default\n                                                        )\n                                                    }\n                                                />\n                                            </motion.li>\n                                        ))}\n                                    </motion.ul>\n                                ) : !this.state.isFilter ? (\n                                    <motion.ul\n                                        className=\"card__content\"\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        variants={listnya}\n                                    >\n                                        {Object.keys(\n                                            this.state.allPokemons\n                                        ).map((item, key) => (\n                                            <motion.li\n                                                className=\"card__li\"\n                                                key={\n                                                    this.state.allPokemons[item]\n                                                        .id\n                                                }\n                                                variants={itemsnya}\n                                            >\n                                                <Pokemon\n                                                    key={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].id\n                                                    }\n                                                    id={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].id\n                                                    }\n                                                    image={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].sprites.other\n                                                            .dream_world\n                                                            .front_default\n                                                            ? this.state\n                                                                  .allPokemons[\n                                                                  item\n                                                              ].sprites.other\n                                                                  .dream_world\n                                                                  .front_default\n                                                            : this.state\n                                                                  .allPokemons[\n                                                                  item\n                                                              ].sprites.other[\n                                                                  \"official-artwork\"\n                                                              ].front_default\n                                                    }\n                                                    name={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].name\n                                                    }\n                                                    type={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].types\n                                                    }\n                                                    height={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].height\n                                                    }\n                                                    weight={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].weight\n                                                    }\n                                                    onElemClick={() =>\n                                                        this.fetchPokemonData(\n                                                            this.state\n                                                                .allPokemons[\n                                                                item\n                                                            ].id,\n                                                            this.state\n                                                                .allPokemons[\n                                                                item\n                                                            ].name,\n                                                            this.state\n                                                                .allPokemons[\n                                                                item\n                                                            ].types,\n                                                            this.state\n                                                                .allPokemons[\n                                                                item\n                                                            ].sprites.other\n                                                                .dream_world\n                                                                .front_default\n                                                                ? this.state\n                                                                      .allPokemons[\n                                                                      item\n                                                                  ].sprites\n                                                                      .other\n                                                                      .dream_world\n                                                                      .front_default\n                                                                : this.state\n                                                                      .allPokemons[\n                                                                      item\n                                                                  ].sprites\n                                                                      .other[\n                                                                      \"official-artwork\"\n                                                                  ]\n                                                                      .front_default\n                                                        )\n                                                    }\n                                                />\n                                            </motion.li>\n                                        ))}\n                                    </motion.ul>\n                                ) : (\n                                    <motion.ul\n                                        // style={{\n                                        //     display: \"grid\",\n                                        //     gridTemplateColumns: \"1fr 1fr 1fr\",\n                                        //     width: \"100%\",\n                                        //     gap: \"30px\",\n                                        //     listStyleType: \"none\",\n                                        //     paddingInlineStart: \"0px\",\n                                        //     alignItems: \"center\",\n                                        //     justifyContent: \"center\",\n                                        // }}\n                                        className=\"card__content\"\n                                        initial=\"hidden\"\n                                        animate=\"visible\"\n                                        variants={listnya}\n                                    >\n                                        {Object.keys(\n                                            this.state.filterPokemons\n                                        ).map((item, key) => (\n                                            <motion.li\n                                                className=\"card__li\"\n                                                key={\n                                                    this.state.allPokemons[item]\n                                                        .id\n                                                }\n                                                variants={itemsnya}\n                                            >\n                                                <Pokemon\n                                                    key={\n                                                        this.state\n                                                            .filterPokemons[\n                                                            item\n                                                        ].id\n                                                    }\n                                                    id={\n                                                        this.state\n                                                            .filterPokemons[\n                                                            item\n                                                        ].id\n                                                    }\n                                                    image={\n                                                        this.state\n                                                            .filterPokemons[\n                                                            item\n                                                        ].sprites.other\n                                                            .dream_world\n                                                            .front_default\n                                                            ? this.state\n                                                                  .filterPokemons[\n                                                                  item\n                                                              ].sprites.other\n                                                                  .dream_world\n                                                                  .front_default\n                                                            : this.state\n                                                                  .filterPokemons[\n                                                                  item\n                                                              ].sprites.other[\n                                                                  \"official-artwork\"\n                                                              ].front_default\n                                                    }\n                                                    name={\n                                                        this.state\n                                                            .filterPokemons[\n                                                            item\n                                                        ].name\n                                                    }\n                                                    type={\n                                                        this.state\n                                                            .filterPokemons[\n                                                            item\n                                                        ].types\n                                                    }\n                                                    height={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].height\n                                                    }\n                                                    weight={\n                                                        this.state.allPokemons[\n                                                            item\n                                                        ].weight\n                                                    }\n                                                    onElemClick={() =>\n                                                        this.fetchPokemonData(\n                                                            this.state\n                                                                .filterPokemons[\n                                                                item\n                                                            ].id,\n                                                            this.state\n                                                                .filterPokemons[\n                                                                item\n                                                            ].name,\n                                                            this.state\n                                                                .filterPokemons[\n                                                                item\n                                                            ].types,\n                                                            this.state\n                                                                .filterPokemons[\n                                                                item\n                                                            ].sprites.other\n                                                                .dream_world\n                                                                .front_default\n                                                                ? this.state\n                                                                      .filterPokemons[\n                                                                      item\n                                                                  ].sprites\n                                                                      .other\n                                                                      .dream_world\n                                                                      .front_default\n                                                                : this.state\n                                                                      .filterPokemons[\n                                                                      item\n                                                                  ].sprites\n                                                                      .other[\n                                                                      \"official-artwork\"\n                                                                  ]\n                                                                      .front_default\n                                                        )\n                                                    }\n                                                />\n                                            </motion.li>\n                                        ))}\n                                    </motion.ul>\n                                )}\n                            </CardContent>\n                        )}\n                    </CategoryContent>\n                </CategoryContainer>\n            </>\n        );\n    }\n}\n","import React, { useContext } from \"react\";\nimport { ListContainer } from \"../components/Elements/Elements\";\nimport { HomeSectionList } from \"../components/HomeSection\";\nimport Navbar from \"../components/Navbar\";\nimport Scroll from \"../components/Navbar/Scroll\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { PokemonCardList } from \"../components/Pokemon/index.js\";\nimport { motion } from \"framer-motion\";\n\nconst PokemonList = () => {\n    const { listPokemon } = useContext(GlobalContext);\n\n    const container = {\n        hidden: { opacity: 1, scale: 0 },\n        visible: {\n            opacity: 1,\n            scale: 1,\n            transition: {\n                delayChildren: 0.8,\n                staggerChildren: 0.4,\n            },\n        },\n    };\n\n    const item_nya = {\n        hidden: { x: -120, opacity: 0 },\n        visible: {\n            x: 0,\n            opacity: 1,\n        },\n    };\n\n    return (\n        <>\n            <Navbar />\n            <HomeSectionList description=\"This page is My Pokemon List.\" />\n            <ListContainer>\n                <motion.div\n                    variants={container}\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    className=\"grid_content\"\n                >\n                    {listPokemon.map((item, i) => (\n                        <motion.li\n                            variants={item_nya}\n                            key={i}\n                            className=\"card__li\"\n                        >\n                            <PokemonCardList\n                                id={item.id}\n                                name={item.name}\n                                type={item.types}\n                                weight={item.weight}\n                                height={item.height}\n                                image={\n                                    item.sprites.other.dream_world.front_default\n                                        ? item.sprites.other.dream_world\n                                              .front_default\n                                        : item.sprites.other[\"official-artwork\"]\n                                              .front_default\n                                }\n                                titleNew={item.title}\n                            />\n                        </motion.li>\n                    ))}\n                </motion.div>\n            </ListContainer>\n            <Scroll />\n        </>\n    );\n};\n\nexport default PokemonList;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport PokemonDetails from \"../pages/PokemonDetails\";\nimport { PokemonHome } from \"../pages/PokemonHome\";\nimport React from \"react\";\nimport PokemonList from \"../pages/PokemonList\";\nimport \"./app.css\";\nimport { GlobalProvider } from \"../context/GlobalState\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <GlobalProvider>\n                <BrowserRouter basename=\"/pokedex-id\">\n                    <Routes>\n                        <Route exact path=\"/\" element={<PokemonHome />} />\n                        <Route\n                            path=\"/pokemon/:name\"\n                            element={<PokemonDetails />}\n                        />\n                        <Route path=\"/mypokemon\" element={<PokemonList />} />\n                    </Routes>\n                </BrowserRouter>\n            </GlobalProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
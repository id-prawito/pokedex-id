{"version":3,"sources":["components/Filter/FilterElements.js","components/Filter/index.js","assets/images/favicon.ico","components/HomeSection/HomeElements.js","components/HomeSection/index.js","assets/images/pokedex.png","assets/images/github-white.svg","components/Navbar/Navbar.js","components/Navbar/index.js","assets/images/pokemon.svg","components/Pokemon/Pokemon.js","components/Pokemon/index.js","assets/images/pikachu.png","components/Loading/LoadingElements.js","components/Loading/index.js","components/Category/CategoryElements.js","components/Navbar/Scroll.js","pages/index.js","components/PokemonDetail/PokemonDetailsElements.js","components/PokemonDetail/index.js","app/App.js","index.js"],"names":["SelectContainer","styled","div","SelectContent","SelectInput","Input","img","input","attrs","props","type","size","customStyles","control","styles","width","backgroundColor","display","borderRadius","border","boxShadow","outline","stylesLogo","marginRight","marginLeft","Filters","optionsRegions","this","regions","map","nilaiValuenya","label","name","offset","limit","value","key","optionsTypes","types","nilaiTypes","optionsSortby","sortby","nilaiSortby","color","fontSize","style","placeholder","options","onChange","regionsSelect","typesSelect","sortSelect","valuesearch","searchChange","React","Component","HomeContainer","HomeContent","Content","Judul","h3","Description","h1","HomeButton","LogoImg","Profile","JudulName","p","JudulDescription","JudulButton","a","ContentButton","DescriptionButton","HomeSection","src","logoImg","Nav","nav","scrollNav","NavbarContainer","NavLogo","LinkR","NavMenu","ul","NavItem","li","NavLinks","GithubIcon","Navbar","useState","setScrollNav","changeNav","window","scrollY","useEffect","addEventListener","to","onClick","scroll","scrollToTop","open","github","AboutText","About","ImageCard","Card","imgUrl","Namanya","Header","Utama","Footer","IconTypes","IsiCard","MainFooter","JudulW","Penjelasan","Name","h4","Number","Types","TypesText","Weight","Pokemon","id","image","weight","height","String","padStart","title","className","maxLength","CardLoading","IsiCardLoading","CardContent","Loading","CategoryContainer","CategoryContent","IconCategory","Icon","BungkusIcon","BungkusanIconnya","IconButtonnya","scrollIcon","Scroll","setScrollIcon","changeIcon","Home","getAllPokemons","axios","get","catch","err","console","log","response","getPokemonData","data","results","result","pokemonArr","filterArr","Promise","all","pokemonItem","then","push","sort","b","state","isTypeSelected","i","length","j","selectedType","setState","isFilter","filterPokemons","allPokemons","showLoading","fetchEvoDetails","url","evoChain","evoData","chain","evoDetails","species_name","species","min_level","trigger_name","trigger","item","hasOwnProperty","fetchEvoImages","evoChainArr","sprites","other","dream_world","front_default","fetchPokemonData","number","pokemon","category","imageURL","statistics","abs","abilities","ability","stats","Obj","stat","base_stat","pokeNumber","pokeName","showInfo","genderRate","genera","fetchPokemonDescription","pokemon_name","evolution_chain","flavor_text_entries","language","description","flavor_text","genus","gender_rate","handleChangeRegions","valueregion","sorttype","isSearch","handleChangeTypes","valuetype","noDataFound","allPoks","handleChangeSort","sortArr","handleChangeSearch","event","target","searchArr","includes","toLowerCase","toString","searchPokemons","handleClick","top","document","body","scrollHeight","behavior","catergory","searchString","isChecked","evolID","evolName","evolTypes","evolImgURL","listnya","visible","opacity","transition","when","staggerChildren","delayChildren","hidden","itemsnya","x","Filter","logoTypes","motion","initial","animate","variants","Object","keys","onElemClick","PokemonDetailsContainer","PokemonDetailsContent","HeaderDetails","BodyDetails","FooterDetails","NomorJudul","Nomor","h2","Nama","NamaGenera","WeightHeight","Judulnya","Isinya","Region","DescriptionPokemon","ImgBody","Tulisan","span","Pembungkus","AbilitiesBungkus","PembungkusAbilities","Progress","Progressnya","BungkusProgress","Text","BungkusHpProgress","Bungkusan","BaseStat","TextValue","BungkusanDetails","BungkusanDetailsBawah","BungkusEvalution","IconEvo","PembungkusDetails","NamaDetails","Textnya","PokemonDetails","useParams","setData","setTypes","setStatistics","deskripsi","setDescription","setGenera","names","setNames","images","setImages","setUrlnya","evochain","setEvoChain","urlability","setUrlAbilitinya","bisa","setBisa","idnya","setIDnya","getData","Objectnya","gambar","gambar_2","getDescription","str","JSON","stringify","convertedStr","replace","newObj","parse","penjelasan","nama","getEvoImages","image_url","getAbility","evonyaNamanya","ObjectTik","text","stringName","charAt","toUpperCase","slice","evolution","textDecoration","tipe","place","effect","fontWeight","statistik","stat__name","stat__val","App","basename","exact","path","element","PokemonDetail","ReactDOM","render","StrictMode","getElementById"],"mappings":"gYAEaA,GAAkBC,KAAOC,IAAV,0hBA0BfC,GAAgBF,KAAOC,IAAV,ggBAsBbE,GAAcH,KAAOC,IAAV,mgBAmCXG,IAbYJ,KAAOK,IAAV,gRAaDL,KAAOM,MAAMC,OAAM,SAACC,GAAD,MAAY,CAChDC,KAAM,UADWT,CAAH,+lBA2BJ,SAACQ,GAAD,OAAWA,EAAME,QAChB,SAACF,GAAD,OAAWA,EAAME,S,iBCtG1BC,GAAe,CACjBC,QAAS,SAACC,GAAD,oBAAC,gBAEHA,GAFE,IAGLC,MAAO,IACPC,gBAAiB,QACjBC,QAAS,OACTC,aAAc,EACdC,OAAQ,OACRC,UAAW,OACX,6CAA8C,CAC1CJ,gBAAiB,QACjBG,OAAQ,OACRJ,MAAO,IACPM,QAAS,OACTD,UAAW,QAEf,qEAAsE,CAClEJ,gBAAiB,QACjBG,OAAQ,OACRJ,MAAO,IACPM,QAAS,OACTD,UAAW,QAGf,oEAAqE,CACjEJ,gBAAiB,QACjBG,OAAQ,OACRJ,MAAO,IACPM,QAAS,OACTD,UAAW,QAGf,oEAAqE,CACjEJ,gBAAiB,QACjBG,OAAQ,OACRJ,MAAO,IACPM,QAAS,OACTD,UAAW,YAKjBE,GAAa,CACfC,YAAa,MACbC,WAAY,MACZ,kDAAmD,CAC/CD,YAAa,OACbC,WAAY,SAIdC,G,6JACF,WACI,IAEMC,EAFaC,KAAKlB,MAAMmB,QAEIC,KAAI,SAACC,GAAD,MAAoB,CACtDC,MACID,EAAcE,KACd,OACCF,EAAcG,OAAS,GACxB,OACCH,EAAcI,MAAQJ,EAAcG,QACrC,KACJE,MAAOL,EAAcE,KACrBI,IAAKN,EAAcE,SAKjBK,EAFaV,KAAKlB,MAAM6B,MAEET,KAAI,SAACU,GAAD,MAAiB,CACjDR,MAAOQ,EACPJ,MAAOI,EACPH,IAAKG,MAKHC,EAFcb,KAAKlB,MAAMgC,OAEGZ,KAAI,SAACa,GAAD,MAAkB,CACpDX,MAAOW,EACPP,MAAOO,EACPN,IAAKM,MAIT,OACI,qCACI,eAAC1C,GAAD,UACI,gBAACG,GAAD,WACI,gBAACC,GAAD,WACI,eAAC,KAAD,CACIuC,MAAM,qBACNC,SAAS,QACTC,MAAOvB,KAGX,eAAC,KAAD,CAEIwB,YAAY,UACZhC,OAAQF,GACRmC,QAASrB,EACTsB,SAAUrB,KAAKlB,MAAMwC,mBAI7B,gBAAC7C,GAAD,WACI,eAAC,KAAD,CACIuC,MAAM,qBACNC,SAAS,QACTC,MAAOvB,KAEX,eAAC,KAAD,CAEIwB,YAAY,QACZhC,OAAQF,GACRmC,QAASV,EACTW,SAAUrB,KAAKlB,MAAMyC,iBAG7B,gBAAC9C,GAAD,WACI,eAAC,KAAD,CACIuC,MAAM,qBACNC,SAAS,QACTC,MAAOvB,KAEX,eAAC,KAAD,CAEIwB,YAAY,UACZhC,OAAQF,GACRmC,QAASP,EACTQ,SAAUrB,KAAKlB,MAAM0C,gBAG7B,gBAAC/C,GAAD,WACI,eAAC,KAAD,CACIuC,MAAM,qBACNC,SAAS,QACTC,MAAOvB,KAEX,eAACjB,GAAD,CACI8B,MAAOR,KAAKlB,MAAM2C,YAClBJ,SAAUrB,KAAKlB,MAAM4C,aACrBP,YAAY,yB,GA1FtBQ,IAAMC,WAoGb9B,MCnKA,OAA0B,oCCE5B+B,GAAgBvD,KAAOC,IAAV,msBAgCbuD,GAAcxD,KAAOC,IAAV,qQAYXwD,GAAUzD,KAAOC,IAAV,6CAIPyD,GAAQ1D,KAAO2D,GAAV,iHAMLC,GAAc5D,KAAO6D,GAAV,qXAgBXC,GAAa9D,KAAOC,IAAV,sgBAsBV8D,GAAU/D,KAAOK,IAAV,kQAaP2D,GAAUhE,KAAOC,IAAV,8EAKPgE,GAAYjE,KAAOkE,EAAV,0FAKTC,GAAmBnE,KAAOkE,EAAV,iHAMhBE,GAAcpE,KAAOqE,EAAV,wiBAuBXC,GAAgBtE,KAAOC,IAAV,iNAWbsE,GAAoBvE,KAAOC,IAAV,2FC3GfuE,GAhCK,WAChB,OACI,qCACI,gBAACjB,GAAD,WACI,eAACC,GAAD,UACI,gBAACC,GAAD,WACI,eAACC,GAAD,gCACA,eAACE,GAAD,4FAMR,eAACE,GAAD,UACI,gBAACQ,GAAD,WACI,eAACF,GAAD,0BACA,gBAACG,GAAD,WACI,eAACR,GAAD,CAASU,IAAKC,KACd,gBAACV,GAAD,WACI,eAACC,GAAD,yBACA,eAACE,GAAD,6C,iBCtCjB,OAA0B,oCCA1B,OAA0B,yCCG5BQ,GAAM3E,KAAO4E,IAAV,uVACE,qBAAGC,UACD,wBAA0B,iBAgBjCC,GAAkB9E,KAAOC,IAAV,2qBAgCf8E,GAAU/E,aAAOgF,KAAPhF,CAAH,iOAWPiF,GAAUjF,KAAOkF,GAAV,2HAOPC,GAAUnF,KAAOoF,GAAV,gDAIPC,GAAWrF,KAAOC,IAAV,+ZAwCR8D,IAjBY/D,KAAOC,IAAV,uTAiBCD,KAAOK,IAAV,yIASPiF,GAAatF,KAAOK,IAAV,wICnERkF,GA1CA,WACX,MAAkCC,oBAAS,GAA3C,oBAAOX,EAAP,KAAkBY,EAAlB,KAEMC,EAAY,WACVC,OAAOC,SAAW,IAClBH,GAAa,GAEbA,GAAa,IAIrBI,qBAAU,WACNF,OAAOG,iBAAiB,SAAUJ,KACnC,IASH,OACI,qCACI,eAACf,GAAD,CAAKE,UAAWA,EAAhB,SACI,gBAACC,GAAD,WACI,eAACC,GAAD,CAASgB,GAAG,IAAIC,QAXb,WACfC,iBAAOC,eAUK,SACI,eAAC,GAAD,CAASzB,IAAKC,OAElB,eAACO,GAAD,UACI,eAACE,GAAD,UACI,eAACE,GAAD,CAAUW,QAZf,WACfL,OAAOQ,KAAK,kCAWQ,SACI,eAACb,GAAD,CAAYb,IAAK2B,mBC/ClC,OAA0B,oCCG5BC,GAAYrG,KAAOkE,EAAV,qHAOToC,GAAQtG,KAAOC,IAAV,6TAgBLsG,GAAYvG,KAAOK,IAAV,+RAcTmG,GAAOxG,KAAOC,IAAV,+iCAaewG,IAiBZ,SAACjG,GAAD,OAAWA,EAAMkG,UAYvBH,IAODI,GAAS3G,KAAOC,IAAV,iLASN2G,GAAQ5G,KAAOC,IAAV,2JASL4G,GAAS7G,KAAOC,IAAV,4EAKN6G,GAAY9G,KAAOK,IAAV,oRAcT0G,GAAU/G,KAAOC,IAAV,0OAYP+G,GAAahH,KAAOC,IAAV,iTAcVgH,GAASjH,KAAOkE,EAAV,mIAONgD,GAAalH,KAAOkE,EAAV,mIAOViD,GAAOnH,KAAOoH,GAAV,iIAMJC,GAASrH,KAAOkE,EAAV,uHAMNoD,GAAQtH,KAAOC,IAAV,wLAEM,SAACO,GAAD,OAAWA,EAAMkC,SAQ5B6E,GAAYvH,KAAOC,IAAV,0FAMTuH,GAASxH,KAAOC,IAAV,oGC3KJ,SAASwH,GAAQjH,GAC5B,IAAQkH,EAA0ClH,EAA1CkH,GAAIC,EAAsCnH,EAAtCmH,MAAO5F,EAA+BvB,EAA/BuB,KAAMtB,EAAyBD,EAAzBC,KAAMmH,EAAmBpH,EAAnBoH,OAAQC,EAAWrH,EAAXqH,OACvC,OACI,qCACI,eAAC,KAAD,CAAM9B,GAAI,YAAchE,EAAxB,SACI,eAACyE,GAAD,CAAME,QAAS3E,EAAf,SACI,gBAACgF,GAAD,WACI,gBAACJ,GAAD,WACI,gBAAC,GAAD,gBAAWmB,OAAOJ,GAAIK,SAAS,EAAG,QAClC,eAACR,GAAD,UACK9G,EAAKmB,KAAI,SAACnB,EAAM0B,GAAP,OACN,eAACmF,GAAD,CAEIU,MAAOvH,EAAKA,KAAKsB,KACjBkG,UAAS,yBAAoBxH,EAAKA,KAAKsB,MAH3C,SAKI,eAAC+E,GAAD,CACIrC,IAAG,UAAKhE,EAAKA,KAAKsB,KAAf,WALFtB,EAAKA,KAAKsB,cAW/B,gBAAC6E,GAAD,WACI,eAACL,GAAD,CAAW9B,IAAKkD,IAChB,eAACR,GAAD,CAAMe,UAAU,KAAhB,SAAsBnG,OAE1B,gBAAC8E,GAAD,WACI,eAACP,GAAD,UACI,eAACD,GAAD,sBAEJ,gBAACW,GAAD,WACI,gBAACQ,GAAD,WACI,eAACP,GAAD,qBACA,gBAACC,GAAD,WAAaU,EAAb,WAEJ,gBAACJ,GAAD,WACI,eAACP,GAAD,qBACA,gBAACC,GAAD,WAAaW,EAAS,GAAtB,0BC7DrB,I,uOAAA,OAA0B,oCCE5BM,GAAcnI,KAAOC,IAAV,8UAgBXmI,GAAiBpI,KAAOC,IAAV,2cAyBd0G,GAAS3G,KAAOC,IAAV,mLASN2G,GAAQ5G,KAAOC,IAAV,6JASL4G,GAAS7G,KAAOC,IAAV,8EAKNoH,GAASrH,KAAOC,IAAV,uOAUNqH,GAAQtH,KAAOC,IAAV,+MAULsH,GAAYvH,KAAOC,IAAV,4FAMT6G,GAAY9G,KAAOC,IAAV,qPAWToG,GAAYrG,KAAOkE,EAAV,6OAWToC,GAAQtG,KAAOC,IAAV,8UAeL+G,GAAahH,KAAOC,IAAV,kTAcVgH,GAASjH,KAAOkE,EAAV,oNAUNgD,GAAalH,KAAOkE,EAAV,oNAUVsD,GAASxH,KAAOC,IAAV,sGAMNsG,GAAYvG,KAAOC,IAAV,2PAWTkH,GAAOnH,KAAOoH,GAAV,+LAQJiB,GAAcrI,KAAOC,IAAV,4GC9HTqI,GAxCC,WACZ,OACI,qCACI,eAACD,GAAD,UACI,eAACF,GAAD,UACI,gBAACC,GAAD,WACI,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,UACI,eAAC,GAAD,UACI,eAAC,GAAD,WAIZ,gBAAC,GAAD,WACI,eAAC,GAAD,IACA,eAAC,GAAD,0BAEJ,gBAAC,GAAD,WACI,eAAC,GAAD,UACI,eAAC,GAAD,sBAEJ,gBAAC,GAAD,WACI,gBAAC,GAAD,WACI,eAAC,GAAD,qBACA,eAAC,GAAD,uBAEJ,gBAAC,GAAD,WACI,eAAC,GAAD,qBACA,eAAC,GAAD,wC,UCjDvBG,GAAoBvI,KAAOC,IAAV,siBA0BjBuI,GAAkBxI,KAAOC,IAAV,gkBAwBfwI,GAAezI,KAAOC,IAAV,0XAiBZyI,GAAO1I,KAAOK,IAAV,sRAcJuD,GAAc5D,KAAOkE,EAAV,ocAmBXyE,GAAc3I,KAAOC,IAAV,oOA4BXoI,IAjBOrI,KAAOkE,EAAV,+IAOKlE,KAAOC,IAAV,2LAUQD,KAAOC,IAAV,mHAUX2I,IAJsB5I,KAAOC,IAAV,qDAIAD,KAAOC,IAAV,uL,SCvIvB4I,GAAgB7I,KAAOC,IAAV,uVAcJ,qBAAG6I,WAA+B,IAAM,OA8BxCC,GA3BA,WACX,MAAoCvD,oBAAS,GAA7C,oBAAOsD,EAAP,KAAmBE,EAAnB,KAEMC,EAAa,WACXtD,OAAOC,SAAW,IAClBoD,GAAc,GAEdA,GAAc,IAItBnD,qBAAU,WACNF,OAAOG,iBAAiB,SAAUmD,KACnC,IAMH,OACI,qCACI,eAACJ,GAAD,CAAeC,WAAYA,EAAY9C,QAN5B,WACfC,iBAAOC,eAKH,SACI,eAAC,KAAD,SCtBHgD,GAAb,mDACI,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IA2GV2I,eA5GmB,yCA4GF,WAAOnH,EAAQC,GAAf,gBAAAoC,EAAA,sEACU+E,KAClBC,IADkB,kDAE4BpH,EAF5B,mBAE4CD,IAE9DsH,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAL7B,OACPG,EADO,OAMb,EAAKC,eAAeD,EAASE,KAAKC,SANrB,2CA5GE,0DAqHnBF,eArHmB,yCAqHF,WAAOG,GAAP,sBAAAzF,EAAA,6DAEP0F,EAAa,GACfC,EAAY,GAHH,SAIPC,QAAQC,IACVJ,EAAOlI,KAAI,SAACuI,GACR,OAAOf,KACFC,IADE,4CAEsCc,EAAYpI,OAEpDqI,MAAK,SAACN,GACHC,EAAWM,KAAKP,EAAOF,aAX1B,OAgBb,GADAG,EAAWO,MAAK,SAACjG,EAAGkG,GAAJ,OAAWlG,EAAEqD,GAAK6C,EAAE7C,GAAK,EAAI6C,EAAE7C,GAAKrD,EAAEqD,IAAM,EAAI,KAC5D,EAAK8C,MAAMC,eAAgB,CAC3B,IAASC,EAAI,EAAGA,EAAIX,EAAWY,OAAQD,IACnC,IAASE,EAAI,EAAGA,EAAIb,EAAWW,GAAGrI,MAAMsI,OAAQC,IAExC,EAAKJ,MAAMK,eACXd,EAAWW,GAAGrI,MAAMuI,GAAGnK,KAAKsB,MAE5BiI,EAAUK,KAAKN,EAAWW,IAItC,EAAKI,SAAS,CACVC,UAAU,EACVC,eAAgBhB,EAChBiB,YAAalB,EACbmB,aAAa,SAGjB,EAAKJ,SAAS,CACVC,UAAU,EACVE,YAAalB,EACbmB,aAAa,IArCR,2CArHE,wDAiKnBC,gBAjKmB,yCAiKD,WAAOC,GAAP,sBAAA/G,EAAA,sEAES+E,KAClBC,IAAI+B,GACJ9B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAJ5B,OAERG,EAFQ,OAMR2B,EAAW,GACbC,EAAU5B,EAASE,KAAK2B,MAC5B,GACUC,EAAaF,EAAO,kBAAsB,GAChDD,EAAShB,KAAK,CACVoB,aAAcH,EAAQI,QAAQ3J,KAC9B4J,UAAYH,EAAiBA,EAAWG,UAAf,EACzBC,aAAeJ,EAAoBA,EAAWK,QAAQ9J,KAA1B,KAC5B+J,KAAON,EAAoBA,EAAWM,KAAlB,OAExBR,EAAUA,EAAO,WAAe,SACzBA,GAAWA,EAAQS,eAAe,eAG7C,EAAKC,eAAeX,GApBN,2CAjKC,wDAwLnBW,eAxLmB,yCAwLF,WAAOC,GAAP,kBAAA5H,EAAA,sDAEJqG,EAAI,EAFA,YAEGA,EAAIuB,EAAYtB,QAFnB,gCAGcvB,KAClBC,IADkB,4CAEsB4C,EAAYvB,GAAGe,eAEvDnC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAPjC,QAGHG,EAHG,QAQAE,KAAKsC,QAAQC,MAAMC,YAAYC,cACjCJ,EAAYvB,GAAZ,UACGhB,EAASE,KAAKsC,QAAQC,MAAMC,YAAYC,cAC3CJ,EAAYvB,GAAZ,UACGhB,EAASE,KAAKsC,QAAQC,MAClB,oBACFE,cAdH,OAE2B3B,IAF3B,sBAgBb,EAAKI,SAAS,CACVO,SAAUY,IAjBD,4CAxLE,wDA6MnBK,iBA7MmB,yCA6MA,WAAOC,EAAQC,EAASC,EAAUC,GAAlC,4BAAArI,EAAA,sEAEQ+E,KAClBC,IADkB,4CACuBmD,IACzClD,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAJ3B,OASf,IAPMG,EAFS,OAMTiD,EAAa,GACfC,EAAM,GACJlF,EAAKgC,EAASE,KAAKlC,GAChBgD,EAAI,EAAGA,EAAIhB,EAASE,KAAKiD,UAAUlC,OAAQD,IAChDkC,EAAIvC,KAAKX,EAASE,KAAKiD,UAAUnC,GAAGoC,QAAQ/K,MAEhD,IAAS6I,EAAI,EAAGA,EAAIlB,EAASE,KAAKmD,MAAMpC,OAAQC,KACtCoC,EAAM,IACT,WAAiBtD,EAASE,KAAKmD,MAAMnC,GAAGqC,KAAKlL,KAChDiL,EAAG,UAAgBtD,EAASE,KAAKmD,MAAMnC,GAAGsC,UAC1CP,EAAWtC,KAAK2C,GAEpB,EAAKlC,SAAS,CACVlD,OAAQ8B,EAASE,KAAKhC,OACtBC,OAAQ6B,EAASE,KAAK/B,OACtB4E,WACAU,WAAYzF,EACZgF,WACAU,SAAUZ,EACVa,UAAU,EACVN,MAAOJ,EACPE,UAAWD,IAEf,EAAK9B,SAAS,CACVO,SAAU,GACViC,WAAY,GACZC,OAAQ,KAGZ,EAAKC,wBAAwBhB,GAnCd,4CA7MA,8DAmPnBgB,wBAnPmB,yCAmPO,WAAOC,GAAP,sBAAApJ,EAAA,6DAElBkJ,EAAS,GAFS,SAGCnE,KAClBC,IADkB,oDAC+BoE,IACjDnE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MALpB,OAGhBG,EAHgB,OAMtB,EAAKyB,gBAAgBzB,EAASE,KAAK8D,gBAAgBtC,KAN7B,SAUVV,EAAI,EAVM,YAWdA,EAAIhB,EAASE,KAAK+D,oBAAoBhD,OAAS,GAXjC,oBAe6C,OAAvDjB,EAASE,KAAK+D,oBAAoBjD,GAAGkD,SAAS7L,KAfpC,wBAiBV,EAAKyI,MAAMqD,YACPnE,EAASE,KAAK+D,oBAAoBjD,GAAGoD,YAlB/B,6BAYdpD,IAZc,uBAsBTE,EAAI,EAtBK,aAsBFA,EAAIlB,EAASE,KAAK2D,OAAO5C,QAtBvB,oBAuBgC,OAA1CjB,EAASE,KAAK2D,OAAO3C,GAAGgD,SAAS7L,KAvBvB,wBAwBVwL,EAAS7D,EAASE,KAAK2D,OAAO3C,GAAGmD,MAxBvB,6BAsB+BnD,IAtB/B,wBA4BlB,EAAKE,SAAS,CACV+C,YAAa,EAAKrD,MAAMqD,YACxBP,WAAY5D,EAASE,KAAKoE,YAC1BT,WA/Bc,kDAkClB,EAAKzC,SAAS,CACV+C,YAAa,0BAnCC,0DAnPP,wDA4RnBI,oBAAsB,SAAC/L,GAEnB,IAAK,IAAIwI,EAAI,EAAGA,EAAI,EAAKF,MAAM7I,QAAQgJ,OAAQD,IAC3C,GAAI,EAAKF,MAAM7I,QAAQ+I,GAAG3I,OAASG,EAAMA,MAAO,CAC5C,EAAK4I,SAAS,CACVoD,YAAahM,EAAMA,MAEnBiM,SAAU,KACVC,UAAU,EACVrD,UAAU,EACVG,aAAa,IAEjB,EAAK/B,eACD,EAAKqB,MAAM7I,QAAQ+I,GAAG1I,OACtB,EAAKwI,MAAM7I,QAAQ+I,GAAGzI,OAE1B,MAIRuH,QAAQC,IAAIvH,EAAMA,QAhTH,EAmTnBmM,kBAAoB,SAACnM,GAEjB,GAAoB,cAAhBA,EAAMA,MAAV,CAyBI,EAAK4I,SAAS,CACVL,gBAAgB,EAChBI,aAAc3I,EAAMA,QAI5B,IADA,IAAI8H,EAAY,GACPU,EAAI,EAAGA,EAAI,EAAKF,MAAMS,YAAYN,OAAQD,IAC/C,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKJ,MAAMS,YAAYP,GAAGrI,MAAMsI,OAAQC,IAEpD1I,EAAMA,QAAU,EAAKsI,MAAMS,YAAYP,GAAGrI,MAAMuI,GAAGnK,KAAKsB,MAExDiI,EAAUK,KAAK,EAAKG,MAAMS,YAAYP,IAI1B,SAAxB,EAAKF,MAAM2D,SACLnE,EAAUM,MAAK,SAACjG,EAAGkG,GAAJ,OACXlG,EAAEtC,KAAOwI,EAAExI,KAAO,EAAIwI,EAAExI,KAAOsC,EAAEtC,MAAQ,EAAI,KAEjDiI,EAAUM,MAAK,SAACjG,EAAGkG,GAAJ,OACXlG,EAAEqD,GAAK6C,EAAE7C,GAAK,EAAI6C,EAAE7C,GAAKrD,EAAEqD,IAAM,EAAI,KAE/C,EAAKoD,SAAS,CACVsD,UAAU,EACVjL,YAAa,GACb4H,UAAU,EACVC,eAAgBhB,EAChBsE,UAAWpM,EAAMA,QAEA,IAArB8H,EAAUW,OACJ,EAAKG,SAAS,CAAEyD,aAAa,IAC7B,EAAKzD,SAAS,CAAEyD,aAAa,QAxDnC,CACI,IAAMC,EAAU,EAAKhE,MAAMS,YACC,SAAxB,EAAKT,MAAM2D,UACXK,EAAQlE,MAAK,SAACjG,EAAGkG,GAAJ,OACTlG,EAAEtC,KAAOwI,EAAExI,KAAO,EAAIwI,EAAExI,KAAOsC,EAAEtC,MAAQ,EAAI,KAEjD,EAAK+I,SAAS,CACVC,UAAU,EACVuD,UAAWpM,EAAMA,MACjB+I,YAAauD,EACb/D,gBAAgB,MAGpB+D,EAAQlE,MAAK,SAACjG,EAAGkG,GAAJ,OACTlG,EAAEqD,GAAK6C,EAAE7C,GAAK,EAAI6C,EAAE7C,GAAKrD,EAAEqD,IAAM,EAAI,KAEzC,EAAKoD,SAAS,CACVC,UAAU,EACVuD,UAAWpM,EAAMA,MACjB+I,YAAauD,EACb/D,gBAAgB,OAzUb,EAgXnBgE,iBAAmB,SAACvM,GAChB,IAAIwM,EAEGA,EADP,EAAKlE,MAAMO,SACM,EAAKP,MAAMQ,eACX,EAAKR,MAAMS,YACR,OAAhB/I,EAAMA,MACNwM,EAAQpE,MAAK,SAACjG,EAAGkG,GAAJ,OAAWlG,EAAEqD,GAAK6C,EAAE7C,GAAK,EAAI6C,EAAE7C,GAAKrD,EAAEqD,IAAM,EAAI,KAE7DgH,EAAQpE,MAAK,SAACjG,EAAGkG,GAAJ,OACTlG,EAAEtC,KAAOwI,EAAExI,KAAO,EAAIwI,EAAExI,KAAOsC,EAAEtC,MAAQ,EAAI,KAGrD,EAAKyI,MAAMO,SACL,EAAKD,SAAS,CACVE,eAAgB0D,EAChBP,SAAUjM,EAAMA,QAEpB,EAAK4I,SAAS,CACVG,YAAayD,EACbP,SAAUjM,EAAMA,QAE1BsH,QAAQC,IAAIvH,EAAMA,QArYH,EAwYnByM,mBAAqB,SAACC,GAElBA,EAAMC,OAAO3M,MAAMyI,OAAS,EACtB,EAAKG,SAAS,CACVsD,UAAU,EACVE,UAAW,YACXnL,YAAayL,EAAMC,OAAO3M,QAE9B,EAAK4I,SAAS,CACVsD,UAAU,EACVrD,UAAU,EACV5H,YAAayL,EAAMC,OAAO3M,QAGpC,IADA,IAAI4M,EAAY,GACPpE,EAAI,EAAGA,EAAI,EAAKF,MAAMS,YAAYN,OAAQD,KAG3C,EAAKF,MAAMS,YAAYP,GAAG3I,KAAKgN,SAC3BH,EAAMC,OAAO3M,MAAM8M,gBAEvB,EAAKxE,MAAMS,YAAYP,GAAGhD,GACrBuH,WACAF,SAASH,EAAMC,OAAO3M,SAE3B4M,EAAUzE,KAAK,EAAKG,MAAMS,YAAYP,IAGzB,IAArBoE,EAAUnE,OACJ,EAAKG,SAAS,CAAEyD,aAAa,EAAMW,eAAgB,KACnD,EAAKpE,SAAS,CAAEyD,aAAa,EAAOW,eAAgBJ,KAra3C,EAyanBK,YAAc,WACVxJ,OAAM,SAAa,CACfyJ,IAAKC,SAASC,KAAKC,aACnBC,SAAS,YA1ab,EAAKhF,MAAQ,CACTS,YAAa,GACbiE,eAAgB,GAChBlE,eAAgB,GAChBK,SAAU,GACVwB,UAAW,GACXhF,OAAQ,GACRD,OAAQ,GACR6H,UAAW,GACX1C,MAAO,GACPL,SAAU,GACVU,SAAU,GACVD,WAAY,GACZG,WAAY,GACZC,OAAQ,GACR9C,gBAAgB,EAChBI,aAAc,GACdwC,UAAU,EACVe,UAAU,EACVsB,aAAc,GACd7B,YAAa,GACb3C,aAAa,EACbH,UAAU,EACVwD,aAAa,EACbtM,MAAO,IACPD,OAAQ,EACR2N,WAAW,EACXC,OAAQ,GACRC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZpO,QAAS,CACL,CACII,KAAM,QACNE,MAAO,IACPD,OAAQ,GAEZ,CACID,KAAM,QACNE,MAAO,IACPD,OAAQ,KAEZ,CACID,KAAM,QACNE,MAAO,IACPD,OAAQ,KAEZ,CACID,KAAM,SACNE,MAAO,IACPD,OAAQ,KAEZ,CACID,KAAM,QACNE,MAAO,IACPD,OAAQ,KAEZ,CACID,KAAM,QACNE,MAAO,GACPD,OAAQ,KAEZ,CACID,KAAM,QACNE,MAAO,GACPD,OAAQ,KAEZ,CACID,KAAM,QACNE,MAAO,GACPD,OAAQ,MAGhBK,MAAO,CACH,YACA,QACA,MACA,OACA,SACA,WACA,QACA,WACA,OACA,SACA,QACA,SACA,MACA,SACA,SACA,UACA,OACA,QACA,SAEJG,OAAQ,CAAC,KAAM,SAhGJ,EADvB,qDAqGI,WACId,KAAKyH,eAAezH,KAAK8I,MAAMxI,OAAQN,KAAK8I,MAAMvI,SAtG1D,gCAyGI,cAzGJ,oBAibI,WAAU,IAAD,OACC+N,EAAU,CACZC,QAAS,CACLC,QAAS,EACTC,WAAY,CACRC,KAAM,iBACNC,gBAAiB,IACjBC,cAAe,MAGvBC,OAAQ,CACJL,QAAS,EACTC,WAAY,CACRC,KAAM,mBAKZI,EAAW,CACbP,QAAS,CAAEC,QAAS,EAAGO,EAAG,GAC1BF,OAAQ,CAAEL,QAAS,EAAGO,GAAI,MAI9B,OADApB,SAASrH,MAAT,gBAEI,uCACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC0I,GAAD,CACI/O,QAASD,KAAK8I,MAAM7I,QACpBU,MAAOX,KAAK8I,MAAMnI,MAClBG,OAAQd,KAAK8I,MAAMhI,OACnB0L,YAAaxM,KAAK8I,MAAM0D,YACxBI,UAAW5M,KAAK8I,MAAM8D,UACtBH,SAAUzM,KAAK8I,MAAM2D,SACrBhL,YAAazB,KAAK8I,MAAMrH,YACxBH,cAAetB,KAAKuM,oBACpBhL,YAAavB,KAAK2M,kBAClBnL,WAAYxB,KAAK+M,iBACjBrL,aAAc1B,KAAKiN,qBAEvB,eAACpG,GAAD,UACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,eAACG,GAAD,UACI,eAACD,GAAD,UACI,eAACD,GAAD,CAAMjE,IAAKkM,SAGnB,eAAC,GAAD,wCAEHjP,KAAK8I,MAAMU,aAAe,eAAC,GAAD,KACzBxJ,KAAK8I,MAAMU,aACT,eAAC,GAAD,UACKxJ,KAAK8I,MAAM4D,SACR,eAACwC,GAAA,EAAO1L,GAAR,CACI+C,UAAU,gBACV4I,QAAQ,SACRC,QAAQ,UACRC,SAAUf,EAJd,SAMKgB,OAAOC,KACJvP,KAAK8I,MAAM0E,gBACbtN,KAAI,SAACkK,EAAM3J,GAAP,OACF,eAACyO,GAAA,EAAOxL,GAAR,CACI6C,UAAU,WAKV8I,SAAUP,EANd,SAQI,eAAC/I,GAAD,CAOIC,GACI,EAAK8C,MACA0E,eACDpD,GACFpE,GAENC,MACI,EAAK6C,MACA0E,eACDpD,GACFI,QAAQC,MACLC,YACAC,cACC,EAAK7B,MACA0E,eACDpD,GACFI,QAAQC,MACLC,YACAC,cACL,EAAK7B,MACA0E,eACDpD,GACFI,QAAQC,MACN,oBACFE,cAEZtK,KACI,EAAKyI,MACA0E,eACDpD,GACF/J,KAENtB,KACI,EAAK+J,MACA0E,eACDpD,GACFzJ,MAENwF,OACI,EAAK2C,MAAMS,YACPa,GACFjE,OAEND,OACI,EAAK4C,MAAMS,YACPa,GACFlE,OAENsJ,YAAa,kBACT,EAAK5E,iBACD,EAAK9B,MACA0E,eACDpD,GACFpE,GACF,EAAK8C,MACA0E,eACDpD,GACF/J,KACF,EAAKyI,MACA0E,eACDpD,GACFzJ,MACF,EAAKmI,MACA0E,eACDpD,GACFI,QAAQC,MACLC,YACAC,cACC,EAAK7B,MACA0E,eACDpD,GACFI,QACGC,MACAC,YACAC,cACL,EAAK7B,MACA0E,eACDpD,GACFI,QACGC,MACD,oBAECE,iBAvFf,EAAK7B,MACA0E,eACDpD,GACFpE,KAVN,EAAK8C,MAAMS,YAAYa,GAClBpE,SAoGpBhG,KAAK8I,MAAMO,SA8GZ,eAAC6F,GAAA,EAAO1L,GAAR,CAWI+C,UAAU,gBACV4I,QAAQ,SACRC,QAAQ,UACRC,SAAUf,EAdd,SAgBKgB,OAAOC,KACJvP,KAAK8I,MAAMQ,gBACbpJ,KAAI,SAACkK,EAAM3J,GAAP,OACF,eAACyO,GAAA,EAAOxL,GAAR,CACI6C,UAAU,WAKV8I,SAAUP,EANd,SAQI,eAAC/I,GAAD,CAOIC,GACI,EAAK8C,MACAQ,eACDc,GACFpE,GAENC,MACI,EAAK6C,MACAQ,eACDc,GACFI,QAAQC,MACLC,YACAC,cACC,EAAK7B,MACAQ,eACDc,GACFI,QAAQC,MACLC,YACAC,cACL,EAAK7B,MACAQ,eACDc,GACFI,QAAQC,MACN,oBACFE,cAEZtK,KACI,EAAKyI,MACAQ,eACDc,GACF/J,KAENtB,KACI,EAAK+J,MACAQ,eACDc,GACFzJ,MAENwF,OACI,EAAK2C,MAAMS,YACPa,GACFjE,OAEND,OACI,EAAK4C,MAAMS,YACPa,GACFlE,OAENsJ,YAAa,kBACT,EAAK5E,iBACD,EAAK9B,MACAQ,eACDc,GACFpE,GACF,EAAK8C,MACAQ,eACDc,GACF/J,KACF,EAAKyI,MACAQ,eACDc,GACFzJ,MACF,EAAKmI,MACAQ,eACDc,GACFI,QAAQC,MACLC,YACAC,cACC,EAAK7B,MACAQ,eACDc,GACFI,QACGC,MACAC,YACAC,cACL,EAAK7B,MACAQ,eACDc,GACFI,QACGC,MACD,oBAECE,iBAvFf,EAAK7B,MACAQ,eACDc,GACFpE,KAVN,EAAK8C,MAAMS,YAAYa,GAClBpE,SApIrB,eAACkJ,GAAA,EAAO1L,GAAR,CACI+C,UAAU,gBACV4I,QAAQ,SACRC,QAAQ,UACRC,SAAUf,EAJd,SAMKgB,OAAOC,KACJvP,KAAK8I,MAAMS,aACbrJ,KAAI,SAACkK,EAAM3J,GAAP,OACF,eAACyO,GAAA,EAAOxL,GAAR,CACI6C,UAAU,WAKV8I,SAAUP,EANd,SAQI,eAAC/I,GAAD,CAMIC,GACI,EAAK8C,MAAMS,YACPa,GACFpE,GAENC,MACI,EAAK6C,MAAMS,YACPa,GACFI,QAAQC,MACLC,YACAC,cACC,EAAK7B,MACAS,YACDa,GACFI,QAAQC,MACLC,YACAC,cACL,EAAK7B,MACAS,YACDa,GACFI,QAAQC,MACN,oBACFE,cAEZtK,KACI,EAAKyI,MAAMS,YACPa,GACF/J,KAENtB,KACI,EAAK+J,MAAMS,YACPa,GACFzJ,MAENwF,OACI,EAAK2C,MAAMS,YACPa,GACFjE,OAEND,OACI,EAAK4C,MAAMS,YACPa,GACFlE,OAENsJ,YAAa,kBACT,EAAK5E,iBACD,EAAK9B,MACAS,YACDa,GACFpE,GACF,EAAK8C,MACAS,YACDa,GACF/J,KACF,EAAKyI,MACAS,YACDa,GACFzJ,MACF,EAAKmI,MACAS,YACDa,GACFI,QAAQC,MACLC,YACAC,cACC,EAAK7B,MACAS,YACDa,GACFI,QACGC,MACAC,YACAC,cACL,EAAK7B,MACAS,YACDa,GACFI,QACGC,MACD,oBAECE,iBAlFf,EAAK7B,MAAMS,YACPa,GACFpE,KATN,EAAK8C,MAAMS,YAAYa,GAClBpE,uBAxmBzD,GAA0BrE,IAAMC,WCnBnB6N,GAA0BnR,KAAOC,IAAV,8yBAoCvBmR,GAAwBpR,KAAOC,IAAV,8cAqBrBoR,GAAgBrR,KAAOC,IAAV,oUAcbqR,GAActR,KAAOC,IAAV,+IAMXsR,GAAgBvR,KAAOC,IAAV,mKAQbuR,GAAaxR,KAAOC,IAAV,0GAOVwR,GAAQzR,KAAO0R,GAAV,wHAOLC,GAAO3R,KAAO0R,GAAV,yJAQJE,GAAa5R,KAAO0R,GAAV,+HAOVG,GAAe7R,KAAOC,IAAV,iSAcZuH,GAASxH,KAAOC,IAAV,4OAWN6R,GAAW9R,KAAO0R,GAAV,+RAcRK,GAAS/R,KAAO0R,GAAV,uSAaNM,GAAShS,KAAOC,IAAV,sFAMNgS,GAAqBjS,KAAOC,IAAV,8OAYlBqG,GAAQtG,KAAO0R,GAAV,wHAOL9N,GAAc5D,KAAOkE,EAAV,wHAOXgO,GAAUlS,KAAOK,IAAV,6fAwBP8R,GAAUnS,KAAOoS,KAAV,22BAuCP1J,GAAO1I,KAAOK,IAAV,sRAcJsI,GAAc3I,KAAOC,IAAV,2OAWXsH,GAAYvH,KAAOC,IAAV,kHAkBToS,IAXgBrS,KAAOC,IAAV,kHAMAD,KAAOC,IAAV,6EAKGD,KAAOC,IAAV,8FAMVqS,GAAmBtS,KAAOC,IAAV,qcAmBhBsS,GAAsBvS,KAAOC,IAAV,6PAWnBuS,GAAWxS,KAAOC,IAAV,sGAKRwS,GAAczS,KAAOC,IAAV,+HAGX,SAACO,GAAD,OAAWA,EAAMM,SAIjB4R,GAAkB1S,KAAOC,IAAV,yIAQf0S,GAAO3S,KAAO0R,GAAV,iQAaJkB,GAAoB5S,KAAOC,IAAV,8HAOjB4S,GAAY7S,KAAOC,IAAV,wWAiBT6S,GAAW9S,KAAO0R,GAAV,+IAQRqB,GAAY/S,KAAO0R,GAAV,8QAmBTsB,IANYhT,KAAOC,IAAV,+FAMUD,KAAOC,IAAV,wOAWhBgT,GAAwBjT,KAAOC,IAAV,gHAMrBiT,GAAmBlT,KAAOC,IAAV,iXAchBkT,GAAUnT,KAAOK,IAAV,sRAcP+S,GAAoBpT,KAAOC,IAAV,+UAgBjBoT,GAAcrT,KAAOkE,EAAV,kLASXoP,GAAUtT,KAAOkE,EAAV,6KASPS,GAAM3E,KAAO4E,IAAV,iQACE,qBAAGC,UACD,wBAA0B,iBAYjCC,GAAkB9E,KAAOC,IAAV,0pBA+Bf8E,GAAU/E,aAAOgF,KAAPhF,CAAH,mOAWP+D,GAAU/D,KAAOK,IAAV,0I,SChHLkT,GA3YQ,WACnB,IAAMxR,EAASyR,eAATzR,KAEN,EAAwByD,mBAAS,IAAjC,oBAAOoE,EAAP,KAAa6J,EAAb,KAEA,EAA0BjO,mBAAS,IAAnC,oBAAOnD,EAAP,KAAcqR,EAAd,KACA,EAAoClO,mBAAS,IAA7C,oBAAOmH,EAAP,KAAmBgH,EAAnB,KACA,EAAoCnO,mBAAS,IAA7C,oBAAOoO,EAAP,KAAkBC,EAAlB,KACA,EAA4BrO,mBAAS,IAArC,oBAAO+H,EAAP,KAAeuG,EAAf,KACA,EAA0BtO,mBAAS,IAAnC,oBAAOuO,EAAP,KAAcC,EAAd,KACA,EAA4BxO,mBAAS,IAArC,oBAAOyO,EAAP,KAAeC,EAAf,KACA,EAAyB1O,mBAAS,IAAlC,oBAAO4F,EAAP,KAAY+I,EAAZ,KACA,EAAgC3O,mBAAS,IAAzC,oBAAO4O,EAAP,KAAiBC,EAAjB,KAEA,EAAuC7O,mBAAS,IAAhD,oBAAO8O,EAAP,KAAmBC,EAAnB,KACA,EAAwB/O,mBAAS,IAAjC,oBAAOgP,EAAP,KAAaC,EAAb,KAEA,EAA0BjP,qBAA1B,oBAAOkP,EAAP,KAAcC,EAAd,KAEA9O,qBAAU,WACN,IAAM+O,EAAO,yCAAG,6CAAAvQ,EAAA,+EAEe+E,KAClBC,IADkB,4CACuBtH,IACzCuH,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAJlC,OAUR,IARMG,EAFE,OAKR+J,EAAQ/J,EAASE,MACjB+K,EAASjL,EAASE,KAAKlC,IACjBiF,EAAa,GAGV/B,EAAI,EAAGA,EAAIlB,EAASE,KAAKmD,MAAMpC,OAAQC,KACtCoC,EAAM,IACT,WAAiBtD,EAASE,KAAKmD,MAAMnC,GAAGqC,KAAKlL,KAChDiL,EAAG,UAAgBtD,EAASE,KAAKmD,MAAMnC,GAAGsC,UAC1CP,EAAWtC,KAAK2C,GAKpB,IAHA2G,EAAchH,GAER2H,EAAa,GACV5J,EAAI,EAAGA,EAAIhB,EAASE,KAAKiD,UAAUlC,OAAQD,IAChD4J,EAAWjK,KAAKX,EAASE,KAAKiD,UAAUnC,GAAGoC,QAAQ1B,KAKvD,IAHAmJ,EAAiBD,GAEXjS,EAAQ,GACLqI,EAAI,EAAGA,EAAIhB,EAASE,KAAKvH,MAAMsI,OAAQD,IAC5CrI,EAAMgI,KAAKX,EAASE,KAAKvH,MAAMqI,GAAGjK,KAAKsB,MAE3C2R,EAASrR,GACHwS,EAAY,CACdC,OAAQpL,EAASE,KAAKsC,QAAQC,MAAMC,YAC/BC,cACL0I,SACIrL,EAASE,KAAKsC,QAAQC,MAAM,oBACvBE,eAEb6H,EAAUW,GApCF,kDAsCRrL,QAAQC,IAAI,SAtCJ,0DAAH,qDAyCbmL,MACD,CAAC7S,IAEJ8D,qBAAU,WACN,IAAMmP,EAAc,yCAAG,mDAAA3Q,EAAA,+EAEQ+E,KAClBC,IADkB,oDAC+BqL,IACjDpL,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MAJ3B,OAETG,EAFS,OAKXuL,EAAMC,KAAKC,UAAUzL,EAASE,MAE9BwL,EAAeH,EAAII,QAAQ,MAAO,IAGlCC,EAASJ,KAAKK,MAAMH,GACxBvB,EAAeyB,GAEP5K,EAAI,EAbG,YAcXA,EAAIhB,EAASE,KAAK+D,oBAAoBhD,OAAS,GAdpC,oBAmBP,OADAjB,EAASE,KAAK+D,oBAAoBjD,GAAGkD,SAAS7L,KAlBvC,wBAqBD8S,EAAY,CACdW,WACI9L,EAASE,KAAK+D,oBAAoBjD,GAC7BoD,aAEb+F,EAAegB,GA1BR,6BAeXnK,IAfW,uBA+BNA,EAAI,EA/BE,aA+BCA,EAAIhB,EAASE,KAAK2D,OAAO5C,OAAS,GA/BnC,oBAgCmC,OAA1CjB,EAASE,KAAK2D,OAAO7C,GAAGkD,SAAS7L,KAhC1B,wBAiCD8S,EAAY,CACdtH,OAAQ7D,EAASE,KAAK2D,OAAO7C,GAAGqD,OAEpC+F,EAAUe,GApCH,6BA+BsCnK,IA/BtC,wBAyCNA,EAAI,EAzCE,aAyCCA,EAAIhB,EAASE,KAAKmK,MAAMpJ,OAAS,GAzClC,oBA0CkC,OAAzCjB,EAASE,KAAKmK,MAAMrJ,GAAGkD,SAAS7L,KA1CzB,wBA2CD8S,EAAY,CACdY,KAAM/L,EAASE,KAAKmK,MAAMrJ,GAAG3I,MAEjCiS,EAASa,GA9CF,6BAyCqCnK,IAzCrC,wBAoDPA,EAAI,EApDG,aAqDXA,EAAIhB,EAASE,KAAK8D,gBAAgBtC,IAAIT,QArD3B,wBAwDLkK,EAAY,CACdzJ,IAAK1B,EAASE,KAAK8D,gBAAgBtC,KAEvC+I,EAAUU,GA3DC,6BAsDXnK,IAtDW,0EAkEfmJ,EAHkB,CACd2B,WAAY,yBAhED,0DAAH,qDAuEpBR,MACD,CAACN,IAEJ7O,qBAAU,WACN,IAAM6P,EAAY,yCAAG,uCAAArR,EAAA,+EAEU+E,KAAMC,IAAI+B,EAAIA,KAFxB,OAEP1B,EAFO,OAIP2B,EAAW,GAEbC,EAAU5B,EAASE,KAAK2B,MAE5B,GACUC,EAAaF,EAAO,kBAAsB,GAChDD,EAAShB,KAAK,CACVqK,MAAOhL,EAASE,KAAKlC,GACrB+D,aAAcH,EAAQI,QAAQ3J,KAC9B4J,UAAYH,EAAiBA,EAAWG,UAAf,EACzBC,aAAeJ,EAETA,EAAWK,QAAQ9J,KADnB,KAEN+J,KAAON,EAAoBA,EAAWM,KAAlB,OAExBR,EAAUA,EAAO,WAAe,SACzBA,GAAWA,EAAQS,eAAe,eAIpCrB,EAAI,EAxBA,YAwBGA,EAAIW,EAASV,QAxBhB,kCAyBcvB,KAClBC,IADkB,4CAEsBgC,EAASX,GAAGe,eAEpDnC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAI,SAAUF,MA7BjC,SAyBHG,EAzBG,QA8BAE,KAAKsC,QAAQC,MAAMC,YAAYC,cACjChB,EAASX,GAAT,UACGhB,EAASE,KAAKsC,QAAQC,MAAMC,YAAYC,cAC3ChB,EAASX,GAAT,UACGhB,EAASE,KAAKsC,QAAQC,MAClB,oBACFE,cApCH,QAwBwB3B,IAxBxB,uBAsCb2J,EAAYhJ,GAtCC,kDA8CbgJ,EANkB,CACd,CACI5I,aAAc,WACdkK,UAAW,WA3CN,0DAAH,qDAiDlBD,MACD,CAACtK,IAEJvF,qBAAU,WACN,IAAM+P,EAAU,yCAAG,mCAAAvR,EAAA,+DAELwR,EAAgB,GACbnL,EAAI,EAHF,YAGKA,EAAI4J,EAAW3J,QAHpB,iCAIgBvB,KAAMC,IAAIiL,EAAW5J,IAJrC,OAIDhB,EAJC,OAKDoM,EAAY,CACdL,KAAM/L,EAASE,KAAK7H,KACpBgU,KAAMrM,EAASE,KAAK+D,oBAAoB,GAAGG,aAE/C+H,EAAcxL,KAAKyL,GATZ,OAG4BpL,IAH5B,uBAWX+J,EAAQoB,GAXG,kDAcXrM,QAAQC,IAAI,QAAZ,MAdW,0DAAH,qDAiBhBmM,MACD,CAACtB,IAEJ,IAAI0B,EAAajU,EAAKkU,OAAO,GAAGC,cAAgBnU,EAAKoU,MAAM,GAE3D9G,SAASrH,MAAT,UAAoBgO,EAApB,oBAaA,MAAkCxQ,oBAAS,GAA3C,oBAAOX,EAAP,KAAkBY,GAAlB,KAEMC,GAAY,WACVC,OAAOC,SAAW,IAClBH,IAAa,GAEbA,IAAa,IAQrB,OAJAI,qBAAU,WACNF,OAAOG,iBAAiB,SAAUJ,MACnC,IAGC,uCACI,eAAC,GAAD,CAAKb,UAAWA,EAAhB,SACI,eAAC,GAAD,UACI,eAAC,GAAD,CAASkB,GAAG,IAAZ,SACI,eAAC,GAAD,CAAStB,IAAKC,WAI1B,eAACyM,GAAD,UACI,gBAACC,GAAD,WACI,gBAACC,GAAD,WACI,gBAACG,GAAD,WACI,gBAACC,GAAD,eAAS3J,OAAO8B,EAAKlC,IAAIK,SAAS,EAAG,QACrC,eAAC4J,GAAD,UAAO/H,EAAK7H,UAEhB,gBAAC8P,GAAD,WACI,gBAAC,GAAD,WACI,eAACC,GAAD,wBACA,gBAACC,GAAD,WAASnI,EAAKhC,OAAd,WAEJ,gBAAC,GAAD,WACI,eAACkK,GAAD,wBACA,gBAACC,GAAD,WAASnI,EAAK/B,OAAS,GAAvB,cAGR,gBAACmK,GAAD,WACI,eAACP,GAAD,qBACA,eAACG,GAAD,UAAarE,EAAOA,eAG5B,gBAAC+D,GAAD,WACI,gBAAC0B,GAAD,WACuB,OAAlBiB,EAAOa,OACJ,eAAC5C,GAAD,CAASzN,IAAKwP,EAAOc,WAErB,eAAC7C,GAAD,CAASzN,IAAKwP,EAAOa,SAGzB,eAAC3C,GAAD,UAAU4B,EAAM0B,UAEpB,gBAACxC,GAAD,WACI,eAACH,GAAD,yBACA,eAACM,GAAD,UACKgB,EAASxS,KAAI,SAACwU,EAAWjU,GAAZ,OACV,eAAC,KAAD,CACIS,MAAO,CAAEyT,eAAgB,QAEzBtQ,GACI,YAAcqQ,EAAU3K,aAJhC,SAOI,gBAACyH,GAAD,WACI,eAACC,GAAD,CACI1O,IAAK2R,EAAUT,YAEnB,eAACtC,GAAD,UACK+C,EAAU3K,mBAVdtJ,cAkBzB,gBAACoP,GAAD,WACI,gBAACU,GAAD,WACI,eAAC,GAAD,oBACA,eAAC,GAAD,UAAc2B,EAAU4B,gBAE5B,gBAAC,GAAD,WACI,eAACnD,GAAD,UACKhQ,EAAMT,KAAI,SAAC0U,EAAMnU,GAAP,OACP,gBAAC,GAAD,CACI,cACA,WAAUmU,EAEVrO,UAAS,yBAAoBqO,GAJjC,UAMI,eAAC,GAAD,CAAM7R,IAAG,aAAQ6R,EAAR,UACT,eAAC,KAAD,CACIC,MAAM,MACN9V,KAAK,QACL+V,OAAO,QACP9O,GAAI4O,EAJR,SAMI,oBACI1T,MAAO,CACHD,SAAU,GACV8T,WAAY,KAHpB,SAMKH,QAhBJA,QAsBjB,eAACxD,GAAD,wBACA,eAACF,GAAD,UACKjG,EAAW/K,KAAI,SAAC8U,EAAWvU,GAAZ,OACZ,gBAAC0Q,GAAD,WACI,gBAAC,GAAD,WAAO6D,EAAUC,WAAjB,QACA,eAACjE,GAAD,UACI,eAACF,GAAD,UACI,eAACC,GAAD,CACIxK,UACIyO,EAAUC,WAEd7V,MACI4V,EAAUE,UAAY,QAKtC,eAAC7D,GAAD,UACK2D,EAAUE,cAfHzU,WAqB5B,gBAAC8P,GAAD,WACI,eAAC,GAAD,wBACA,eAACM,GAAD,UACKiC,EAAK5S,KAAI,SAACkL,EAAS3K,GAAV,OACN,gBAACmQ,GAAD,CACI,cACA,WAAUxF,EAAQ2I,KAFtB,UAKI,eAACnC,GAAD,UAAUxG,EAAQ2I,OAClB,eAAC,KAAD,CACIc,MAAM,MACN9V,KAAK,QACL+V,OAAO,QACP9O,GAAIoF,EAAQ2I,KAJhB,SAMI,oBAAG7S,MAAO,CAAED,SAAU,IAAtB,SACKmK,EAAQiJ,WAVZ5T,uBCpavC0U,G,6JACF,WACI,OACI,eAAC,KAAD,CAAeC,SAAS,cAAxB,SACI,gBAAC,KAAD,WACI,eAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,eAAC,GAAD,MAC/B,eAAC,KAAD,CAAOD,KAAK,iBAAiBC,QAAS,eAACC,GAAD,e,GANxC7T,IAAMC,WAaTuT,MCffM,IAASC,OACL,eAAC,IAAMC,WAAP,UACI,eAAC,GAAD,MAEJhI,SAASiI,eAAe,U","file":"static/js/main.f41e2453.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SelectContainer = styled.div`\r\n    width: 100%;\r\n    height: 20vh;\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n\r\n    @media (min-width: 1280px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n        height: 100%;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        height: 100%;\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        height: 40vh;\r\n    }\r\n`;\r\n\r\nexport const SelectContent = styled.div`\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: grid;\r\n    gap: 10px;\r\n    justify-items: center;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media (min-width: 425px) and (max-width: 839px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        grid-template-columns: auto;\r\n        gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const SelectInput = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    max-width: 280px;\r\n    width: 100%;\r\n    align-items: center;\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n    padding: 4px;\r\n    box-shadow: rgba(240, 240, 240, 0.5) 0px 2px 6px;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 380px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 380px;\r\n        width: 260px;\r\n    }\r\n`;\r\n\r\nexport const LogoInput = styled.img`\r\n    height: 30px;\r\n    -webkit-transition: 0.1s all ease;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        height: 30px;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input.attrs((props) => ({\r\n    type: \"text\",\r\n}))`\r\n    color: #222;\r\n    font-size: 1em;\r\n    border: none;\r\n    width: 230px;\r\n    border-radius: 3px;\r\n    padding: 2px 8px;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        width: 100%;\r\n        margin-left: 6px;\r\n    }\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        width: 100%;\r\n        margin-left: 6px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        height: 40px;\r\n    }\r\n\r\n    /* here we use the dynamically computed prop */\r\n    margin: ${(props) => props.size};\r\n    padding: ${(props) => props.size};\r\n`;\r\n","import React from \"react\";\r\nimport { BiDisc } from \"react-icons/bi\";\r\nimport {\r\n    Input,\r\n    SelectContainer,\r\n    SelectContent,\r\n    SelectInput,\r\n} from \"./FilterElements\";\r\nimport Select from \"react-select\";\r\nimport \"../../app/App.css\";\r\n\r\nconst customStyles = {\r\n    control: (styles) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...styles,\r\n        width: 230,\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        borderRadius: 5,\r\n        border: \"none\",\r\n        boxShadow: \"none\",\r\n        \"@media only screen and (max-width: 1280px)\": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 200,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n        \"@media only screen and (min-width: 768px) and (max-width: 1099px) \": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 340,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n\r\n        \"@media only screen and (min-width: 600px) and (max-width: 839px) \": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 220,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n\r\n        \"@media only screen and (min-width: 320px) and (max-width: 599px) \": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 230,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n    }),\r\n};\r\n\r\nconst stylesLogo = {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    \"@media (miWidth: 1025px) and (maxWidth: 1280px)\": {\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n    },\r\n};\r\n\r\nclass Filters extends React.Component {\r\n    render() {\r\n        const nilaiValue = this.props.regions;\r\n\r\n        const optionsRegions = nilaiValue.map((nilaiValuenya) => ({\r\n            label:\r\n                nilaiValuenya.name +\r\n                \" ( \" +\r\n                (nilaiValuenya.offset + 1) +\r\n                \" - \" +\r\n                (nilaiValuenya.limit + nilaiValuenya.offset) +\r\n                \" )\",\r\n            value: nilaiValuenya.name,\r\n            key: nilaiValuenya.name,\r\n        }));\r\n\r\n        const typesValue = this.props.types;\r\n\r\n        const optionsTypes = typesValue.map((nilaiTypes) => ({\r\n            label: nilaiTypes,\r\n            value: nilaiTypes,\r\n            key: nilaiTypes,\r\n        }));\r\n\r\n        const sortByValue = this.props.sortby;\r\n\r\n        const optionsSortby = sortByValue.map((nilaiSortby) => ({\r\n            label: nilaiSortby,\r\n            value: nilaiSortby,\r\n            key: nilaiSortby,\r\n        }));\r\n\r\n        // console.log(optionsSortby);\r\n        return (\r\n            <>\r\n                <SelectContainer>\r\n                    <SelectContent>\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n\r\n                            <Select\r\n                                // value={this.props.valueregion}\r\n                                placeholder=\"Regions\"\r\n                                styles={customStyles}\r\n                                options={optionsRegions}\r\n                                onChange={this.props.regionsSelect}\r\n                            ></Select>\r\n                        </SelectInput>\r\n\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n                            <Select\r\n                                // value={this.props.valuetype}\r\n                                placeholder=\"Types\"\r\n                                styles={customStyles}\r\n                                options={optionsTypes}\r\n                                onChange={this.props.typesSelect}\r\n                            />\r\n                        </SelectInput>\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n                            <Select\r\n                                // value={this.props.sorttype}\r\n                                placeholder=\"Sort By\"\r\n                                styles={customStyles}\r\n                                options={optionsSortby}\r\n                                onChange={this.props.sortSelect}\r\n                            />\r\n                        </SelectInput>\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n                            <Input\r\n                                value={this.props.valuesearch}\r\n                                onChange={this.props.searchChange}\r\n                                placeholder=\"Search\"\r\n                            ></Input>\r\n                        </SelectInput>\r\n                    </SelectContent>\r\n                </SelectContainer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/favicon.4368af11.ico\";","import styled from \"styled-components\";\r\n\r\nexport const HomeContainer = styled.div`\r\n    width: 100%;\r\n    height: 50vh;\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (min-width: 1280px) {\r\n        max-width: 1200px;\r\n    }\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 830px;\r\n        height: 60vh;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        max-width: 550px;\r\n        height: 55vh;\r\n    }\r\n`;\r\n\r\nexport const HomeContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        padding: 10px 35px;\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    margin: 0;\r\n`;\r\n\r\nexport const Judul = styled.h3`\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const Description = styled.h1`\r\n    color: #ffffff;\r\n    font-weight: 700;\r\n    font-size: 46px;\r\n    line-height: 60px;\r\n    margin-top: 8px;\r\n    margin-bottom: 16px;\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        font-size: 40px;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        font-size: 26px;\r\n        line-height: 40px;\r\n    }\r\n`;\r\n\r\nexport const HomeButton = styled.div`\r\n    /* display: flex; */\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        grid-template-columns: auto;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        grid-template-columns: auto;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        grid-template-columns: auto;\r\n        padding: 10px 35px;\r\n    }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    height: 35px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const JudulName = styled.p`\r\n    font-size: 12px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const JudulDescription = styled.p`\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const JudulButton = styled.a`\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    padding: 16px 48px;\r\n    border-radius: 100px;\r\n    color: #ffffff;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    border: 2px solid #5547ff;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    max-width: 200px;\r\n    text-align: center;\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        padding: 16px 48px;\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nexport const ContentButton = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 80px;\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        gap: 30px;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const DescriptionButton = styled.div`\r\n    display: flex;\r\n    gap: 12px;\r\n    align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport logoImg from \"../../assets/images/favicon.ico\";\r\nimport {\r\n    Description,\r\n    HomeContainer,\r\n    HomeContent,\r\n    Judul,\r\n    Content,\r\n    LogoImg,\r\n    Profile,\r\n    HomeButton,\r\n    JudulName,\r\n    JudulDescription,\r\n    JudulButton,\r\n    ContentButton,\r\n    DescriptionButton,\r\n} from \"./HomeElements\";\r\n\r\nconst HomeSection = () => {\r\n    return (\r\n        <>\r\n            <HomeContainer>\r\n                <HomeContent>\r\n                    <Content>\r\n                        <Judul>Pokédex.design</Judul>\r\n                        <Description>\r\n                            Search for a Pokémon by name or using its National\r\n                            Pokédex number.\r\n                        </Description>\r\n                    </Content>\r\n                </HomeContent>\r\n                <HomeButton>\r\n                    <ContentButton>\r\n                        <JudulButton>Get Started</JudulButton>\r\n                        <DescriptionButton>\r\n                            <LogoImg src={logoImg}></LogoImg>\r\n                            <Profile>\r\n                                <JudulName>Created By</JudulName>\r\n                                <JudulDescription>\r\n                                    Prawito (Boy)\r\n                                </JudulDescription>\r\n                            </Profile>\r\n                        </DescriptionButton>\r\n                    </ContentButton>\r\n                </HomeButton>\r\n            </HomeContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeSection;\r\n","export default __webpack_public_path__ + \"static/media/pokedex.2800773d.png\";","export default __webpack_public_path__ + \"static/media/github-white.9c383d39.svg\";","import styled from \"styled-components\";\r\nimport { Link as LinkR } from \"react-router-dom\";\r\n\r\nexport const Nav = styled.nav`\r\n    background: ${({ scrollNav }) =>\r\n        scrollNav ? \"rgba(10, 17, 26, 0.9)\" : \"transparent\"};\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n    transition: 0.8s all ease;\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        height: 80px;\r\n    }\r\n`;\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 80px;\r\n    padding-right: 35px;\r\n    padding-left: 35px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    z-index: 1;\r\n\r\n    @media (min-width: 1281px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 830px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        max-width: 550px;\r\n    }\r\n`;\r\n\r\nexport const NavLogo = styled(LinkR)`\r\n    color: #ffffff;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const NavMenu = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n    height: 80px;\r\n`;\r\n\r\nexport const NavLinks = styled.div`\r\n    color: #ffffff;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    transition: all 0.4s ease-in-out;\r\n\r\n    &.active {\r\n        background-color: #9e45c5;\r\n        color: #fff;\r\n        &:hover {\r\n            color: #fff;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        color: #9e45c5;\r\n    }\r\n`;\r\n\r\nexport const ObjectSVG = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    line-height: 0;\r\n    transform: rotate(180deg);\r\n\r\n    & svg {\r\n        position: relative;\r\n        display: block;\r\n        width: calc(184% + 1.3px);\r\n        height: 370px;\r\n    }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    height: 35px;\r\n    transition: 0.3s all ease;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\n\r\nexport const GithubIcon = styled.img`\r\n    height: 35px;\r\n    transition: 0.3s all ease;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport logoImg from \"../../assets/images/pokedex.png\";\r\nimport github from \"../../assets/images/github-white.svg\";\r\nimport {\r\n    GithubIcon,\r\n    LogoImg,\r\n    Nav,\r\n    NavbarContainer,\r\n    NavItem,\r\n    NavLinks,\r\n    NavLogo,\r\n    NavMenu,\r\n} from \"./Navbar\";\r\n\r\nconst Navbar = () => {\r\n    const [scrollNav, setScrollNav] = useState(false);\r\n\r\n    const changeNav = () => {\r\n        if (window.scrollY >= 150) {\r\n            setScrollNav(true);\r\n        } else {\r\n            setScrollNav(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeNav);\r\n    }, []);\r\n\r\n    const toggleHome = () => {\r\n        scroll.scrollToTop();\r\n    };\r\n\r\n    const openGithub = () => {\r\n        window.open(\"https://github.com/id-prawito\");\r\n    };\r\n    return (\r\n        <>\r\n            <Nav scrollNav={scrollNav}>\r\n                <NavbarContainer>\r\n                    <NavLogo to=\"/\" onClick={toggleHome}>\r\n                        <LogoImg src={logoImg}></LogoImg>\r\n                    </NavLogo>\r\n                    <NavMenu>\r\n                        <NavItem>\r\n                            <NavLinks onClick={openGithub}>\r\n                                <GithubIcon src={github} />\r\n                            </NavLinks>\r\n                        </NavItem>\r\n                    </NavMenu>\r\n                </NavbarContainer>\r\n            </Nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/pokemon.4c56728d.svg\";","import styled from \"styled-components\";\r\nimport imgUrl from \"../../assets/images/pokemon.svg\";\r\n\r\nexport const AboutText = styled.p`\r\n    font-size: 12px;\r\n    color: #fff;\r\n    font-weight: 500;\r\n    text-align: center;\r\n`;\r\n\r\nexport const About = styled.div`\r\n    display: grid;\r\n    background-color: #5fbd58;\r\n\r\n    height: 22px;\r\n    max-width: 50%;\r\n    margin-bottom: -10px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    z-index: 2;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ImageCard = styled.img`\r\n    height: 100px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    max-width: 100%;\r\n    filter: grayscale(100%);\r\n    /* &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    } */\r\n`;\r\n\r\nexport const Card = styled.div`\r\n    width: 100%;\r\n    min-height: 300px;\r\n    text-align: center;\r\n    border-radius: 24px;\r\n    margin: 0;\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: #222;\r\n    overflow: hidden;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        background-image: url(${imgUrl});\r\n        position: absolute;\r\n        left: -30px;\r\n        top: -10px;\r\n        width: 43%;\r\n        height: 30%;\r\n        opacity: 0.2;\r\n        /* clip-path: circle(100%); */\r\n        transition: 0.5s ease-in-out;\r\n    }\r\n\r\n    &:hover::before {\r\n        /* clip-path: circle(70px at 5% 5%); */\r\n        transform: scale(1.3);\r\n    }\r\n\r\n    &::after {\r\n        content: \"${(props) => props.Namanya}\";\r\n        position: absolute;\r\n        text-transform: capitalize;\r\n        top: 50%;\r\n        font-size: 5em;\r\n        font-weight: 800;\r\n        font-style: italic;\r\n        color: rgba(255, 255, 25, 0.03);\r\n        left: -10%;\r\n        right: -10%;\r\n    }\r\n\r\n    &:hover ${ImageCard} {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    grid-area: header;\r\n    gap: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n`;\r\n\r\nexport const Utama = styled.div`\r\n    grid-area: utama;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    width: 100px;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    grid-area: footer;\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const IconTypes = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 14px;\r\n    width: 14px;\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const IsiCard = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: auto;\r\n    row-gap: 20px;\r\n    grid-template-areas:\r\n        \"header\"\r\n        \"utama\"\r\n        \"footer\";\r\n    padding: 20px;\r\n`;\r\n\r\nexport const MainFooter = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    background-color: rgba(255, 255, 255, 0.64);\r\n    height: 45px;\r\n    max-width: 100%;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n    padding: 6px 0;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nexport const JudulW = styled.p`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    color: #fff;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const Penjelasan = styled.p`\r\n    font-size: 12px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    color: #000;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const Name = styled.h4`\r\n    display: inline-block;\r\n    text-transform: capitalize;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const Number = styled.p`\r\n    display: inline-block;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const Types = styled.div`\r\n    display: flex;\r\n    background-color: ${(props) => props.color};\r\n    padding: 10px;\r\n    max-width: 80px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const TypesText = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const Weight = styled.div`\r\n    margin-top: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport \"../../app/App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    About,\r\n    AboutText,\r\n    Footer,\r\n    Header,\r\n    IconTypes,\r\n    ImageCard,\r\n    IsiCard,\r\n    JudulW,\r\n    MainFooter,\r\n    Name,\r\n    Penjelasan,\r\n    Types,\r\n    Utama,\r\n    TypesText,\r\n    Weight,\r\n    Card,\r\n    Number,\r\n} from \"./Pokemon\";\r\n\r\nexport default function Pokemon(props) {\r\n    const { id, image, name, type, weight, height } = props;\r\n    return (\r\n        <>\r\n            <Link to={\"/pokemon/\" + name}>\r\n                <Card Namanya={name}>\r\n                    <IsiCard>\r\n                        <Header>\r\n                            <Number> #{String(id).padStart(3, \"0\")}</Number>\r\n                            <TypesText>\r\n                                {type.map((type, key) => (\r\n                                    <Types\r\n                                        key={type.type.name}\r\n                                        title={type.type.name}\r\n                                        className={`poke__type__bg ${type.type.name}`}\r\n                                    >\r\n                                        <IconTypes\r\n                                            src={`${type.type.name}.png`}\r\n                                        ></IconTypes>\r\n                                    </Types>\r\n                                ))}\r\n                            </TypesText>\r\n                        </Header>\r\n                        <Utama>\r\n                            <ImageCard src={image}></ImageCard>\r\n                            <Name maxLength=\"12\">{name}</Name>\r\n                        </Utama>\r\n                        <Footer>\r\n                            <About>\r\n                                <AboutText>About</AboutText>\r\n                            </About>\r\n                            <MainFooter>\r\n                                <Weight>\r\n                                    <JudulW>Weight</JudulW>\r\n                                    <Penjelasan>{weight} g</Penjelasan>\r\n                                </Weight>\r\n                                <Weight>\r\n                                    <JudulW>Height</JudulW>\r\n                                    <Penjelasan>{height / 10} m</Penjelasan>\r\n                                </Weight>\r\n                            </MainFooter>\r\n                        </Footer>\r\n                    </IsiCard>\r\n                </Card>\r\n            </Link>\r\n        </>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pikachu.cb81c8c0.png\";","import styled from \"styled-components\";\r\n\r\nexport const CardLoading = styled.div`\r\n    width: 100%;\r\n    min-height: 300px;\r\n    text-align: center;\r\n    border-radius: 24px;\r\n    margin: 0;\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: #222;\r\n    overflow: hidden;\r\n\r\n    @media (min-width: 320px) and (max-width: 1099px) {\r\n        width: 220px;\r\n    }\r\n`;\r\n\r\nexport const IsiCardLoading = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: auto;\r\n    row-gap: 20px;\r\n    grid-template-areas:\r\n        \"header\"\r\n        \"utama\"\r\n        \"footer\";\r\n    padding: 20px;\r\n    animation: pulse 2s infinite;\r\n\r\n    @keyframes pulse {\r\n        0% {\r\n            opacity: 1;\r\n        }\r\n        50% {\r\n            opacity: 0.5;\r\n        }\r\n        100% {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    grid-area: header;\r\n    gap: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n`;\r\n\r\nexport const Utama = styled.div`\r\n    grid-area: utama;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    width: 100px;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    grid-area: footer;\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const Number = styled.div`\r\n    display: inline-block;\r\n    color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 4px;\r\n    font-weight: 600;\r\n    width: 50px;\r\n    height: 20px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nexport const Types = styled.div`\r\n    display: flex;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    padding: 10px;\r\n    max-width: 80px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const TypesText = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const IconTypes = styled.div`\r\n    transition: 0.1s all ease;\r\n    height: 14px;\r\n    width: 14px;\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    filter: grayscale(100%);\r\n    border-radius: 4px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nexport const AboutText = styled.p`\r\n    font-size: 12px;\r\n    color: transparent;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    margin: auto;\r\n    width: 50px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const About = styled.div`\r\n    display: grid;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    height: 22px;\r\n    max-width: 50%;\r\n    margin-bottom: -10px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    z-index: 2;\r\n    align-items: center;\r\n`;\r\n\r\nexport const MainFooter = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    height: 45px;\r\n    max-width: 100%;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n    padding: 6px 0;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nexport const JudulW = styled.p`\r\n    font-size: 10px;\r\n    color: transparent;\r\n    font-weight: 500;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    margin: auto;\r\n    width: 50px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const Penjelasan = styled.p`\r\n    font-size: 12px;\r\n    color: transparent;\r\n    font-weight: 500;\r\n    margin: auto;\r\n    width: 70px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const Weight = styled.div`\r\n    margin-top: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const ImageCard = styled.div`\r\n    height: 100px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    max-width: 100%;\r\n    filter: grayscale(100%);\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const Name = styled.h4`\r\n    display: inline-block;\r\n    text-transform: capitalize;\r\n    color: transparent;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n    CardLoading,\r\n    IsiCardLoading,\r\n    Header,\r\n    Utama,\r\n    Footer,\r\n    Number,\r\n    TypesText,\r\n    Types,\r\n    About,\r\n    AboutText,\r\n    IconTypes,\r\n    ImageCard,\r\n    JudulW,\r\n    MainFooter,\r\n    Name,\r\n    Penjelasan,\r\n    Weight,\r\n    CardContent,\r\n} from \"./LoadingElements\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <>\r\n            <CardContent>\r\n                <CardLoading>\r\n                    <IsiCardLoading>\r\n                        <Header>\r\n                            <Number></Number>\r\n                            <TypesText>\r\n                                <Types>\r\n                                    <IconTypes></IconTypes>\r\n                                </Types>\r\n                            </TypesText>\r\n                        </Header>\r\n                        <Utama>\r\n                            <ImageCard></ImageCard>\r\n                            <Name>Bulbasur</Name>\r\n                        </Utama>\r\n                        <Footer>\r\n                            <About>\r\n                                <AboutText>About</AboutText>\r\n                            </About>\r\n                            <MainFooter>\r\n                                <Weight>\r\n                                    <JudulW>Weight</JudulW>\r\n                                    <Penjelasan>500 g</Penjelasan>\r\n                                </Weight>\r\n                                <Weight>\r\n                                    <JudulW>Height</JudulW>\r\n                                    <Penjelasan>0.78 m</Penjelasan>\r\n                                </Weight>\r\n                            </MainFooter>\r\n                        </Footer>\r\n                    </IsiCardLoading>\r\n                </CardLoading>\r\n            </CardContent>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CategoryContainer = styled.div`\r\n    width: 100%;\r\n    /* height: 80vh; */\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    align-items: center;\r\n    display: flex;\r\n\r\n    @media (min-width: 1281px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 830px;\r\n    }\r\n`;\r\n\r\nexport const CategoryContent = styled.div`\r\n    display: grid;\r\n    width: 100%;\r\n    padding: 35px;\r\n    grid-template-columns: 400px auto;\r\n\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        grid-template-columns: 300px auto;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        grid-template-columns: 280px auto;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        grid-template-columns: auto;\r\n        gap: 30px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        grid-template-columns: auto;\r\n    }\r\n`;\r\n\r\nexport const IconCategory = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        gap: 20px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        flex-direction: row;\r\n        justify-content: center;\r\n        gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 30px;\r\n    width: 30px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    font-size: 40px;\r\n    font-weight: 500;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    margin-top: 10px;\r\n    line-height: 60px;\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        margin-top: 0;\r\n        line-height: 45px;\r\n        font-size: 35px;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        margin-bottom: 20px;\r\n        line-height: 45px;\r\n        font-size: 35px;\r\n    }\r\n`;\r\n\r\nexport const BungkusIcon = styled.div`\r\n    display: flex;\r\n    background-color: #5547ff;\r\n    border-radius: 16px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 16px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const ImgBox = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    z-index: 10000;\r\n    width: 100%;\r\n    height: 220px;\r\n    transition: 0.5s;\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n    display: grid;\r\n    /* grid-template-columns: 1fr 1fr 1fr; */\r\n    gap: 30px;\r\n`;\r\n\r\nexport const CardContainerTambah = styled.div`\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const BungkusanIconnya = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        display: none;\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { FaAngleUp } from \"react-icons/fa\";\r\n\r\nconst IconButtonnya = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    width: 40px;\r\n    height: 40px;\r\n    position: fixed;\r\n    z-index: 2;\r\n    bottom: 2vh;\r\n    right: 2.5%;\r\n    cursor: pointer;\r\n    transition: 1s all ease-out;\r\n    opacity: ${({ scrollIcon }) => (scrollIcon ? \"0\" : \"1\")};\r\n`;\r\n\r\nconst Scroll = () => {\r\n    const [scrollIcon, setScrollIcon] = useState(true);\r\n\r\n    const changeIcon = () => {\r\n        if (window.scrollY >= 550) {\r\n            setScrollIcon(false);\r\n        } else {\r\n            setScrollIcon(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeIcon);\r\n    }, []);\r\n\r\n    const toggleHome = () => {\r\n        scroll.scrollToTop();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButtonnya scrollIcon={scrollIcon} onClick={toggleHome}>\r\n                <FaAngleUp />\r\n            </IconButtonnya>\r\n        </>\r\n    );\r\n};\r\nexport default Scroll;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Filters from \"../components/Filter\";\r\nimport HomeSection from \"../components/HomeSection\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Pokemon from \"../components/Pokemon/index.js\";\r\nimport logoTypes from \"../assets/images/pikachu.png\";\r\nimport Loading from \"../components/Loading\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n    CategoryContainer,\r\n    BungkusIcon,\r\n    CategoryContent,\r\n    Description,\r\n    Icon,\r\n    IconCategory,\r\n    CardContent,\r\n    BungkusanIconnya,\r\n} from \"../components/Category/CategoryElements\";\r\nimport Scroll from \"../components/Navbar/Scroll\";\r\nimport \"../app/App.css\";\r\n\r\nexport class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allPokemons: [],\r\n            searchPokemons: [],\r\n            filterPokemons: [],\r\n            evoChain: [],\r\n            abilities: \"\",\r\n            height: \"\",\r\n            weight: \"\",\r\n            catergory: \"\",\r\n            stats: [],\r\n            imageURL: \"\",\r\n            pokeName: \"\",\r\n            pokeNumber: \"\",\r\n            genderRate: \"\",\r\n            genera: \"\",\r\n            isTypeSelected: false,\r\n            selectedType: \"\",\r\n            showInfo: false,\r\n            isSearch: false,\r\n            searchString: \"\",\r\n            description: \"\",\r\n            showLoading: true,\r\n            isFilter: false,\r\n            noDataFound: false,\r\n            limit: 151,\r\n            offset: 0,\r\n            isChecked: false,\r\n            evolID: \"\",\r\n            evolName: \"\",\r\n            evolTypes: [],\r\n            evolImgURL: \"\",\r\n            regions: [\r\n                {\r\n                    name: \"Kanto\",\r\n                    limit: 151,\r\n                    offset: 0,\r\n                },\r\n                {\r\n                    name: \"Johto\",\r\n                    limit: 100,\r\n                    offset: 151,\r\n                },\r\n                {\r\n                    name: \"Hoenn\",\r\n                    limit: 135,\r\n                    offset: 251,\r\n                },\r\n                {\r\n                    name: \"Sinnoh\",\r\n                    limit: 108,\r\n                    offset: 386,\r\n                },\r\n                {\r\n                    name: \"Unova\",\r\n                    limit: 155,\r\n                    offset: 494,\r\n                },\r\n                {\r\n                    name: \"Kalos\",\r\n                    limit: 72,\r\n                    offset: 649,\r\n                },\r\n                {\r\n                    name: \"Alola\",\r\n                    limit: 88,\r\n                    offset: 721,\r\n                },\r\n                {\r\n                    name: \"Galar\",\r\n                    limit: 89,\r\n                    offset: 809,\r\n                },\r\n            ],\r\n            types: [\r\n                \"all types\",\r\n                \"grass\",\r\n                \"bug\",\r\n                \"dark\",\r\n                \"dragon\",\r\n                \"electric\",\r\n                \"fairy\",\r\n                \"fighting\",\r\n                \"fire\",\r\n                \"flying\",\r\n                \"ghost\",\r\n                \"ground\",\r\n                \"ice\",\r\n                \"normal\",\r\n                \"poison\",\r\n                \"psychic\",\r\n                \"rock\",\r\n                \"steel\",\r\n                \"water\",\r\n            ],\r\n            sortby: [\"ID\", \"Name\"],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllPokemons(this.state.offset, this.state.limit);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // console.log(\"updatedd\");\r\n    }\r\n\r\n    getAllPokemons = async (offset, limit) => {\r\n        const response = await axios\r\n            .get(\r\n                `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n            )\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        this.getPokemonData(response.data.results);\r\n    };\r\n\r\n    getPokemonData = async (result) => {\r\n        // debugger;\r\n        const pokemonArr = [],\r\n            filterArr = [];\r\n        await Promise.all(\r\n            result.map((pokemonItem) => {\r\n                return axios\r\n                    .get(\r\n                        `https://pokeapi.co/api/v2/pokemon/${pokemonItem.name}`\r\n                    )\r\n                    .then((result) => {\r\n                        pokemonArr.push(result.data);\r\n                    });\r\n            })\r\n        );\r\n        pokemonArr.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0));\r\n        if (this.state.isTypeSelected) {\r\n            for (let i = 0; i < pokemonArr.length; i++) {\r\n                for (let j = 0; j < pokemonArr[i].types.length; j++) {\r\n                    if (\r\n                        this.state.selectedType ===\r\n                        pokemonArr[i].types[j].type.name\r\n                    ) {\r\n                        filterArr.push(pokemonArr[i]);\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                isFilter: true,\r\n                filterPokemons: filterArr,\r\n                allPokemons: pokemonArr,\r\n                showLoading: false,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFilter: false,\r\n                allPokemons: pokemonArr,\r\n                showLoading: false,\r\n            });\r\n        }\r\n        // console.log(\"allPokes\");\r\n        // console.log(this.state.allPokemons);\r\n    };\r\n\r\n    fetchEvoDetails = async (url) => {\r\n        // debugger\r\n        const response = await axios\r\n            .get(url)\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        // console.log(response);\r\n        const evoChain = [];\r\n        let evoData = response.data.chain;\r\n        do {\r\n            const evoDetails = evoData[\"evolution_details\"][0];\r\n            evoChain.push({\r\n                species_name: evoData.species.name,\r\n                min_level: !evoDetails ? 1 : evoDetails.min_level,\r\n                trigger_name: !evoDetails ? null : evoDetails.trigger.name,\r\n                item: !evoDetails ? null : evoDetails.item,\r\n            });\r\n            evoData = evoData[\"evolves_to\"][0];\r\n        } while (!!evoData && evoData.hasOwnProperty(\"evolves_to\"));\r\n        // console.log(\"evochain\");\r\n        // console.log(evoChain);\r\n        this.fetchEvoImages(evoChain);\r\n    };\r\n\r\n    fetchEvoImages = async (evoChainArr) => {\r\n        // debugger\r\n        for (let i = 0; i < evoChainArr.length; i++) {\r\n            const response = await axios\r\n                .get(\r\n                    `https://pokeapi.co/api/v2/pokemon/${evoChainArr[i].species_name}`\r\n                )\r\n                .catch((err) => console.log(\"Error:\", err));\r\n            response.data.sprites.other.dream_world.front_default\r\n                ? (evoChainArr[i][\"image_url\"] =\r\n                      response.data.sprites.other.dream_world.front_default)\r\n                : (evoChainArr[i][\"image_url\"] =\r\n                      response.data.sprites.other[\r\n                          \"official-artwork\"\r\n                      ].front_default);\r\n        }\r\n        this.setState({\r\n            evoChain: evoChainArr,\r\n        });\r\n    };\r\n\r\n    fetchPokemonData = async (number, pokemon, category, imageURL) => {\r\n        // debugger\r\n        const response = await axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        // console.log(response);\r\n        const statistics = [],\r\n            abs = [];\r\n        const id = response.data.id;\r\n        for (let i = 0; i < response.data.abilities.length; i++) {\r\n            abs.push(response.data.abilities[i].ability.name);\r\n        }\r\n        for (let j = 0; j < response.data.stats.length; j++) {\r\n            const Obj = {};\r\n            Obj[\"stat__name\"] = response.data.stats[j].stat.name;\r\n            Obj[\"stat__val\"] = response.data.stats[j].base_stat;\r\n            statistics.push(Obj);\r\n        }\r\n        this.setState({\r\n            weight: response.data.weight,\r\n            height: response.data.height,\r\n            category,\r\n            pokeNumber: id,\r\n            imageURL,\r\n            pokeName: pokemon,\r\n            showInfo: true,\r\n            stats: statistics,\r\n            abilities: abs,\r\n        });\r\n        this.setState({\r\n            evoChain: [],\r\n            genderRate: \"\",\r\n            genera: \"\",\r\n        });\r\n        // this.fetchEvoChainURL(pokemon);\r\n        this.fetchPokemonDescription(pokemon);\r\n    };\r\n\r\n    fetchPokemonDescription = async (pokemon_name) => {\r\n        // debugger;\r\n        let genera = \"\";\r\n        const response = await axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon-species/${pokemon_name}`)\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        this.fetchEvoDetails(response.data.evolution_chain.url);\r\n        try {\r\n            // const response = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemon_name}`).catch((err) => console.log(\"Error:\", err));\r\n            for (\r\n                let i = 0;\r\n                i < response.data.flavor_text_entries.length - 1;\r\n                i++\r\n            ) {\r\n                if (\r\n                    response.data.flavor_text_entries[i].language.name === \"en\"\r\n                ) {\r\n                    this.state.description =\r\n                        response.data.flavor_text_entries[i].flavor_text;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < response.data.genera.length; j++) {\r\n                if (response.data.genera[j].language.name === \"en\") {\r\n                    genera = response.data.genera[j].genus;\r\n                    break;\r\n                }\r\n            }\r\n            this.setState({\r\n                description: this.state.description,\r\n                genderRate: response.data.gender_rate,\r\n                genera,\r\n            });\r\n        } catch (e) {\r\n            this.setState({\r\n                description: \"Description not found\",\r\n            });\r\n        }\r\n        // console.log(\"description\");\r\n    };\r\n\r\n    handleChangeRegions = (value) => {\r\n        // debugger;\r\n        for (let i = 0; i < this.state.regions.length; i++) {\r\n            if (this.state.regions[i].name === value.value) {\r\n                this.setState({\r\n                    valueregion: value.value,\r\n                    // valuetype: \"all types\",\r\n                    sorttype: \"ID\",\r\n                    isSearch: false,\r\n                    isFilter: false,\r\n                    showLoading: true,\r\n                });\r\n                this.getAllPokemons(\r\n                    this.state.regions[i].offset,\r\n                    this.state.regions[i].limit\r\n                );\r\n                break;\r\n            }\r\n        }\r\n        // console.log(\"limit\");\r\n        console.log(value.value);\r\n    };\r\n\r\n    handleChangeTypes = (value) => {\r\n        // debugger;\r\n        if (value.value === \"all types\") {\r\n            const allPoks = this.state.allPokemons;\r\n            if (this.state.sorttype === \"Name\") {\r\n                allPoks.sort((a, b) =>\r\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                );\r\n                this.setState({\r\n                    isFilter: false,\r\n                    valuetype: value.value,\r\n                    allPokemons: allPoks,\r\n                    isTypeSelected: false,\r\n                });\r\n            } else {\r\n                allPoks.sort((a, b) =>\r\n                    a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                this.setState({\r\n                    isFilter: false,\r\n                    valuetype: value.value,\r\n                    allPokemons: allPoks,\r\n                    isTypeSelected: false,\r\n                });\r\n            }\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                isTypeSelected: true,\r\n                selectedType: value.value,\r\n            });\r\n        }\r\n        let filterArr = [];\r\n        for (let i = 0; i < this.state.allPokemons.length; i++) {\r\n            for (let j = 0; j < this.state.allPokemons[i].types.length; j++) {\r\n                if (\r\n                    value.value === this.state.allPokemons[i].types[j].type.name\r\n                ) {\r\n                    filterArr.push(this.state.allPokemons[i]);\r\n                }\r\n            }\r\n        }\r\n        this.state.sorttype === \"Name\"\r\n            ? filterArr.sort((a, b) =>\r\n                  a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n              )\r\n            : filterArr.sort((a, b) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n              );\r\n        this.setState({\r\n            isSearch: false,\r\n            valuesearch: \"\",\r\n            isFilter: true,\r\n            filterPokemons: filterArr,\r\n            valuetype: value.value,\r\n        });\r\n        filterArr.length === 0\r\n            ? this.setState({ noDataFound: true })\r\n            : this.setState({ noDataFound: false });\r\n    };\r\n\r\n    handleChangeSort = (value) => {\r\n        let sortArr;\r\n        this.state.isFilter\r\n            ? (sortArr = this.state.filterPokemons)\r\n            : (sortArr = this.state.allPokemons);\r\n        if (value.value === \"ID\") {\r\n            sortArr.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0));\r\n        } else {\r\n            sortArr.sort((a, b) =>\r\n                a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n            );\r\n        }\r\n        this.state.isFilter\r\n            ? this.setState({\r\n                  filterPokemons: sortArr,\r\n                  sorttype: value.value,\r\n              })\r\n            : this.setState({\r\n                  allPokemons: sortArr,\r\n                  sorttype: value.value,\r\n              });\r\n        console.log(value.value);\r\n    };\r\n\r\n    handleChangeSearch = (event) => {\r\n        // debugger\r\n        event.target.value.length > 0\r\n            ? this.setState({\r\n                  isSearch: true,\r\n                  valuetype: \"all types\",\r\n                  valuesearch: event.target.value,\r\n              })\r\n            : this.setState({\r\n                  isSearch: false,\r\n                  isFilter: false,\r\n                  valuesearch: event.target.value,\r\n              });\r\n        let searchArr = [];\r\n        for (let i = 0; i < this.state.allPokemons.length; i++) {\r\n            // eslint-disable-next-line eqeqeq\r\n            if (\r\n                this.state.allPokemons[i].name.includes(\r\n                    event.target.value.toLowerCase()\r\n                ) ||\r\n                this.state.allPokemons[i].id\r\n                    .toString()\r\n                    .includes(event.target.value)\r\n            ) {\r\n                searchArr.push(this.state.allPokemons[i]);\r\n            }\r\n        }\r\n        searchArr.length === 0\r\n            ? this.setState({ noDataFound: true, searchPokemons: [] })\r\n            : this.setState({ noDataFound: false, searchPokemons: searchArr });\r\n        // console.log(event.target.value);\r\n    };\r\n\r\n    handleClick = () => {\r\n        window[`scrollTo`]({\r\n            top: document.body.scrollHeight,\r\n            behavior: `smooth`,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const listnya = {\r\n            visible: {\r\n                opacity: 1,\r\n                transition: {\r\n                    when: \"beforeChildren\",\r\n                    staggerChildren: 0.35,\r\n                    delayChildren: 0.75,\r\n                },\r\n            },\r\n            hidden: {\r\n                opacity: 0,\r\n                transition: {\r\n                    when: \"afterChildren\",\r\n                },\r\n            },\r\n        };\r\n\r\n        const itemsnya = {\r\n            visible: { opacity: 1, x: 0 },\r\n            hidden: { opacity: 0, x: -150 },\r\n        };\r\n\r\n        document.title = `Pokédex-id`;\r\n        return (\r\n            <>\r\n                <Scroll />\r\n                <Navbar />\r\n                <HomeSection />\r\n                <Filters\r\n                    regions={this.state.regions}\r\n                    types={this.state.types}\r\n                    sortby={this.state.sortby}\r\n                    valueregion={this.state.valueregion}\r\n                    valuetype={this.state.valuetype}\r\n                    sorttype={this.state.sorttype}\r\n                    valuesearch={this.state.valuesearch}\r\n                    regionsSelect={this.handleChangeRegions}\r\n                    typesSelect={this.handleChangeTypes}\r\n                    sortSelect={this.handleChangeSort}\r\n                    searchChange={this.handleChangeSearch}\r\n                />\r\n                <CategoryContainer>\r\n                    <CategoryContent>\r\n                        <IconCategory>\r\n                            <BungkusanIconnya>\r\n                                <BungkusIcon>\r\n                                    <Icon src={logoTypes}></Icon>\r\n                                </BungkusIcon>\r\n                            </BungkusanIconnya>\r\n                            <Description>Design Pokédex Card</Description>\r\n                        </IconCategory>\r\n                        {this.state.showLoading && <Loading />}\r\n                        {!this.state.showLoading && (\r\n                            <CardContent>\r\n                                {this.state.isSearch ? (\r\n                                    <motion.ul\r\n                                        className=\"card__content\"\r\n                                        initial=\"hidden\"\r\n                                        animate=\"visible\"\r\n                                        variants={listnya}\r\n                                    >\r\n                                        {Object.keys(\r\n                                            this.state.searchPokemons\r\n                                        ).map((item, key) => (\r\n                                            <motion.li\r\n                                                className=\"card__li\"\r\n                                                key={\r\n                                                    this.state.allPokemons[item]\r\n                                                        .id\r\n                                                }\r\n                                                variants={itemsnya}\r\n                                            >\r\n                                                <Pokemon\r\n                                                    key={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    id={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    image={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].sprites.other\r\n                                                            .dream_world\r\n                                                            .front_default\r\n                                                            ? this.state\r\n                                                                  .searchPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other\r\n                                                                  .dream_world\r\n                                                                  .front_default\r\n                                                            : this.state\r\n                                                                  .searchPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other[\r\n                                                                  \"official-artwork\"\r\n                                                              ].front_default\r\n                                                    }\r\n                                                    name={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].name\r\n                                                    }\r\n                                                    type={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].types\r\n                                                    }\r\n                                                    height={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].height\r\n                                                    }\r\n                                                    weight={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].weight\r\n                                                    }\r\n                                                    onElemClick={() =>\r\n                                                        this.fetchPokemonData(\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].id,\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].name,\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].types,\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].sprites.other\r\n                                                                .dream_world\r\n                                                                .front_default\r\n                                                                ? this.state\r\n                                                                      .searchPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other\r\n                                                                      .dream_world\r\n                                                                      .front_default\r\n                                                                : this.state\r\n                                                                      .searchPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other[\r\n                                                                      \"official-artwork\"\r\n                                                                  ]\r\n                                                                      .front_default\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </motion.li>\r\n                                        ))}\r\n                                    </motion.ul>\r\n                                ) : !this.state.isFilter ? (\r\n                                    <motion.ul\r\n                                        className=\"card__content\"\r\n                                        initial=\"hidden\"\r\n                                        animate=\"visible\"\r\n                                        variants={listnya}\r\n                                    >\r\n                                        {Object.keys(\r\n                                            this.state.allPokemons\r\n                                        ).map((item, key) => (\r\n                                            <motion.li\r\n                                                className=\"card__li\"\r\n                                                key={\r\n                                                    this.state.allPokemons[item]\r\n                                                        .id\r\n                                                }\r\n                                                variants={itemsnya}\r\n                                            >\r\n                                                <Pokemon\r\n                                                    key={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    id={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    image={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].sprites.other\r\n                                                            .dream_world\r\n                                                            .front_default\r\n                                                            ? this.state\r\n                                                                  .allPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other\r\n                                                                  .dream_world\r\n                                                                  .front_default\r\n                                                            : this.state\r\n                                                                  .allPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other[\r\n                                                                  \"official-artwork\"\r\n                                                              ].front_default\r\n                                                    }\r\n                                                    name={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].name\r\n                                                    }\r\n                                                    type={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].types\r\n                                                    }\r\n                                                    height={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].height\r\n                                                    }\r\n                                                    weight={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].weight\r\n                                                    }\r\n                                                    onElemClick={() =>\r\n                                                        this.fetchPokemonData(\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].id,\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].name,\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].types,\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].sprites.other\r\n                                                                .dream_world\r\n                                                                .front_default\r\n                                                                ? this.state\r\n                                                                      .allPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other\r\n                                                                      .dream_world\r\n                                                                      .front_default\r\n                                                                : this.state\r\n                                                                      .allPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other[\r\n                                                                      \"official-artwork\"\r\n                                                                  ]\r\n                                                                      .front_default\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </motion.li>\r\n                                        ))}\r\n                                    </motion.ul>\r\n                                ) : (\r\n                                    <motion.ul\r\n                                        // style={{\r\n                                        //     display: \"grid\",\r\n                                        //     gridTemplateColumns: \"1fr 1fr 1fr\",\r\n                                        //     width: \"100%\",\r\n                                        //     gap: \"30px\",\r\n                                        //     listStyleType: \"none\",\r\n                                        //     paddingInlineStart: \"0px\",\r\n                                        //     alignItems: \"center\",\r\n                                        //     justifyContent: \"center\",\r\n                                        // }}\r\n                                        className=\"card__content\"\r\n                                        initial=\"hidden\"\r\n                                        animate=\"visible\"\r\n                                        variants={listnya}\r\n                                    >\r\n                                        {Object.keys(\r\n                                            this.state.filterPokemons\r\n                                        ).map((item, key) => (\r\n                                            <motion.li\r\n                                                className=\"card__li\"\r\n                                                key={\r\n                                                    this.state.allPokemons[item]\r\n                                                        .id\r\n                                                }\r\n                                                variants={itemsnya}\r\n                                            >\r\n                                                <Pokemon\r\n                                                    key={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    id={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    image={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].sprites.other\r\n                                                            .dream_world\r\n                                                            .front_default\r\n                                                            ? this.state\r\n                                                                  .filterPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other\r\n                                                                  .dream_world\r\n                                                                  .front_default\r\n                                                            : this.state\r\n                                                                  .filterPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other[\r\n                                                                  \"official-artwork\"\r\n                                                              ].front_default\r\n                                                    }\r\n                                                    name={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].name\r\n                                                    }\r\n                                                    type={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].types\r\n                                                    }\r\n                                                    height={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].height\r\n                                                    }\r\n                                                    weight={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].weight\r\n                                                    }\r\n                                                    onElemClick={() =>\r\n                                                        this.fetchPokemonData(\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].id,\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].name,\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].types,\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].sprites.other\r\n                                                                .dream_world\r\n                                                                .front_default\r\n                                                                ? this.state\r\n                                                                      .filterPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other\r\n                                                                      .dream_world\r\n                                                                      .front_default\r\n                                                                : this.state\r\n                                                                      .filterPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other[\r\n                                                                      \"official-artwork\"\r\n                                                                  ]\r\n                                                                      .front_default\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </motion.li>\r\n                                        ))}\r\n                                    </motion.ul>\r\n                                )}\r\n                            </CardContent>\r\n                        )}\r\n                    </CategoryContent>\r\n                </CategoryContainer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Link as LinkR } from \"react-router-dom\";\r\n\r\nexport const PokemonDetailsContainer = styled.div`\r\n    width: 100%;\r\n    height: 90vh;\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* padding: 35px; */\r\n\r\n    @media (min-width: 1280px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1024px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 950px) and (max-width: 1023px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        max-width: 800px;\r\n        height: 170vh;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        max-width: 600px;\r\n        height: 100%;\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const PokemonDetailsContent = styled.div`\r\n    display: grid;\r\n    row-gap: 20px;\r\n    padding: 35px;\r\n    grid-template-columns: 0.5fr 1.5fr 1fr;\r\n    width: 100%;\r\n    height: 80%;\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const HeaderDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    justify-content: space-between;\r\n\r\n    @media (min-width: 560px) and (max-width: 949px) {\r\n        flex-direction: row;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 559px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const BodyDetails = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`;\r\nexport const FooterDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n`;\r\n\r\nexport const NomorJudul = styled.div`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    left: 0;\r\n    right: auto;\r\n`;\r\n\r\nexport const Nomor = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Nama = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nexport const NamaGenera = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nexport const WeightHeight = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n\r\n    @media (min-width: 640px) and (max-width: 949px) {\r\n        flex-direction: row;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Weight = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const Judulnya = styled.h2`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #fff;\r\n    padding: 5px;\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        padding: 0 5px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const Isinya = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: #0079ff;\r\n    padding: 10px;\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        padding: 0 10px;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nexport const Region = styled.div`\r\n    margin-bottom: 0;\r\n    left: 0;\r\n    right: auto;\r\n`;\r\n\r\nexport const DescriptionPokemon = styled.div`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    left: 0;\r\n    right: auto;\r\n    text-align: right;\r\n    width: 100%;\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        text-align: left;\r\n    }\r\n`;\r\n\r\nexport const About = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const ImgBody = styled.img`\r\n    height: 300px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    max-width: 100%;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        height: 400px;\r\n        padding: 50px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        height: 300px;\r\n        padding: 30px;\r\n    }\r\n`;\r\n\r\nexport const Tulisan = styled.span`\r\n    display: block;\r\n    position: absolute;\r\n    bottom: auto;\r\n    top: 200px;\r\n    bottom: auto;\r\n    right: auto;\r\n    left: auto;\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    word-break: keep-all;\r\n    word-wrap: normal;\r\n    transform: translateX(-45%);\r\n    opacity: 0.5;\r\n    color: rgba(0, 0, 0, 0.67);\r\n\r\n    @media (min-width: 1024px) and (max-width: 1280px) {\r\n        font-size: 110px;\r\n    }\r\n\r\n    @media (min-width: 950px) and (max-width: 1023px) {\r\n        font-size: 100px;\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        top: 270px;\r\n        left: 250px;\r\n        font-size: 100px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        width: 100%;\r\n        font-size: 45px;\r\n        display: contents;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 30px;\r\n    width: 30px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const BungkusIcon = styled.div`\r\n    display: flex;\r\n    border-radius: 16px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 16px;\r\n    box-shadow: 2px 1px 10px #000067;\r\n`;\r\n\r\nexport const TypesText = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const FooterContent = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const StatStatus = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nexport const Pembungkus = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 20px;\r\n`;\r\n\r\nexport const AbilitiesBungkus = styled.div`\r\n    display: flex;\r\n    background: linear-gradient(to bottom, #ffffff 0%, #f7f7f7 100%);\r\n    border-radius: 8px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 30px;\r\n    margin-left: 20px;\r\n    /* width: 200px; */\r\n    color: #222;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        margin-right: 20px;\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nexport const PembungkusAbilities = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto);\r\n    /* gap: 20px; */\r\n    justify-content: flex-end;\r\n\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const Progress = styled.div`\r\n    background-color: rgb(233, 233, 233);\r\n    border-radius: 0.5rem;\r\n`;\r\n\r\nexport const Progressnya = styled.div`\r\n    height: 10px;\r\n    border-radius: 1rem;\r\n    width: ${(props) => props.width}%;\r\n    transition: 1s ease-in-out;\r\n`;\r\n\r\nexport const BungkusProgress = styled.div`\r\n    width: 200px;\r\n\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.h2`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    text-align: left;\r\n    width: 130px;\r\n    text-transform: capitalize;\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        width: 200px;\r\n    }\r\n`;\r\n\r\nexport const BungkusHpProgress = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 14px;\r\n`;\r\n\r\nexport const Bungkusan = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    gap: 14px;\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        width: 100%;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        width: 100%;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n`;\r\n\r\nexport const BaseStat = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const TextValue = styled.h2`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    text-align: right;\r\n    text-transform: capitalize;\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        margin-left: auto;\r\n        margin-right: 0;\r\n    }\r\n`;\r\n\r\nexport const Evalution = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const BungkusanDetails = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    align-items: center;\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const BungkusanDetailsBawah = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const BungkusEvalution = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: linear-gradient(to bottom, #ffffff 0%, #7b7b7b 100%);\r\n    border-radius: 16px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100px;\r\n    width: 100px;\r\n    border-radius: 16px;\r\n    /* background: #dad8d8; */\r\n    box-shadow: 2px 1px 10px #000067;\r\n`;\r\n\r\nexport const IconEvo = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 60px;\r\n    width: 60px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nexport const PembungkusDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 50px;\r\n\r\n    /* @media (min-width: 320px) and (max-width: 579px) {\r\n        flex-direction: column;\r\n        gap: 20px;\r\n    } */\r\n\r\n    @media (min-width: 320px) and (max-width: 500px) {\r\n        flex-direction: column;\r\n        gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const NamaDetails = styled.p`\r\n    padding-top: 6px;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const Textnya = styled.p`\r\n    display: inline-block;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: #222;\r\n    padding-right: 14px;\r\n    padding-left: 14px;\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n    background: ${({ scrollNav }) =>\r\n        scrollNav ? \"rgba(10, 17, 26, 0.9)\" : \"transparent\"};\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n    transition: 0.8s all ease;\r\n`;\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-right: 35px;\r\n    padding-left: 35px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    z-index: 1;\r\n\r\n    @media (min-width: 1281px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1024px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 950px) and (max-width: 1023px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        max-width: 800px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        max-width: 600px;\r\n    }\r\n`;\r\n\r\nexport const NavLogo = styled(LinkR)`\r\n    color: #ffffff;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    height: 35px;\r\n    transition: 0.3s all ease;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport \"../../app/App.css\";\r\nimport {\r\n    AbilitiesBungkus,\r\n    About,\r\n    BaseStat,\r\n    BodyDetails,\r\n    Bungkusan,\r\n    BungkusanDetails,\r\n    BungkusanDetailsBawah,\r\n    BungkusEvalution,\r\n    BungkusHpProgress,\r\n    BungkusIcon,\r\n    BungkusProgress,\r\n    Description,\r\n    DescriptionPokemon,\r\n    FooterDetails,\r\n    HeaderDetails,\r\n    Icon,\r\n    IconEvo,\r\n    ImgBody,\r\n    Isinya,\r\n    Judulnya,\r\n    Nama,\r\n    NamaDetails,\r\n    NamaGenera,\r\n    Nomor,\r\n    NomorJudul,\r\n    Pembungkus,\r\n    PembungkusAbilities,\r\n    PembungkusDetails,\r\n    PokemonDetailsContainer,\r\n    PokemonDetailsContent,\r\n    Progress,\r\n    Progressnya,\r\n    Region,\r\n    Text,\r\n    Textnya,\r\n    TextValue,\r\n    Tulisan,\r\n    TypesText,\r\n    Weight,\r\n    WeightHeight,\r\n    LogoImg,\r\n    Nav,\r\n    NavbarContainer,\r\n    NavLogo,\r\n} from \"./PokemonDetailsElements\";\r\n// import imgBody from \"../../assets/images/bulbasur.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logoImg from \"../../assets/images/pokedex.png\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst PokemonDetails = () => {\r\n    let { name } = useParams();\r\n\r\n    const [data, setData] = useState([]);\r\n    // const [abs, setAbs] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [deskripsi, setDescription] = useState({});\r\n    const [genera, setGenera] = useState({});\r\n    const [names, setNames] = useState({});\r\n    const [images, setImages] = useState({});\r\n    const [url, setUrlnya] = useState([]);\r\n    const [evochain, setEvoChain] = useState([]);\r\n\r\n    const [urlability, setUrlAbilitinya] = useState([]);\r\n    const [bisa, setBisa] = useState([]);\r\n\r\n    const [idnya, setIDnya] = useState();\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const response = await axios\r\n                    .get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n                    .catch((err) => console.log(\"Error:\", err));\r\n                setData(response.data);\r\n                setIDnya(response.data.id);\r\n                const statistics = [];\r\n                // const id_name = response.data.id;\r\n                // // console.log(response);\r\n                for (let j = 0; j < response.data.stats.length; j++) {\r\n                    const Obj = {};\r\n                    Obj[\"stat__name\"] = response.data.stats[j].stat.name;\r\n                    Obj[\"stat__val\"] = response.data.stats[j].base_stat;\r\n                    statistics.push(Obj);\r\n                }\r\n                setStatistics(statistics);\r\n\r\n                const urlability = [];\r\n                for (let i = 0; i < response.data.abilities.length; i++) {\r\n                    urlability.push(response.data.abilities[i].ability.url);\r\n                }\r\n                setUrlAbilitinya(urlability);\r\n\r\n                const types = [];\r\n                for (let i = 0; i < response.data.types.length; i++) {\r\n                    types.push(response.data.types[i].type.name);\r\n                }\r\n                setTypes(types);\r\n                const Objectnya = {\r\n                    gambar: response.data.sprites.other.dream_world\r\n                        .front_default,\r\n                    gambar_2:\r\n                        response.data.sprites.other[\"official-artwork\"]\r\n                            .front_default,\r\n                };\r\n                setImages(Objectnya);\r\n            } catch (e) {\r\n                console.log(\"error\");\r\n            }\r\n        };\r\n        getData();\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        const getDescription = async () => {\r\n            try {\r\n                const response = await axios\r\n                    .get(`https://pokeapi.co/api/v2/pokemon-species/${idnya}`)\r\n                    .catch((err) => console.log(\"Error:\", err));\r\n                var str = JSON.stringify(response.data);\r\n                // Remove \\ from the string\r\n                var convertedStr = str.replace(/\\f/g, \"\");\r\n\r\n                // Convert updated string back to object\r\n                var newObj = JSON.parse(convertedStr);\r\n                setDescription(newObj);\r\n                for (\r\n                    let i = 0;\r\n                    i < response.data.flavor_text_entries.length - 1;\r\n                    i++\r\n                ) {\r\n                    if (\r\n                        response.data.flavor_text_entries[i].language.name ===\r\n                        \"en\"\r\n                    ) {\r\n                        const Objectnya = {\r\n                            penjelasan:\r\n                                response.data.flavor_text_entries[i]\r\n                                    .flavor_text,\r\n                        };\r\n                        setDescription(Objectnya);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < response.data.genera.length - 1; i++) {\r\n                    if (response.data.genera[i].language.name === \"en\") {\r\n                        const Objectnya = {\r\n                            genera: response.data.genera[i].genus,\r\n                        };\r\n                        setGenera(Objectnya);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < response.data.names.length - 1; i++) {\r\n                    if (response.data.names[i].language.name === \"ja\") {\r\n                        const Objectnya = {\r\n                            nama: response.data.names[i].name,\r\n                        };\r\n                        setNames(Objectnya);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (\r\n                    let i = 0;\r\n                    i < response.data.evolution_chain.url.length;\r\n                    i++\r\n                ) {\r\n                    const Objectnya = {\r\n                        url: response.data.evolution_chain.url,\r\n                    };\r\n                    setUrlnya(Objectnya);\r\n                    break;\r\n                }\r\n            } catch (e) {\r\n                const Objectnya = {\r\n                    penjelasan: \"Deskripnya Tidak Ada\",\r\n                };\r\n                setDescription(Objectnya);\r\n            }\r\n\r\n            // setUrlnya(response.data.evolution_chain.url);\r\n        };\r\n        getDescription();\r\n    }, [idnya]);\r\n\r\n    useEffect(() => {\r\n        const getEvoImages = async () => {\r\n            try {\r\n                const response = await axios.get(url.url);\r\n                // console.log(response);\r\n                const evoChain = [];\r\n                // console.log(evoChain);\r\n                let evoData = response.data.chain;\r\n                // console.log(evoData);\r\n                do {\r\n                    const evoDetails = evoData[\"evolution_details\"][0];\r\n                    evoChain.push({\r\n                        idnya: response.data.id,\r\n                        species_name: evoData.species.name,\r\n                        min_level: !evoDetails ? 1 : evoDetails.min_level,\r\n                        trigger_name: !evoDetails\r\n                            ? null\r\n                            : evoDetails.trigger.name,\r\n                        item: !evoDetails ? null : evoDetails.item,\r\n                    });\r\n                    evoData = evoData[\"evolves_to\"][0];\r\n                } while (!!evoData && evoData.hasOwnProperty(\"evolves_to\"));\r\n\r\n                // setEvoChain(evoChain);\r\n\r\n                for (let i = 0; i < evoChain.length; i++) {\r\n                    const response = await axios\r\n                        .get(\r\n                            `https://pokeapi.co/api/v2/pokemon/${evoChain[i].species_name}`\r\n                        )\r\n                        .catch((err) => console.log(\"Error:\", err));\r\n                    response.data.sprites.other.dream_world.front_default\r\n                        ? (evoChain[i][\"image_url\"] =\r\n                              response.data.sprites.other.dream_world.front_default)\r\n                        : (evoChain[i][\"image_url\"] =\r\n                              response.data.sprites.other[\r\n                                  \"official-artwork\"\r\n                              ].front_default);\r\n                }\r\n                setEvoChain(evoChain);\r\n            } catch (e) {\r\n                const Objectnya = [\r\n                    {\r\n                        species_name: \"notfound\",\r\n                        image_url: \"error\",\r\n                    },\r\n                ];\r\n                setEvoChain(Objectnya);\r\n            }\r\n        };\r\n        getEvoImages();\r\n    }, [url]);\r\n\r\n    useEffect(() => {\r\n        const getAbility = async () => {\r\n            try {\r\n                const evonyaNamanya = [];\r\n                for (let i = 0; i < urlability.length; i++) {\r\n                    const response = await axios.get(urlability[i]);\r\n                    const ObjectTik = {\r\n                        nama: response.data.name,\r\n                        text: response.data.flavor_text_entries[0].flavor_text,\r\n                    };\r\n                    evonyaNamanya.push(ObjectTik);\r\n                }\r\n                setBisa(evonyaNamanya);\r\n                // evonyaNamanya.push(abilitydetail);\r\n            } catch (error) {\r\n                console.log(\"error\", error);\r\n            }\r\n        };\r\n        getAbility();\r\n    }, [urlability]);\r\n\r\n    let stringName = name.charAt(0).toUpperCase() + name.slice(1);\r\n\r\n    document.title = `${stringName} | Pokédex-id`;\r\n\r\n    // console.log(images);\r\n    // console.log(statistics);\r\n    // console.log(abs);\r\n    // console.log(types);\r\n    // console.log(deskripsi);\r\n    // console.log(genera);\r\n    // console.log(evochain);\r\n    // console.log(data);\r\n    // console.log(abilitydetail);\r\n    // console.log(idnya);\r\n\r\n    const [scrollNav, setScrollNav] = useState(false);\r\n\r\n    const changeNav = () => {\r\n        if (window.scrollY >= 150) {\r\n            setScrollNav(true);\r\n        } else {\r\n            setScrollNav(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeNav);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Nav scrollNav={scrollNav}>\r\n                <NavbarContainer>\r\n                    <NavLogo to=\"/\">\r\n                        <LogoImg src={logoImg}></LogoImg>\r\n                    </NavLogo>\r\n                </NavbarContainer>\r\n            </Nav>\r\n            <PokemonDetailsContainer>\r\n                <PokemonDetailsContent>\r\n                    <HeaderDetails>\r\n                        <NomorJudul>\r\n                            <Nomor>#{String(data.id).padStart(3, \"0\")}</Nomor>\r\n                            <Nama>{data.name}</Nama>\r\n                        </NomorJudul>\r\n                        <WeightHeight>\r\n                            <Weight>\r\n                                <Judulnya>Weight : </Judulnya>\r\n                                <Isinya>{data.weight} g</Isinya>\r\n                            </Weight>\r\n                            <Weight>\r\n                                <Judulnya>Height : </Judulnya>\r\n                                <Isinya>{data.height / 10} m</Isinya>\r\n                            </Weight>\r\n                        </WeightHeight>\r\n                        <Region>\r\n                            <Nomor>Genera</Nomor>\r\n                            <NamaGenera>{genera.genera}</NamaGenera>\r\n                        </Region>\r\n                    </HeaderDetails>\r\n                    <BodyDetails>\r\n                        <BungkusanDetails>\r\n                            {images.gambar === null ? (\r\n                                <ImgBody src={images.gambar_2}></ImgBody>\r\n                            ) : (\r\n                                <ImgBody src={images.gambar}></ImgBody>\r\n                            )}\r\n\r\n                            <Tulisan>{names.nama}</Tulisan>\r\n                        </BungkusanDetails>\r\n                        <BungkusanDetailsBawah>\r\n                            <BaseStat>Evolutions</BaseStat>\r\n                            <PembungkusDetails>\r\n                                {evochain.map((evolution, key) => (\r\n                                    <Link\r\n                                        style={{ textDecoration: \"none\" }}\r\n                                        key={key}\r\n                                        to={\r\n                                            \"/pokemon/\" + evolution.species_name\r\n                                        }\r\n                                    >\r\n                                        <BungkusEvalution>\r\n                                            <IconEvo\r\n                                                src={evolution.image_url}\r\n                                            ></IconEvo>\r\n                                            <NamaDetails>\r\n                                                {evolution.species_name}\r\n                                            </NamaDetails>\r\n                                        </BungkusEvalution>\r\n                                    </Link>\r\n                                ))}\r\n                            </PembungkusDetails>\r\n                        </BungkusanDetailsBawah>\r\n                    </BodyDetails>\r\n                    <FooterDetails>\r\n                        <DescriptionPokemon>\r\n                            <About>About</About>\r\n                            <Description>{deskripsi.penjelasan}</Description>\r\n                        </DescriptionPokemon>\r\n                        <TypesText>\r\n                            <Pembungkus>\r\n                                {types.map((tipe, key) => (\r\n                                    <BungkusIcon\r\n                                        data-tip\r\n                                        data-for={tipe}\r\n                                        key={tipe}\r\n                                        className={`poke__type__bg ${tipe}`}\r\n                                    >\r\n                                        <Icon src={`../${tipe}.png`}></Icon>\r\n                                        <ReactTooltip\r\n                                            place=\"top\"\r\n                                            type=\"light\"\r\n                                            effect=\"solid\"\r\n                                            id={tipe}\r\n                                        >\r\n                                            <p\r\n                                                style={{\r\n                                                    fontSize: 12,\r\n                                                    fontWeight: 600,\r\n                                                }}\r\n                                            >\r\n                                                {tipe}\r\n                                            </p>\r\n                                        </ReactTooltip>\r\n                                    </BungkusIcon>\r\n                                ))}\r\n                            </Pembungkus>\r\n                            <BaseStat>Base Stat</BaseStat>\r\n                            <BungkusHpProgress>\r\n                                {statistics.map((statistik, key) => (\r\n                                    <Bungkusan key={key}>\r\n                                        <Text>{statistik.stat__name} :</Text>\r\n                                        <BungkusProgress>\r\n                                            <Progress>\r\n                                                <Progressnya\r\n                                                    className={\r\n                                                        statistik.stat__name\r\n                                                    }\r\n                                                    width={\r\n                                                        statistik.stat__val / 2\r\n                                                    }\r\n                                                ></Progressnya>\r\n                                            </Progress>\r\n                                        </BungkusProgress>\r\n                                        <TextValue>\r\n                                            {statistik.stat__val}\r\n                                        </TextValue>\r\n                                    </Bungkusan>\r\n                                ))}\r\n                            </BungkusHpProgress>\r\n                        </TypesText>\r\n                        <DescriptionPokemon>\r\n                            <About>Abilities</About>\r\n                            <PembungkusAbilities>\r\n                                {bisa.map((ability, key) => (\r\n                                    <AbilitiesBungkus\r\n                                        data-tip\r\n                                        data-for={ability.nama}\r\n                                        key={key}\r\n                                    >\r\n                                        <Textnya>{ability.nama}</Textnya>\r\n                                        <ReactTooltip\r\n                                            place=\"top\"\r\n                                            type=\"light\"\r\n                                            effect=\"solid\"\r\n                                            id={ability.nama}\r\n                                        >\r\n                                            <p style={{ fontSize: 12 }}>\r\n                                                {ability.text}\r\n                                            </p>\r\n                                        </ReactTooltip>\r\n                                    </AbilitiesBungkus>\r\n                                ))}\r\n                            </PembungkusAbilities>\r\n                        </DescriptionPokemon>\r\n                    </FooterDetails>\r\n                </PokemonDetailsContent>\r\n            </PokemonDetailsContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Home } from \"../pages\";\nimport PokemonDetails from \"../components/PokemonDetail\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter basename=\"/pokedex-id\">\n                <Routes>\n                    <Route exact path=\"/\" element={<Home />} />\n                    <Route path=\"/pokemon/:name\" element={<PokemonDetails />} />\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
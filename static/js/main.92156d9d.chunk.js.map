{"version":3,"sources":["components/Elements/Elements.js","assets/images/logo.png","components/Button/ButtonElements.js","components/Snackbar/SnackbarElements.js","components/Snackbar/index.js","components/Modal/ModalElements.js","context/AppReducer.js","context/GlobalState.js","assets/images/pokemon.svg","components/Pokemon/Pokemon.js","components/Modal/index.js","components/Button/index.js","components/Navbar/NavbarElements.js","assets/images/github-white.svg","assets/images/pokedex.png","components/Navbar/index.js","pages/PokemonDetails.js","components/Filter/FilterElements.js","components/Filter/index.js","assets/images/favicon.ico","components/HomeSection/HomeElements.js","components/HomeSection/index.js","components/Pokemon/index.js","assets/images/pikachu.png","components/Loading/LoadingElements.js","components/Loading/index.js","services/media.js","components/Category/CategoryElements.js","components/Navbar/Scroll.js","pages/PokemonHome.js","pages/PokemonList.js","app/App.js","index.js"],"names":["ListContainer","styled","div","PokemonDetailsContainer","PokemonDetailsContent","HeaderDetails","BodyDetails","FooterDetails","NomorJudul","Nomor","h2","Nama","NamaGenera","WeightHeight","Weight","Judulnya","Isinya","Region","DescriptionPokemon","About","Description","p","ImgBodyDetails","img","Tulisan","span","Icon","BungkusIcon","TypesText","Pembungkus","AbilitiesBungkus","PembungkusAbilities","Progress","Progressnya","props","width","BungkusProgress","Text","BungkusHpProgress","Bungkusan","BaseStat","TextValue","BungkusanDetails","BungkusanDetailsBawah","BungkusEvalution","IconEvo","PembungkusDetails","NamaDetails","Textnya","nav","scrollNav","LinkR","MainButton","MainSnackbar","Snackbar","forwardRef","ref","useState","showSnackbar","setShowSnackbar","useImperativeHandle","show","setTimeout","className","id","style","backgroundColor","type","message","Background","ModalWrapper","Namanya","ModalContent","CloseModalButton","BiX","Button","button","variable","state","action","listPokemon","payload","filter","movie","title","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addPokemonToList","removePokemonFromList","removeAllPokemonFromList","children","AboutText","ImageCard","CardList","imgUrl","Card","Header","Utama","Footer","IconTypes","IsiCard","MainFooter","JudulW","Penjelasan","Name","h4","Number","Types","color","Modal","showModal","setShowModal","data","image","tipe","nama","number","modalRef","useRef","snackbarRef12","useContext","setState","String","padStart","map","key","src","alt","onSubmit","Object","assign","prev","window","location","reload","current","placeholder","name","onChange","e","target","old","onClick","ButonCatch","random","setRandom","snackbarRef11","SnackbarType","num","Math","floor","pokeball","Nav","NavbarContainer","NavMenu","ul","IconButtonnya","scrollIcon","Navbar","setScrollNav","changeNav","scrollY","addEventListener","to","scroll","scrollToTop","logoImg","length","open","github","PokemonDetails","useParams","setData","types","setTypes","statistics","setStatistics","deskripsi","setDescription","genera","setGenera","names","setNames","images","setImages","url","setUrlnya","evochain","setEvoChain","urlability","setUrlAbilitinya","bisa","setBisa","idnya","setIDnya","getData","a","axios","get","catch","response","j","stats","Obj","stat","base_stat","push","i","abilities","ability","Objectnya","gambar","sprites","other","dream_world","front_default","gambar_2","getDescription","str","convertedStr","replace","newObj","flavor_text_entries","language","penjelasan","flavor_text","genus","evolution_chain","getEvoImages","evoChain","evoData","chain","evoDetails","species_name","species","min_level","trigger_name","trigger","item","hasOwnProperty","err","console","log","image_url","getAbility","evonyaNamanya","ObjectTik","text","stringName","charAt","toUpperCase","slice","document","weight","height","evolution","textDecoration","place","effect","fontSize","fontWeight","statistik","stat__name","stat__val","SelectContainer","SelectContent","SelectInput","Input","input","attrs","size","customStyles","control","styles","display","borderRadius","border","boxShadow","outline","stylesLogo","marginRight","marginLeft","Filters","optionsRegions","this","regions","nilaiValuenya","label","offset","limit","optionsTypes","nilaiTypes","optionsSortby","sortby","nilaiSortby","options","regionsSelect","typesSelect","sortSelect","valuesearch","searchChange","React","Component","HomeContainer","HomeContent","Content","Judul","h3","h1","HomeButton","HomeButtonList","LogoImg","Profile","JudulName","JudulDescription","JudulButton","JudulButtonRemove","ContentButton","DescriptionButton","HomeSectionList","description","snackbarRef","snackbarRef2","HomeSection","Pokemon","maxLength","PokemonCardList","titleNew","background","cursor","alignItems","CardLoading","IsiCardLoading","CardContent","Loading","breakpoints","devices","smartphone","ipads","tablet","laptop","desktops","screen_large","CategoryContainer","CategoryContent","IconCategory","BungkusanIconnya","Scroll","setScrollIcon","changeIcon","PokemonHome","getAllPokemons","getPokemonData","results","result","pokemonArr","filterArr","Promise","all","pokemonItem","then","sort","b","isTypeSelected","selectedType","isFilter","filterPokemons","allPokemons","showLoading","fetchEvoDetails","fetchEvoImages","evoChainArr","fetchPokemonData","pokemon","category","imageURL","abs","pokeNumber","pokeName","showInfo","genderRate","fetchPokemonDescription","pokemon_name","gender_rate","handleChangeRegions","valueregion","sorttype","isSearch","handleChangeTypes","valuetype","noDataFound","allPoks","handleChangeSort","sortArr","handleChangeSearch","event","searchArr","includes","toLowerCase","toString","searchPokemons","handleClick","top","body","scrollHeight","behavior","catergory","searchString","isChecked","evolID","evolName","evolTypes","evolImgURL","listnya","visible","opacity","transition","when","staggerChildren","delayChildren","hidden","itemsnya","x","Filter","logoTypes","motion","initial","animate","variants","keys","li","onElemClick","PokemonList","item_nya","scale","App","basename","exact","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92156d9d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { Link as LinkR } from \"react-router-dom\";\r\n\r\nexport const ListContainer = styled.div`\r\n    max-width: 1300px;\r\n    /* height: 50vh; */\r\n    justify-content: flex-start;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .grid_content {\r\n        display: grid;\r\n        grid-template-columns: repeat(5, auto);\r\n        width: 100%;\r\n        gap: 30px;\r\n        padding: 20px;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        @media (min-width: 320px) and (max-width: 599px) {\r\n            grid-template-columns: repeat(1, auto);\r\n        }\r\n\r\n        @media (min-width: 1100px) and (max-width: 1300px) {\r\n            grid-template-columns: repeat(4, auto);\r\n        }\r\n\r\n        @media (min-width: 840px) and (max-width: 1099px) {\r\n            grid-template-columns: repeat(3, auto);\r\n        }\r\n\r\n        @media (min-width: 600px) and (max-width: 839px) {\r\n            grid-template-columns: auto auto;\r\n        }\r\n\r\n        .card {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 80px;\r\n            padding: 20px;\r\n            background-color: #fff;\r\n            border-radius: 8px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PokemonDetailsContainer = styled.div`\r\n    width: 100%;\r\n    height: 90vh;\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* padding: 35px; */\r\n\r\n    @media (min-width: 1280px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1024px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 950px) and (max-width: 1023px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        max-width: 800px;\r\n        height: 170vh;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        max-width: 600px;\r\n        height: 100%;\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const PokemonDetailsContent = styled.div`\r\n    display: grid;\r\n    row-gap: 20px;\r\n    padding: 35px;\r\n    grid-template-columns: 0.5fr 1.5fr 1fr;\r\n    width: 100%;\r\n    height: 80%;\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const HeaderDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    justify-content: space-between;\r\n\r\n    @media (min-width: 560px) and (max-width: 949px) {\r\n        flex-direction: row;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 559px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const BodyDetails = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`;\r\nexport const FooterDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n`;\r\n\r\nexport const NomorJudul = styled.div`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    left: 0;\r\n    right: auto;\r\n`;\r\n\r\nexport const Nomor = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Nama = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nexport const NamaGenera = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nexport const WeightHeight = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n\r\n    @media (min-width: 640px) and (max-width: 949px) {\r\n        flex-direction: row;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Weight = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const Judulnya = styled.h2`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #fff;\r\n    padding: 5px;\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        padding: 0 5px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const Isinya = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: #0079ff;\r\n    padding: 10px;\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        padding: 0 10px;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nexport const Region = styled.div`\r\n    margin-bottom: 0;\r\n    left: 0;\r\n    right: auto;\r\n`;\r\n\r\nexport const DescriptionPokemon = styled.div`\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    left: 0;\r\n    right: auto;\r\n    text-align: right;\r\n    width: 100%;\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        text-align: left;\r\n    }\r\n`;\r\n\r\nexport const About = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const ImgBodyDetails = styled.img`\r\n    height: 400px;\r\n    transition: 0.1s all ease;\r\n    opacity: 1;\r\n    max-width: 100%;\r\n    /* filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    } */\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        height: 400px;\r\n        padding: 50px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        height: 300px;\r\n        padding: 30px;\r\n    }\r\n`;\r\n\r\nexport const ImgBody = styled.img`\r\n    height: 300px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    max-width: 100%;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        height: 400px;\r\n        padding: 50px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        height: 300px;\r\n        padding: 30px;\r\n    }\r\n`;\r\n\r\nexport const Tulisan = styled.span`\r\n    display: block;\r\n    position: absolute;\r\n    bottom: auto;\r\n    top: 200px;\r\n    bottom: auto;\r\n    right: auto;\r\n    left: auto;\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-size: 130px;\r\n    font-weight: 600;\r\n    word-break: keep-all;\r\n    word-wrap: normal;\r\n    transform: translateX(-45%);\r\n    opacity: 0.5;\r\n    color: rgba(0, 0, 0, 0.67);\r\n\r\n    @media (min-width: 1024px) and (max-width: 1280px) {\r\n        font-size: 110px;\r\n    }\r\n\r\n    @media (min-width: 950px) and (max-width: 1023px) {\r\n        font-size: 100px;\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        top: 270px;\r\n        left: 250px;\r\n        font-size: 100px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        width: 100%;\r\n        font-size: 45px;\r\n        display: contents;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 30px;\r\n    width: 30px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const BungkusIcon = styled.div`\r\n    display: flex;\r\n    border-radius: 16px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 16px;\r\n    box-shadow: 2px 1px 10px #000067;\r\n`;\r\n\r\nexport const TypesText = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const FooterContent = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const StatStatus = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nexport const Pembungkus = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 20px;\r\n`;\r\n\r\nexport const AbilitiesBungkus = styled.div`\r\n    display: flex;\r\n    background: linear-gradient(to bottom, #ffffff 0%, #f7f7f7 100%);\r\n    border-radius: 8px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 30px;\r\n    margin-left: 20px;\r\n    /* width: 200px; */\r\n    color: #222;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        margin-right: 20px;\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nexport const PembungkusAbilities = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, auto);\r\n    /* gap: 20px; */\r\n    justify-content: flex-end;\r\n\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const Progress = styled.div`\r\n    background-color: rgb(233, 233, 233);\r\n    border-radius: 0.5rem;\r\n`;\r\n\r\nexport const Progressnya = styled.div`\r\n    height: 10px;\r\n    border-radius: 1rem;\r\n    width: ${(props) => props.width}%;\r\n    transition: 1s ease-in-out;\r\n`;\r\n\r\nexport const BungkusProgress = styled.div`\r\n    width: 200px;\r\n\r\n    @media (min-width: 320px) and (max-width: 949px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.h2`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    text-align: left;\r\n    width: 130px;\r\n    text-transform: capitalize;\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        width: 200px;\r\n    }\r\n`;\r\n\r\nexport const BungkusHpProgress = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 14px;\r\n`;\r\n\r\nexport const Bungkusan = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    gap: 14px;\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        width: 100%;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        width: 100%;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n    }\r\n`;\r\n\r\nexport const BaseStat = styled.h2`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const TextValue = styled.h2`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    text-align: right;\r\n    text-transform: capitalize;\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        margin-left: auto;\r\n        margin-right: 0;\r\n    }\r\n`;\r\n\r\nexport const Evalution = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const BungkusanDetails = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    align-items: center;\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const BungkusanDetailsBawah = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const BungkusEvalution = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: linear-gradient(to bottom, #ffffff 0%, #7b7b7b 100%);\r\n    border-radius: 16px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100px;\r\n    width: 100px;\r\n    border-radius: 16px;\r\n    /* background: #dad8d8; */\r\n    box-shadow: 2px 1px 10px #000067;\r\n`;\r\n\r\nexport const IconEvo = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 60px;\r\n    width: 60px;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nexport const PembungkusDetails = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 50px;\r\n\r\n    /* @media (min-width: 320px) and (max-width: 579px) {\r\n        flex-direction: column;\r\n        gap: 20px;\r\n    } */\r\n\r\n    @media (min-width: 320px) and (max-width: 500px) {\r\n        flex-direction: column;\r\n        gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const NamaDetails = styled.p`\r\n    padding-top: 6px;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const Textnya = styled.p`\r\n    display: inline-block;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: #222;\r\n    padding-right: 14px;\r\n    padding-left: 14px;\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n    background: ${({ scrollNav }) =>\r\n        scrollNav ? \"rgba(10, 17, 26, 0.9)\" : \"transparent\"};\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n    transition: 0.8s all ease;\r\n`;\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-right: 35px;\r\n    padding-left: 35px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    z-index: 1;\r\n\r\n    @media (min-width: 1281px) {\r\n        max-width: 1200px;\r\n    }\r\n\r\n    @media (min-width: 1024px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 950px) and (max-width: 1023px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 580px) and (max-width: 949px) {\r\n        max-width: 800px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 579px) {\r\n        max-width: 600px;\r\n    }\r\n`;\r\n\r\nexport const NavLogo = styled(LinkR)`\r\n    color: #ffffff;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    height: 35px;\r\n    transition: 0.3s all ease;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.c20a3473.png\";","import styled from \"styled-components\";\r\n\r\nexport const MainButton = styled.div`\r\n    .icon_bungkus {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        background-color: #fff;\r\n        border-radius: 16px;\r\n        height: 60px;\r\n        width: 60px;\r\n        box-shadow: 2px 1px 10px #000067;\r\n\r\n        .button__item {\r\n            border: none;\r\n            background: transparent;\r\n        }\r\n    }\r\n\r\n    .text_tooltip {\r\n        font-weight: 600;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .icon_main {\r\n        --size: 38px;\r\n        transition: 0.1s all ease;\r\n        cursor: pointer;\r\n        height: var(--size);\r\n        width: var(--size);\r\n        opacity: 1;\r\n\r\n        &:hover {\r\n            filter: grayscale(0%);\r\n            transform: scale(1.2);\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainSnackbar = styled.div`\r\n    .snackbar {\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 5%;\r\n        transform: translate(-50%, -50%);\r\n        width: 400px;\r\n        height: 45px;\r\n        border-radius: 8px;\r\n        display: flex;\r\n        align-items: center;\r\n        text-align: center;\r\n        color: #fff;\r\n\r\n        @media (min-width: 320px) and (max-width: 599px) {\r\n            top: 15%;\r\n            width: 360px;\r\n            position: fixed;\r\n        }\r\n\r\n        .icon {\r\n            flex: 15%;\r\n            display: flex;\r\n            align-items: center;\r\n            width: 100%;\r\n            justify-content: center;\r\n\r\n            svg {\r\n                font-size: 20px;\r\n            }\r\n        }\r\n\r\n        .message {\r\n            flex: 85%;\r\n            text-align: start;\r\n            font-weight: 500;\r\n        }\r\n    }\r\n\r\n    #show {\r\n        visibility: visible;\r\n        animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;\r\n    }\r\n\r\n    #hide {\r\n        visibility: hidden;\r\n    }\r\n\r\n    @keyframes fadeIn {\r\n        from {\r\n            bottom: 0;\r\n            opacity: 0;\r\n        }\r\n        to {\r\n            bottom: 30px;\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    @keyframes fadeOut {\r\n        from {\r\n            bottom: 30px;\r\n            opacity: 1;\r\n        }\r\n        to {\r\n            bottom: 0;\r\n            opacity: 0;\r\n        }\r\n    }\r\n`;\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport { MainSnackbar } from \"./SnackbarElements\";\r\nimport { FaInfoCircle } from \"react-icons/fa\";\r\nimport { BsFillPatchCheckFill } from \"react-icons/bs\";\r\n\r\nconst Snackbar = forwardRef((props, ref) => {\r\n    const [showSnackbar, setShowSnackbar] = useState(false);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        show() {\r\n            setShowSnackbar(true);\r\n            setTimeout(() => {\r\n                setShowSnackbar(false);\r\n            }, 3000);\r\n        },\r\n    }));\r\n\r\n    return (\r\n        <MainSnackbar>\r\n            <div\r\n                className=\"snackbar\"\r\n                id={showSnackbar ? \"show\" : \"hide\"}\r\n                style={{\r\n                    backgroundColor:\r\n                        props.type === \"success\" ? \"#0caecc\" : \"#FF0033\",\r\n                }}\r\n            >\r\n                <div className=\"icon\">\r\n                    {props.type === \"success\" ? (\r\n                        <BsFillPatchCheckFill />\r\n                    ) : (\r\n                        <FaInfoCircle />\r\n                    )}\r\n                </div>\r\n                <div className=\"message\">{props.message}</div>\r\n            </div>\r\n        </MainSnackbar>\r\n    );\r\n});\r\n\r\nexport default Snackbar;\r\n","import styled from \"styled-components\";\r\nimport { BiX } from \"react-icons/bi\";\r\n\r\nexport const Background = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n    width: 100%;\r\n    min-height: 300px;\r\n    text-align: center;\r\n    border-radius: 24px;\r\n    margin: 0;\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: #222;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const ModalWrapper = styled.div`\r\n    width: 350px;\r\n    height: 500px;\r\n    box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n    background: #222;\r\n    color: #000;\r\n    /* display: flex; */\r\n    position: relative;\r\n    z-index: 10;\r\n    border-radius: 24px;\r\n    padding: 40px;\r\n    overflow: hidden;\r\n\r\n    &::after {\r\n        content: \"${(props) => props.Namanya}\";\r\n        position: absolute;\r\n        text-transform: capitalize;\r\n        top: 50%;\r\n        font-size: 7em;\r\n        font-weight: 800;\r\n        font-style: italic;\r\n        color: rgba(255, 255, 25, 0.03);\r\n        left: -10%;\r\n        right: -10%;\r\n    }\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    color: #141414;\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    .pembungkus {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100%;\r\n        gap: 20px;\r\n\r\n        .content__modal {\r\n            display: grid;\r\n            grid-template-columns: auto;\r\n            grid-template-rows: auto;\r\n            row-gap: 20px;\r\n            grid-template-areas:\r\n                \"header\"\r\n                \"utama\"\r\n                \"footer\";\r\n            padding: 20px;\r\n            width: 100%;\r\n            color: #fff;\r\n\r\n            .header_modal {\r\n                grid-area: header;\r\n                gap: 20px;\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                position: relative;\r\n\r\n                .number {\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .types {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    gap: 4px;\r\n\r\n                    .typenya {\r\n                        --size: 40px;\r\n                        display: flex;\r\n                        padding: 10px;\r\n                        width: var(--size);\r\n                        height: var(--size);\r\n                        border-radius: 8px;\r\n                        text-align: center;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        gap: 5px;\r\n                        background-color: red;\r\n                        color: #fff;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .body_modal {\r\n                grid-area: utama;\r\n                gap: 20px;\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                position: relative;\r\n\r\n                .text {\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .gambar_pokemon {\r\n                    height: 150px;\r\n                    transition: 0.1s all ease;\r\n                    /* cursor: pointer; */\r\n                    opacity: 1;\r\n                    max-width: 100%;\r\n                    /* filter: grayscale(100%); */\r\n                }\r\n            }\r\n\r\n            .footer_modal {\r\n                grid-area: footer;\r\n                margin-top: 10px;\r\n\r\n                .atas {\r\n                    display: grid;\r\n                    background-color: #5fbd58;\r\n                    height: 30px;\r\n                    max-width: 70%;\r\n                    margin-bottom: -10px;\r\n                    border-radius: 8px;\r\n                    text-align: center;\r\n                    margin-left: auto;\r\n                    margin-right: auto;\r\n                    position: relative;\r\n                    z-index: 2;\r\n                    font-size: 14px;\r\n                    color: #fff;\r\n                    align-items: center;\r\n                }\r\n\r\n                .bawah {\r\n                    display: flex;\r\n                    background-color: #fff;\r\n                    height: 50px;\r\n                    max-width: 100%;\r\n                    border-radius: 8px;\r\n                    text-align: center;\r\n                    gap: 5px;\r\n                    padding: 6px 6px;\r\n                    position: relative;\r\n                    z-index: 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .heading {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n\r\n        .judul {\r\n            font-size: 16px;\r\n            font-weight: 500;\r\n        }\r\n\r\n        p {\r\n            font-size: 12px;\r\n            font-weight: 400;\r\n            color: #000;\r\n        }\r\n    }\r\n\r\n    .content_form {\r\n        display: flex;\r\n        gap: 20px;\r\n        flex-direction: column;\r\n        width: 100%;\r\n\r\n        .form {\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 10px;\r\n\r\n            .text_form {\r\n                font-size: 14px;\r\n                font-weight: 500;\r\n            }\r\n        }\r\n\r\n        .input_form {\r\n            border: 1px solid #fff;\r\n            border-radius: 4px;\r\n            padding: 10px;\r\n            height: 40px;\r\n            font-size: 14px;\r\n\r\n            &:focus {\r\n                outline: none;\r\n                border: 1px solid #0f8af9;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CloseModalButton = styled(BiX)`\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n    width: 24px;\r\n    height: 24px;\r\n    padding: 0;\r\n    z-index: 10;\r\n    color: rgb(255, 255, 255);\r\n    background: red;\r\n    border-radius: 8px;\r\n    padding: 3px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    min-width: 60px;\r\n    padding: 12px 20px;\r\n    border-radius: 4px;\r\n    border: none;\r\n    background: #0f8af9;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    box-shadow: rgb(2 12 27 / 70%) 0px 10px 30px -15px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 20px;\r\n\r\n    &:hover {\r\n        background: #2276c2;\r\n    }\r\n`;\r\n","const variable = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_POKEMON_TO_LIST\":\r\n            return {\r\n                ...state,\r\n                listPokemon: [action.payload, ...state.listPokemon],\r\n            };\r\n        case \"REMOVE_POKEMON_FROM_LIST\":\r\n            return {\r\n                ...state,\r\n                listPokemon: state.listPokemon.filter(\r\n                    (movie) => movie.title !== action.payload\r\n                ),\r\n            };\r\n\r\n        case \"REMOVE_ALL_POKEMON_FROM_LIST\":\r\n            return {\r\n                ...state,\r\n                listPokemon: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default variable;\r\n","import React, { useReducer, createContext, useEffect } from \"react\";\r\n\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n    listPokemon: localStorage.getItem(\"listPokemon\")\r\n        ? JSON.parse(localStorage.getItem(\"listPokemon\"))\r\n        : [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = (props) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"listPokemon\", JSON.stringify(state.listPokemon));\r\n    }, [state]);\r\n\r\n    const addPokemonToList = (movie) => {\r\n        dispatch({ type: \"ADD_POKEMON_TO_LIST\", payload: movie });\r\n    };\r\n\r\n    const removePokemonFromList = (title) => {\r\n        dispatch({ type: \"REMOVE_POKEMON_FROM_LIST\", payload: title });\r\n    };\r\n\r\n    const removeAllPokemonFromList = () => {\r\n        dispatch({ type: \"REMOVE_ALL_POKEMON_FROM_LIST\", payload: {} });\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                listPokemon: state.listPokemon,\r\n                addPokemonToList,\r\n                removePokemonFromList,\r\n                removeAllPokemonFromList,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/pokemon.4c56728d.svg\";","import styled from \"styled-components\";\r\nimport imgUrl from \"../../assets/images/pokemon.svg\";\r\n\r\nexport const AboutText = styled.p`\r\n    font-size: 12px;\r\n    color: #fff;\r\n    font-weight: 500;\r\n    text-align: center;\r\n`;\r\n\r\nexport const About = styled.div`\r\n    display: grid;\r\n    background-color: #5fbd58;\r\n\r\n    height: 22px;\r\n    max-width: 50%;\r\n    margin-bottom: -10px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    z-index: 2;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ImageCard = styled.img`\r\n    height: 100px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    max-width: 100%;\r\n    filter: grayscale(100%);\r\n    /* &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    } */\r\n`;\r\n\r\nexport const CardList = styled.div`\r\n    width: 100%;\r\n    min-height: 300px;\r\n    text-align: center;\r\n    border-radius: 24px;\r\n    margin: 0;\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: #222;\r\n    overflow: hidden;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        background-image: url(${imgUrl});\r\n        position: absolute;\r\n        left: -30px;\r\n        top: -10px;\r\n        width: 43%;\r\n        height: 28%;\r\n        opacity: 0.2;\r\n        /* clip-path: circle(100%); */\r\n        transition: 0.5s ease-in-out;\r\n    }\r\n\r\n    &:hover::before {\r\n        /* clip-path: circle(70px at 5% 5%); */\r\n        transform: scale(1.3);\r\n    }\r\n\r\n    &::after {\r\n        content: \"${(props) => props.Namanya}\";\r\n        position: absolute;\r\n        text-transform: capitalize;\r\n        top: 50%;\r\n        font-size: 5em;\r\n        font-weight: 800;\r\n        font-style: italic;\r\n        color: rgba(255, 255, 25, 0.03);\r\n        left: -10%;\r\n        right: -10%;\r\n    }\r\n\r\n    &:hover ${ImageCard} {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\nexport const Card = styled.div`\r\n    width: 100%;\r\n    min-height: 300px;\r\n    text-align: center;\r\n    border-radius: 24px;\r\n    margin: 0;\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: #222;\r\n    overflow: hidden;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        background-image: url(${imgUrl});\r\n        position: absolute;\r\n        left: -30px;\r\n        top: -10px;\r\n        width: 43%;\r\n        height: 30%;\r\n        opacity: 0.2;\r\n        /* clip-path: circle(100%); */\r\n        transition: 0.5s ease-in-out;\r\n    }\r\n\r\n    &:hover::before {\r\n        /* clip-path: circle(70px at 5% 5%); */\r\n        transform: scale(1.3);\r\n    }\r\n\r\n    &::after {\r\n        content: \"${(props) => props.Namanya}\";\r\n        position: absolute;\r\n        text-transform: capitalize;\r\n        top: 50%;\r\n        font-size: 5em;\r\n        font-weight: 800;\r\n        font-style: italic;\r\n        color: rgba(255, 255, 25, 0.03);\r\n        left: -10%;\r\n        right: -10%;\r\n    }\r\n\r\n    &:hover ${ImageCard} {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    grid-area: header;\r\n    gap: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n`;\r\n\r\nexport const Utama = styled.div`\r\n    grid-area: utama;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    width: 100px;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    grid-area: footer;\r\n    margin-top: 10px;\r\n    z-index: 0;\r\n`;\r\n\r\nexport const IconTypes = styled.img`\r\n    transition: 0.1s all ease;\r\n    height: 14px;\r\n    width: 14px;\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const IsiCard = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: auto;\r\n    row-gap: 20px;\r\n    grid-template-areas:\r\n        \"header\"\r\n        \"utama\"\r\n        \"footer\";\r\n    padding: 20px;\r\n`;\r\n\r\nexport const MainFooter = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    background-color: rgba(255, 255, 255, 0.64);\r\n    height: 45px;\r\n    max-width: 100%;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n    padding: 6px 0;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nexport const JudulW = styled.p`\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    color: #fff;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const Penjelasan = styled.p`\r\n    font-size: 12px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    color: #000;\r\n    font-weight: 500;\r\n`;\r\n\r\nexport const Name = styled.h4`\r\n    display: inline-block;\r\n    text-transform: capitalize;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const Number = styled.p`\r\n    display: inline-block;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    font-weight: 600;\r\n`;\r\n\r\nexport const Types = styled.div`\r\n    display: flex;\r\n    background-color: ${(props) => props.color};\r\n    padding: 10px;\r\n    max-width: 80px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n\r\n    .palingatas {\r\n        position: relative;\r\n        z-index: 99;\r\n    }\r\n`;\r\n\r\nexport const TypesText = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 5px;\r\n\r\n    .text_hover {\r\n        color: #fff;\r\n        font-size: 14px;\r\n        transition: 0.1s ease-in-out;\r\n\r\n        &:hover {\r\n            transform: scale(1.3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Weight = styled.div`\r\n    margin-top: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n","import React, { useRef, useState, useContext } from \"react\";\r\nimport {\r\n    Background,\r\n    Button,\r\n    CloseModalButton,\r\n    ModalContent,\r\n    ModalWrapper,\r\n} from \"./ModalElements\";\r\nimport { FaAngleRight } from \"react-icons/fa\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport Snackbar from \"../Snackbar\";\r\nimport { IconTypes, Types } from \"../Pokemon/Pokemon\";\r\n\r\nconst Modal = ({\r\n    showModal,\r\n    setShowModal,\r\n    data,\r\n    image,\r\n    tipe,\r\n    nama,\r\n    number,\r\n}) => {\r\n    const modalRef = useRef();\r\n    const snackbarRef12 = useRef(null);\r\n    const { addPokemonToList } = useContext(GlobalContext);\r\n    const [state, setState] = useState({});\r\n    const handleChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setState((old) => ({ ...old, [name]: value }));\r\n    };\r\n    const SnackbarType = {\r\n        success: \"success\",\r\n        fail: \"fail\",\r\n    };\r\n    const handleInput = () => {\r\n        addPokemonToList(Object.assign(data, state));\r\n        setShowModal((prev) => !prev);\r\n        setState(\"\");\r\n        window.location.reload();\r\n        snackbarRef12.current.show();\r\n    };\r\n    const closeModal = () => {\r\n        setShowModal((prev) => !prev);\r\n        setState(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                ref={snackbarRef12}\r\n                message=\"Success add Pokemon to list!\"\r\n                type={SnackbarType.success}\r\n            />\r\n            {showModal ? (\r\n                <Background ref={modalRef}>\r\n                    <ModalWrapper Namanya={nama} showModal={showModal}>\r\n                        <ModalContent>\r\n                            <div\r\n                                className=\"pembungkus\"\r\n                                style={{ width: \"100%\" }}\r\n                            >\r\n                                <div className=\"content__modal\">\r\n                                    <div className=\"header_modal\">\r\n                                        <div className=\"number\">\r\n                                            #{String(number).padStart(3, \"0\")}\r\n                                        </div>\r\n                                        <div className=\"types\">\r\n                                            {tipe.map((type, key) => (\r\n                                                <Types\r\n                                                    key={type}\r\n                                                    title={type}\r\n                                                    className={`poke__type__bg ${type}`}\r\n                                                >\r\n                                                    <IconTypes\r\n                                                        src={`../${type}.png`}\r\n                                                    ></IconTypes>\r\n                                                </Types>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"body_modal\">\r\n                                        <img\r\n                                            src={image}\r\n                                            alt=\"gambar_pokemon\"\r\n                                            className=\"gambar_pokemon\"\r\n                                        />\r\n                                        <div className=\"text\">Bulbasur</div>\r\n                                    </div>\r\n                                    <div className=\"footer_modal\">\r\n                                        <div className=\"atas\">Input</div>\r\n                                        <div className=\"bawah\">\r\n                                            <form onSubmit={handleInput}>\r\n                                                <div className=\"content_form\">\r\n                                                    <div className=\"class_form\">\r\n                                                        <input\r\n                                                            placeholder=\"input your pokemon name !\"\r\n                                                            name=\"title\"\r\n                                                            value={\r\n                                                                state.title ||\r\n                                                                \"\"\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handleChange\r\n                                                            }\r\n                                                            type=\"text\"\r\n                                                            className=\"input_form\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <Button>\r\n                                                        Process To Next Step\r\n                                                        <FaAngleRight />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ModalContent>\r\n                        <CloseModalButton\r\n                            className=\"button_close\"\r\n                            aria-label=\"Close modal\"\r\n                            onClick={closeModal}\r\n                        />\r\n                    </ModalWrapper>\r\n                </Background>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import pokeball from \"../../assets/images/logo.png\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { MainButton } from \"./ButtonElements\";\r\nimport Snackbar from \"../Snackbar\";\r\nimport Modal from \"../Modal\";\r\n\r\nconst ButonCatch = ({ data, image, tipe, nama, number }) => {\r\n    const [random, setRandom] = useState(0);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const snackbarRef11 = useRef(null);\r\n    const SnackbarType = {\r\n        success: \"success\",\r\n        fail: \"fail\",\r\n    };\r\n\r\n    const clickHandle = () => {\r\n        const num = Math.floor(Math.random() * (1 + 1));\r\n        setRandom(num);\r\n        snackbarRef11.current.show();\r\n\r\n        if (num === 1) {\r\n            setShowModal((prev) => !prev);\r\n        } else {\r\n            // console.log(\"Ups\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainButton>\r\n            <div className=\"icon_bungkus\" data-tip data-for=\"catch\" key=\"catch\">\r\n                <button className=\"button__item\" onClick={clickHandle}>\r\n                    <img className=\"icon_main\" src={pokeball} alt=\"pokeball\" />\r\n                </button>\r\n                <Modal\r\n                    number={number}\r\n                    nama={nama}\r\n                    tipe={tipe}\r\n                    image={image}\r\n                    data={data}\r\n                    showModal={showModal}\r\n                    setShowModal={setShowModal}\r\n                />\r\n                {random === 1 ? (\r\n                    <Snackbar\r\n                        ref={snackbarRef11}\r\n                        message=\"Yes, your success to gacha this Pokemon!\"\r\n                        type={SnackbarType.success}\r\n                    />\r\n                ) : (\r\n                    <Snackbar\r\n                        ref={snackbarRef11}\r\n                        message=\"Upss, your gacha is failed, try again!\"\r\n                        type={SnackbarType.fail}\r\n                    />\r\n                )}\r\n            </div>\r\n        </MainButton>\r\n    );\r\n};\r\n\r\nexport default ButonCatch;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n    background: ${({ scrollNav }) =>\r\n        scrollNav ? \"rgba(10, 17, 26, 0.9)\" : \"transparent\"};\r\n    height: 100px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1;\r\n    transition: 0.8s all ease;\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        height: 80px;\r\n    }\r\n`;\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 80px;\r\n    padding-right: 35px;\r\n    padding-left: 35px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    z-index: 1;\r\n\r\n    @media (min-width: 1281px) {\r\n        max-width: 1300px;\r\n    }\r\n\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 830px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        max-width: 550px;\r\n    }\r\n\r\n    .nav_logo {\r\n        color: #ffffff;\r\n        justify-self: flex-start;\r\n        cursor: pointer;\r\n        font-size: 1.5rem;\r\n        display: flex;\r\n        align-items: center;\r\n        font-weight: bold;\r\n        text-decoration: none;\r\n\r\n        img {\r\n            height: 35px;\r\n            transition: 0.3s all ease;\r\n\r\n            &:hover {\r\n                transform: scale(1.1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const NavMenu = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n\r\n    li {\r\n        height: 80px;\r\n        display: flex;\r\n        gap: 20px;\r\n\r\n        .navlinks {\r\n            color: #ffffff;\r\n            display: flex;\r\n            align-items: center;\r\n            text-decoration: none;\r\n            font-weight: 600;\r\n            height: 100%;\r\n            cursor: pointer;\r\n            transition: all 0.4s ease-in-out;\r\n\r\n            &.active {\r\n                background-color: #9e45c5;\r\n                color: #fff;\r\n                &:hover {\r\n                    color: #fff;\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                color: #9e45c5;\r\n            }\r\n\r\n            img {\r\n                height: 35px;\r\n                transition: 0.3s all ease;\r\n\r\n                &:hover {\r\n                    transform: scale(1.1);\r\n                }\r\n            }\r\n        }\r\n\r\n        .navlinks_link {\r\n            color: #ffffff;\r\n            display: flex;\r\n            align-items: center;\r\n            text-decoration: none;\r\n            font-weight: 600;\r\n            height: 100%;\r\n            cursor: pointer;\r\n            transition: all 0.4s ease-in-out;\r\n\r\n            &.active {\r\n                background-color: #9e45c5;\r\n                color: #fff;\r\n                &:hover {\r\n                    color: #fff;\r\n                }\r\n            }\r\n\r\n            &:hover {\r\n                color: #9e45c5;\r\n            }\r\n\r\n            .text_jumlah {\r\n                background-color: #ef144a;\r\n                border-radius: 5px;\r\n                color: #fff;\r\n                font-size: 10px;\r\n                font-weight: 500;\r\n                min-height: 20px;\r\n                min-width: 20px;\r\n                padding: 4px;\r\n                text-align: center;\r\n                -webkit-transform: translate(30%, -40%);\r\n                transform: translate(30%, -40%);\r\n            }\r\n\r\n            .laptop {\r\n                display: initial;\r\n\r\n                @media (min-width: 320px) and (max-width: 599px) {\r\n                    display: none;\r\n                }\r\n            }\r\n\r\n            .mobile {\r\n                display: none;\r\n\r\n                @media (min-width: 320px) and (max-width: 599px) {\r\n                    display: initial;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const IconButtonnya = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    width: 40px;\r\n    height: 40px;\r\n    position: fixed;\r\n    z-index: 2;\r\n    bottom: 2vh;\r\n    right: 2.5%;\r\n    cursor: pointer;\r\n    transition: 1s all ease-out;\r\n    opacity: ${({ scrollIcon }) => (scrollIcon ? \"0\" : \"1\")};\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/github-white.9c383d39.svg\";","export default __webpack_public_path__ + \"static/media/pokedex.2800773d.png\";","import { animateScroll as scroll } from \"react-scroll\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { Nav, NavbarContainer, NavMenu } from \"./NavbarElements\";\r\nimport { Link } from \"react-router-dom\";\r\nimport github from \"../../assets/images/github-white.svg\";\r\nimport logoImg from \"../../assets/images/pokedex.png\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\n\r\nconst Navbar = () => {\r\n    const [scrollNav, setScrollNav] = useState(false);\r\n\r\n    const changeNav = () => {\r\n        if (window.scrollY >= 150) {\r\n            setScrollNav(true);\r\n        } else {\r\n            setScrollNav(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeNav);\r\n    }, []);\r\n\r\n    const toggleHome = () => {\r\n        scroll.scrollToTop();\r\n    };\r\n\r\n    const openGithub = () => {\r\n        window.open(\"https://github.com/id-prawito\");\r\n    };\r\n\r\n    const { listPokemon } = useContext(GlobalContext);\r\n    return (\r\n        <>\r\n            <Nav scrollNav={scrollNav}>\r\n                <NavbarContainer>\r\n                    <Link className=\"nav_logo\" to=\"/\" onClick={toggleHome}>\r\n                        <img alt=\"image_nav\" src={logoImg}></img>\r\n                    </Link>\r\n                    <NavMenu>\r\n                        <li>\r\n                            <Link to=\"/mypokemon\" className=\"navlinks_link\">\r\n                                <p className=\"laptop\">My Pokemon List</p>\r\n                                <p className=\"mobile\">List</p>\r\n                                <span className=\"text_jumlah\">\r\n                                    {listPokemon.length}\r\n                                </span>\r\n                            </Link>\r\n                            <div className=\"navlinks\" onClick={openGithub}>\r\n                                <img src={github} alt=\"images_github\" />\r\n                            </div>\r\n                        </li>\r\n                    </NavMenu>\r\n                </NavbarContainer>\r\n            </Nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport \"../app/app.css\";\r\n\r\nimport {\r\n    AbilitiesBungkus,\r\n    About,\r\n    BaseStat,\r\n    BodyDetails,\r\n    Bungkusan,\r\n    BungkusanDetails,\r\n    BungkusanDetailsBawah,\r\n    BungkusEvalution,\r\n    BungkusHpProgress,\r\n    BungkusIcon,\r\n    BungkusProgress,\r\n    Description,\r\n    DescriptionPokemon,\r\n    FooterDetails,\r\n    HeaderDetails,\r\n    Icon,\r\n    IconEvo,\r\n    ImgBodyDetails,\r\n    Isinya,\r\n    Judulnya,\r\n    Nama,\r\n    NamaDetails,\r\n    NamaGenera,\r\n    Nomor,\r\n    NomorJudul,\r\n    Pembungkus,\r\n    PembungkusAbilities,\r\n    PembungkusDetails,\r\n    PokemonDetailsContainer,\r\n    PokemonDetailsContent,\r\n    Progress,\r\n    Progressnya,\r\n    Region,\r\n    Text,\r\n    Textnya,\r\n    TextValue,\r\n    Tulisan,\r\n    TypesText,\r\n    Weight,\r\n    WeightHeight,\r\n} from \"../components/Elements/Elements\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport ButonCatch from \"../components/Button\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst PokemonDetails = () => {\r\n    let { name } = useParams();\r\n    const [data, setData] = useState([]);\r\n    const [types, setTypes] = useState([]);\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [deskripsi, setDescription] = useState({});\r\n    const [genera, setGenera] = useState({});\r\n    const [names, setNames] = useState({});\r\n    const [images, setImages] = useState({});\r\n    const [url, setUrlnya] = useState([]);\r\n    const [evochain, setEvoChain] = useState([]);\r\n    const [urlability, setUrlAbilitinya] = useState([]);\r\n    const [bisa, setBisa] = useState([]);\r\n    const [idnya, setIDnya] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const response = await axios\r\n                    .get(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n                    .catch();\r\n                setData(response.data);\r\n                setIDnya(response.data.id);\r\n                const statistics = [];\r\n\r\n                for (let j = 0; j < response.data.stats.length; j++) {\r\n                    const Obj = {};\r\n                    Obj[\"stat__name\"] = response.data.stats[j].stat.name;\r\n                    Obj[\"stat__val\"] = response.data.stats[j].base_stat;\r\n                    statistics.push(Obj);\r\n                }\r\n                setStatistics(statistics);\r\n\r\n                const urlability = [];\r\n                for (let i = 0; i < response.data.abilities.length; i++) {\r\n                    urlability.push(response.data.abilities[i].ability.url);\r\n                }\r\n                setUrlAbilitinya(urlability);\r\n\r\n                const types = [];\r\n                for (let i = 0; i < response.data.types.length; i++) {\r\n                    types.push(response.data.types[i].type.name);\r\n                }\r\n                setTypes(types);\r\n                const Objectnya = {\r\n                    gambar: response.data.sprites.other.dream_world\r\n                        .front_default,\r\n                    gambar_2:\r\n                        response.data.sprites.other[\"official-artwork\"]\r\n                            .front_default,\r\n                };\r\n                setImages(Objectnya);\r\n            } catch {\r\n                // console.log(\"error\");\r\n            }\r\n        };\r\n        getData();\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        const getDescription = async () => {\r\n            try {\r\n                const response = await axios\r\n                    .get(`https://pokeapi.co/api/v2/pokemon-species/${idnya}`)\r\n                    .catch();\r\n                var str = JSON.stringify(response.data);\r\n                // Remove \\ from the string\r\n                var convertedStr = str.replace(/\\f/g, \"\");\r\n\r\n                // Convert updated string back to object\r\n                var newObj = JSON.parse(convertedStr);\r\n                setDescription(newObj);\r\n                for (\r\n                    let i = 0;\r\n                    i < response.data.flavor_text_entries.length - 1;\r\n                    i++\r\n                ) {\r\n                    if (\r\n                        response.data.flavor_text_entries[i].language.name ===\r\n                        \"en\"\r\n                    ) {\r\n                        const Objectnya = {\r\n                            penjelasan:\r\n                                response.data.flavor_text_entries[i]\r\n                                    .flavor_text,\r\n                        };\r\n                        setDescription(Objectnya);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < response.data.genera.length - 1; i++) {\r\n                    if (response.data.genera[i].language.name === \"en\") {\r\n                        const Objectnya = {\r\n                            genera: response.data.genera[i].genus,\r\n                        };\r\n                        setGenera(Objectnya);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (let i = 0; i < response.data.names.length - 1; i++) {\r\n                    if (response.data.names[i].language.name === \"ja\") {\r\n                        const Objectnya = {\r\n                            nama: response.data.names[i].name,\r\n                        };\r\n                        setNames(Objectnya);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                for (\r\n                    let i = 0;\r\n                    i < response.data.evolution_chain.url.length;\r\n                    i++\r\n                ) {\r\n                    const Objectnya = {\r\n                        url: response.data.evolution_chain.url,\r\n                    };\r\n                    setUrlnya(Objectnya);\r\n                    break;\r\n                }\r\n            } catch (e) {\r\n                const Objectnya = {\r\n                    penjelasan: \"Deskripnya Tidak Ada\",\r\n                };\r\n                setDescription(Objectnya);\r\n            }\r\n        };\r\n        getDescription();\r\n    }, [idnya]);\r\n\r\n    useEffect(() => {\r\n        const getEvoImages = async () => {\r\n            try {\r\n                const response = await axios.get(url.url);\r\n                const evoChain = [];\r\n                let evoData = response.data.chain;\r\n\r\n                do {\r\n                    const evoDetails = evoData[\"evolution_details\"][0];\r\n                    evoChain.push({\r\n                        idnya: response.data.id,\r\n                        species_name: evoData.species.name,\r\n                        min_level: !evoDetails ? 1 : evoDetails.min_level,\r\n                        trigger_name: !evoDetails\r\n                            ? null\r\n                            : evoDetails.trigger.name,\r\n                        item: !evoDetails ? null : evoDetails.item,\r\n                    });\r\n                    evoData = evoData[\"evolves_to\"][0];\r\n                } while (!!evoData && evoData.hasOwnProperty(\"evolves_to\"));\r\n\r\n                for (let i = 0; i < evoChain.length; i++) {\r\n                    const response = await axios\r\n                        .get(\r\n                            `https://pokeapi.co/api/v2/pokemon/${evoChain[i].species_name}`\r\n                        )\r\n                        .catch((err) => console.log(\"Error:\", err));\r\n                    response.data.sprites.other.dream_world.front_default\r\n                        ? (evoChain[i][\"image_url\"] =\r\n                              response.data.sprites.other.dream_world.front_default)\r\n                        : (evoChain[i][\"image_url\"] =\r\n                              response.data.sprites.other[\r\n                                  \"official-artwork\"\r\n                              ].front_default);\r\n                }\r\n                setEvoChain(evoChain);\r\n            } catch (e) {\r\n                const Objectnya = [\r\n                    {\r\n                        species_name: \"notfound\",\r\n                        image_url: \"error\",\r\n                    },\r\n                ];\r\n                setEvoChain(Objectnya);\r\n            }\r\n        };\r\n        getEvoImages();\r\n    }, [url]);\r\n\r\n    useEffect(() => {\r\n        const getAbility = async () => {\r\n            try {\r\n                const evonyaNamanya = [];\r\n                for (let i = 0; i < urlability.length; i++) {\r\n                    const response = await axios.get(urlability[i]);\r\n                    const ObjectTik = {\r\n                        nama: response.data.name,\r\n                        text: response.data.flavor_text_entries[0].flavor_text,\r\n                    };\r\n                    evonyaNamanya.push(ObjectTik);\r\n                }\r\n                setBisa(evonyaNamanya);\r\n            } catch {\r\n                // console.log(\"error\", error);\r\n            }\r\n        };\r\n        getAbility();\r\n    }, [urlability]);\r\n\r\n    let stringName = name.charAt(0).toUpperCase() + name.slice(1);\r\n    document.title = `${stringName} | Pokédex-id`;\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <PokemonDetailsContainer>\r\n                <PokemonDetailsContent>\r\n                    <HeaderDetails>\r\n                        <NomorJudul>\r\n                            <Nomor>#{String(data.id).padStart(3, \"0\")}</Nomor>\r\n                            <Nama>{data.name}</Nama>\r\n                        </NomorJudul>\r\n                        <WeightHeight>\r\n                            <Weight>\r\n                                <Judulnya>Weight : </Judulnya>\r\n                                <Isinya>{data.weight} g</Isinya>\r\n                            </Weight>\r\n                            <Weight>\r\n                                <Judulnya>Height : </Judulnya>\r\n                                <Isinya>{data.height / 10} m</Isinya>\r\n                            </Weight>\r\n                        </WeightHeight>\r\n                        <Region>\r\n                            <Nomor>Genera</Nomor>\r\n                            <NamaGenera>{genera.genera}</NamaGenera>\r\n                        </Region>\r\n                    </HeaderDetails>\r\n                    <BodyDetails>\r\n                        <BungkusanDetails>\r\n                            {images.gambar === null ? (\r\n                                <ImgBodyDetails\r\n                                    src={images.gambar_2}\r\n                                ></ImgBodyDetails>\r\n                            ) : (\r\n                                <ImgBodyDetails\r\n                                    src={images.gambar}\r\n                                ></ImgBodyDetails>\r\n                            )}\r\n\r\n                            <Tulisan>{names.nama}</Tulisan>\r\n                        </BungkusanDetails>\r\n                        <BungkusanDetailsBawah>\r\n                            <BaseStat>Evolutions</BaseStat>\r\n                            <PembungkusDetails>\r\n                                {evochain.map((evolution, key) => (\r\n                                    <Link\r\n                                        style={{ textDecoration: \"none\" }}\r\n                                        key={key}\r\n                                        to={\r\n                                            \"/pokemon/\" + evolution.species_name\r\n                                        }\r\n                                    >\r\n                                        <BungkusEvalution>\r\n                                            <IconEvo\r\n                                                src={evolution.image_url}\r\n                                            ></IconEvo>\r\n                                            <NamaDetails>\r\n                                                {evolution.species_name}\r\n                                            </NamaDetails>\r\n                                        </BungkusEvalution>\r\n                                    </Link>\r\n                                ))}\r\n                            </PembungkusDetails>\r\n                        </BungkusanDetailsBawah>\r\n                    </BodyDetails>\r\n                    <FooterDetails>\r\n                        <DescriptionPokemon>\r\n                            <About>About</About>\r\n                            <Description>{deskripsi.penjelasan}</Description>\r\n                        </DescriptionPokemon>\r\n                        <TypesText>\r\n                            <Pembungkus>\r\n                                {types.map((tipe, key) => (\r\n                                    <BungkusIcon\r\n                                        data-tip\r\n                                        data-for={tipe}\r\n                                        key={tipe}\r\n                                        className={`poke__type__bg ${tipe}`}\r\n                                    >\r\n                                        <Icon src={`../${tipe}.png`}></Icon>\r\n                                        <ReactTooltip\r\n                                            place=\"top\"\r\n                                            type=\"light\"\r\n                                            effect=\"solid\"\r\n                                            id={tipe}\r\n                                        >\r\n                                            <p\r\n                                                style={{\r\n                                                    fontSize: 12,\r\n                                                    fontWeight: 600,\r\n                                                }}\r\n                                            >\r\n                                                {tipe}\r\n                                            </p>\r\n                                        </ReactTooltip>\r\n                                    </BungkusIcon>\r\n                                ))}\r\n                                <ButonCatch\r\n                                    nama={data.name}\r\n                                    tipe={types}\r\n                                    image={images.gambar}\r\n                                    data={data}\r\n                                    number={data.id}\r\n                                />\r\n                            </Pembungkus>\r\n                            <BaseStat>Base Stat</BaseStat>\r\n                            <BungkusHpProgress>\r\n                                {statistics.map((statistik, key) => (\r\n                                    <Bungkusan key={key}>\r\n                                        <Text>{statistik.stat__name} :</Text>\r\n                                        <BungkusProgress>\r\n                                            <Progress>\r\n                                                <Progressnya\r\n                                                    className={\r\n                                                        statistik.stat__name\r\n                                                    }\r\n                                                    width={\r\n                                                        statistik.stat__val / 2\r\n                                                    }\r\n                                                ></Progressnya>\r\n                                            </Progress>\r\n                                        </BungkusProgress>\r\n                                        <TextValue>\r\n                                            {statistik.stat__val}\r\n                                        </TextValue>\r\n                                    </Bungkusan>\r\n                                ))}\r\n                            </BungkusHpProgress>\r\n                        </TypesText>\r\n                        <DescriptionPokemon>\r\n                            <About>Abilities</About>\r\n                            <PembungkusAbilities>\r\n                                {bisa.map((ability, key) => (\r\n                                    <AbilitiesBungkus\r\n                                        data-tip\r\n                                        data-for={ability.nama}\r\n                                        key={key}\r\n                                    >\r\n                                        <Textnya>{ability.nama}</Textnya>\r\n                                        <ReactTooltip\r\n                                            place=\"top\"\r\n                                            type=\"light\"\r\n                                            effect=\"solid\"\r\n                                            id={ability.nama}\r\n                                        >\r\n                                            <p style={{ fontSize: 12 }}>\r\n                                                {ability.text}\r\n                                            </p>\r\n                                        </ReactTooltip>\r\n                                    </AbilitiesBungkus>\r\n                                ))}\r\n                            </PembungkusAbilities>\r\n                        </DescriptionPokemon>\r\n                    </FooterDetails>\r\n                </PokemonDetailsContent>\r\n            </PokemonDetailsContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SelectContainer = styled.div`\r\n    width: 100%;\r\n    /* height: 20vh; */\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n\r\n    @media (min-width: 1280px) {\r\n        max-width: 1300px;\r\n    }\r\n\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n        height: 100%;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        height: 100%;\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        /* height: 40vh; */\r\n    }\r\n`;\r\n\r\nexport const SelectContent = styled.div`\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: grid;\r\n    gap: 10px;\r\n    justify-items: center;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media (min-width: 425px) and (max-width: 839px) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        grid-template-columns: auto;\r\n        gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const SelectInput = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    max-width: 280px;\r\n    width: 100%;\r\n    align-items: center;\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n    padding: 4px;\r\n    box-shadow: rgba(240, 240, 240, 0.5) 0px 2px 6px;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 380px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 380px;\r\n        width: 260px;\r\n    }\r\n`;\r\n\r\nexport const LogoInput = styled.img`\r\n    height: 30px;\r\n    -webkit-transition: 0.1s all ease;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        height: 30px;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input.attrs((props) => ({\r\n    type: \"text\",\r\n}))`\r\n    color: #222;\r\n    font-size: 1em;\r\n    border: none;\r\n    width: 230px;\r\n    border-radius: 3px;\r\n    padding: 2px 8px;\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        width: 100%;\r\n        margin-left: 6px;\r\n    }\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        width: 100%;\r\n        margin-left: 6px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        height: 40px;\r\n    }\r\n\r\n    /* here we use the dynamically computed prop */\r\n    margin: ${(props) => props.size};\r\n    padding: ${(props) => props.size};\r\n`;\r\n","import React from \"react\";\r\nimport { BiDisc } from \"react-icons/bi\";\r\nimport {\r\n    Input,\r\n    SelectContainer,\r\n    SelectContent,\r\n    SelectInput,\r\n} from \"./FilterElements\";\r\nimport Select from \"react-select\";\r\nimport \"../../app/app.css\";\r\n\r\nconst customStyles = {\r\n    control: (styles) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...styles,\r\n        width: 230,\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        borderRadius: 5,\r\n        border: \"none\",\r\n        boxShadow: \"none\",\r\n        \"@media only screen and (max-width: 1280px)\": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 200,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n        \"@media only screen and (min-width: 768px) and (max-width: 1099px) \": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 340,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n\r\n        \"@media only screen and (min-width: 600px) and (max-width: 839px) \": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 220,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n\r\n        \"@media only screen and (min-width: 320px) and (max-width: 599px) \": {\r\n            backgroundColor: \"white\",\r\n            border: \"none\",\r\n            width: 230,\r\n            outline: \"none\",\r\n            boxShadow: \"none\",\r\n        },\r\n    }),\r\n};\r\n\r\nconst stylesLogo = {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    \"@media (miWidth: 1025px) and (maxWidth: 1280px)\": {\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n    },\r\n};\r\n\r\nclass Filters extends React.Component {\r\n    render() {\r\n        const nilaiValue = this.props.regions;\r\n\r\n        const optionsRegions = nilaiValue.map((nilaiValuenya) => ({\r\n            label:\r\n                nilaiValuenya.name +\r\n                \" ( \" +\r\n                (nilaiValuenya.offset + 1) +\r\n                \" - \" +\r\n                (nilaiValuenya.limit + nilaiValuenya.offset) +\r\n                \" )\",\r\n            value: nilaiValuenya.name,\r\n            key: nilaiValuenya.name,\r\n        }));\r\n\r\n        const typesValue = this.props.types;\r\n\r\n        const optionsTypes = typesValue.map((nilaiTypes) => ({\r\n            label: nilaiTypes,\r\n            value: nilaiTypes,\r\n            key: nilaiTypes,\r\n        }));\r\n\r\n        const sortByValue = this.props.sortby;\r\n\r\n        const optionsSortby = sortByValue.map((nilaiSortby) => ({\r\n            label: nilaiSortby,\r\n            value: nilaiSortby,\r\n            key: nilaiSortby,\r\n        }));\r\n\r\n        return (\r\n            <>\r\n                <SelectContainer>\r\n                    <SelectContent>\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n\r\n                            <Select\r\n                                placeholder=\"Regions\"\r\n                                styles={customStyles}\r\n                                options={optionsRegions}\r\n                                onChange={this.props.regionsSelect}\r\n                            ></Select>\r\n                        </SelectInput>\r\n\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n                            <Select\r\n                                placeholder=\"Types\"\r\n                                styles={customStyles}\r\n                                options={optionsTypes}\r\n                                onChange={this.props.typesSelect}\r\n                            />\r\n                        </SelectInput>\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n                            <Select\r\n                                placeholder=\"Sort By\"\r\n                                styles={customStyles}\r\n                                options={optionsSortby}\r\n                                onChange={this.props.sortSelect}\r\n                            />\r\n                        </SelectInput>\r\n                        <SelectInput>\r\n                            <BiDisc\r\n                                color=\"rgb(122, 121, 121)\"\r\n                                fontSize=\"1.4em\"\r\n                                style={stylesLogo}\r\n                            />\r\n                            <Input\r\n                                value={this.props.valuesearch}\r\n                                onChange={this.props.searchChange}\r\n                                placeholder=\"Search\"\r\n                            ></Input>\r\n                        </SelectInput>\r\n                    </SelectContent>\r\n                </SelectContainer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/favicon.4368af11.ico\";","import styled from \"styled-components\";\r\n\r\nexport const HomeContainer = styled.div`\r\n    width: 100%;\r\n    /* height: 45vh; */\r\n    justify-content: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px 0px;\r\n\r\n    @media (min-width: 1280px) {\r\n        max-width: 1300px;\r\n    }\r\n    @media (min-width: 1100px) and (max-width: 1280px) {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        max-width: 950px;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        max-width: 830px;\r\n        padding: 20px 0px;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        max-width: 550px;\r\n        padding: 20px 0px;\r\n    }\r\n`;\r\n\r\nexport const HomeContent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        padding: 10px 35px;\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    margin: 0;\r\n`;\r\n\r\nexport const Judul = styled.h3`\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const Description = styled.h1`\r\n    color: #ffffff;\r\n    font-weight: 700;\r\n    font-size: 46px;\r\n    line-height: 60px;\r\n    margin-top: 8px;\r\n    margin-bottom: 16px;\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        font-size: 40px;\r\n    }\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        font-size: 26px;\r\n        line-height: 40px;\r\n    }\r\n`;\r\n\r\nexport const HomeButton = styled.div`\r\n    /* display: flex; */\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        grid-template-columns: auto;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        grid-template-columns: auto;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        grid-template-columns: auto;\r\n        padding: 10px 35px;\r\n    }\r\n`;\r\n\r\nexport const HomeButtonList = styled.div`\r\n    flex-direction: row;\r\n    width: 100%;\r\n    padding: 35px;\r\n    display: flex;\r\n\r\n    @media (min-width: 840px) and (max-width: 1099px) {\r\n        grid-template-columns: auto;\r\n        flex-direction: column;\r\n    }\r\n\r\n    @media (min-width: 600px) and (max-width: 839px) {\r\n        grid-template-columns: auto;\r\n        flex-direction: column;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        grid-template-columns: auto;\r\n        padding: 10px 35px;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    height: 35px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const JudulName = styled.p`\r\n    font-size: 12px;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const JudulDescription = styled.p`\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    color: rgba(255, 255, 255, 0.64);\r\n`;\r\n\r\nexport const JudulButton = styled.a`\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    padding: 16px 48px;\r\n    border-radius: 20px;\r\n    color: #ffffff;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    border: 2px solid #5547ff;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    max-width: 200px;\r\n    text-align: center;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        padding: 16px 48px;\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nexport const JudulButtonRemove = styled.div`\r\n    font-size: 14px;\r\n    display: inline-block;\r\n    padding: 16px 48px;\r\n    border-radius: 20px;\r\n    color: #ffffff;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    border: 1px solid #fff;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    max-width: 100%;\r\n    text-align: center;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n    .button_remove {\r\n        cursor: pointer;\r\n        color: rgb(255, 255, 255);\r\n        font-weight: 600;\r\n        background: transparent;\r\n    }\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        padding: 16px 48px;\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nexport const ContentButton = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 80px;\r\n\r\n    @media (min-width: 320px) and (max-width: 599px) {\r\n        gap: 30px;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const DescriptionButton = styled.div`\r\n    display: flex;\r\n    gap: 12px;\r\n    align-items: center;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport logoImg from \"../../assets/images/favicon.ico\";\r\nimport Snackbar from \"../Snackbar\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport {\r\n    Description,\r\n    HomeContainer,\r\n    HomeContent,\r\n    Judul,\r\n    Content,\r\n    LogoImg,\r\n    Profile,\r\n    HomeButton,\r\n    JudulName,\r\n    JudulDescription,\r\n    JudulButton,\r\n    ContentButton,\r\n    DescriptionButton,\r\n    HomeButtonList,\r\n    JudulButtonRemove,\r\n} from \"./HomeElements\";\r\n\r\nconst HomeSection = ({ description }) => {\r\n    return (\r\n        <>\r\n            <HomeContainer>\r\n                <HomeContent>\r\n                    <Content>\r\n                        <Judul>Pokédex.design</Judul>\r\n                        <Description>{description}</Description>\r\n                    </Content>\r\n                </HomeContent>\r\n                <HomeButton>\r\n                    <ContentButton>\r\n                        <JudulButton>Get Started</JudulButton>\r\n                        <DescriptionButton>\r\n                            <LogoImg src={logoImg}></LogoImg>\r\n                            <Profile>\r\n                                <JudulName>Created By</JudulName>\r\n                                <JudulDescription>\r\n                                    Prawito (Boy)\r\n                                </JudulDescription>\r\n                            </Profile>\r\n                        </DescriptionButton>\r\n                    </ContentButton>\r\n                </HomeButton>\r\n            </HomeContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const HomeSectionList = ({ description }) => {\r\n    const { removeAllPokemonFromList, listPokemon } = useContext(GlobalContext);\r\n\r\n    const handleClickRemove = () => () => {\r\n        removeAllPokemonFromList();\r\n        snackbarRef.current.show();\r\n    };\r\n\r\n    const handleClickRemoveDontHave = () => () => {\r\n        snackbarRef2.current.show();\r\n    };\r\n\r\n    const snackbarRef = useRef(null);\r\n    const snackbarRef2 = useRef(null);\r\n\r\n    const SnackbarType = {\r\n        success: \"success\",\r\n        fail: \"fail\",\r\n    };\r\n    return (\r\n        <>\r\n            <HomeContainer>\r\n                <HomeContent>\r\n                    <Content>\r\n                        <Judul>Pokédex.design</Judul>\r\n                        <Description>{description}</Description>\r\n                    </Content>\r\n                </HomeContent>\r\n                <HomeButtonList>\r\n                    <ContentButton>\r\n                        <JudulButton>Get Started</JudulButton>\r\n                        <DescriptionButton>\r\n                            <LogoImg src={logoImg}></LogoImg>\r\n                            <Profile>\r\n                                <JudulName>Created By</JudulName>\r\n                                <JudulDescription>\r\n                                    Prawito (Boy)\r\n                                </JudulDescription>\r\n                            </Profile>\r\n                        </DescriptionButton>\r\n                        <JudulButtonRemove>\r\n                            {listPokemon.length === 0 ? (\r\n                                <button\r\n                                    className=\"button_remove\"\r\n                                    onClick={handleClickRemoveDontHave()}\r\n                                >\r\n                                    YOU DONT HAVE POKEMON IN LIST\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    className=\"button_remove\"\r\n                                    onClick={handleClickRemove()}\r\n                                >\r\n                                    REMOVE ALL POKEMON LIST\r\n                                </button>\r\n                            )}\r\n                        </JudulButtonRemove>\r\n                        <Snackbar\r\n                            ref={snackbarRef}\r\n                            message=\"Succes to remove all your Pokemon!\"\r\n                            type={SnackbarType.fail}\r\n                        />\r\n                        <Snackbar\r\n                            ref={snackbarRef2}\r\n                            message=\"You dont have Pokemon in List!\"\r\n                            type={SnackbarType.fail}\r\n                        />\r\n                    </ContentButton>\r\n                </HomeButtonList>\r\n            </HomeContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeSection;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport \"../../app/app.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport {\r\n    About,\r\n    AboutText,\r\n    Footer,\r\n    Header,\r\n    IconTypes,\r\n    ImageCard,\r\n    IsiCard,\r\n    JudulW,\r\n    MainFooter,\r\n    Name,\r\n    Penjelasan,\r\n    Types,\r\n    Utama,\r\n    TypesText,\r\n    Weight,\r\n    Card,\r\n    Number,\r\n    CardList,\r\n} from \"./Pokemon\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Snackbar from \"../Snackbar\";\r\n\r\nexport default function Pokemon(props) {\r\n    const { id, image, name, type, weight, height } = props;\r\n    return (\r\n        <>\r\n            <Link to={`/pokemon/` + name}>\r\n                <Card Namanya={name}>\r\n                    <IsiCard>\r\n                        <Header>\r\n                            <Number> #{String(id).padStart(3, \"0\")}</Number>\r\n                            <TypesText>\r\n                                {type.map((type, key) => (\r\n                                    <Types\r\n                                        key={type.type.name}\r\n                                        title={type.type.name}\r\n                                        className={`poke__type__bg ${type.type.name}`}\r\n                                    >\r\n                                        <IconTypes\r\n                                            src={`${type.type.name}.png`}\r\n                                        ></IconTypes>\r\n                                    </Types>\r\n                                ))}\r\n                            </TypesText>\r\n                        </Header>\r\n                        <Utama>\r\n                            <ImageCard src={image}></ImageCard>\r\n                            <Name maxLength=\"12\">{name}</Name>\r\n                        </Utama>\r\n                        <Footer>\r\n                            <About>\r\n                                <AboutText>About</AboutText>\r\n                            </About>\r\n                            <MainFooter>\r\n                                <Weight>\r\n                                    <JudulW>Weight</JudulW>\r\n                                    <Penjelasan>{weight} g</Penjelasan>\r\n                                </Weight>\r\n                                <Weight>\r\n                                    <JudulW>Height</JudulW>\r\n                                    <Penjelasan>{height / 10} m</Penjelasan>\r\n                                </Weight>\r\n                            </MainFooter>\r\n                        </Footer>\r\n                    </IsiCard>\r\n                </Card>\r\n            </Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function PokemonCardList(props) {\r\n    const { id, image, name, type, weight, height, titleNew } = props;\r\n    const { removePokemonFromList } = useContext(GlobalContext);\r\n    const snackbarRef12 = useRef(null);\r\n\r\n    const SnackbarType = {\r\n        success: \"success\",\r\n        fail: \"fail\",\r\n    };\r\n    const handleClickRemove = (value) => () => {\r\n        removePokemonFromList(value);\r\n        snackbarRef12.current.show();\r\n    };\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                ref={snackbarRef12}\r\n                message=\"Succes to remove your Pokemon!\"\r\n                type={SnackbarType.fail}\r\n            />\r\n            <CardList Namanya={name}>\r\n                <IsiCard>\r\n                    <Header>\r\n                        <Number> #{String(id).padStart(3, \"0\")}</Number>\r\n\r\n                        <TypesText>\r\n                            <Types\r\n                                data-tip\r\n                                data-for=\"remove\"\r\n                                key=\"remove\"\r\n                                style={{ backgroundColor: \"red\" }}\r\n                                className=\"poke__type__bg\"\r\n                            >\r\n                                <button\r\n                                    style={{\r\n                                        background: \"transparent\",\r\n                                        cursor: \"pointer\",\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                    }}\r\n                                    onClick={handleClickRemove(titleNew)}\r\n                                >\r\n                                    <FiX className=\"text_hover\" />\r\n                                </button>\r\n                                <ReactTooltip\r\n                                    place=\"top\"\r\n                                    type=\"light\"\r\n                                    effect=\"solid\"\r\n                                    id=\"remove\"\r\n                                >\r\n                                    <p\r\n                                        style={{\r\n                                            fontSize: 12,\r\n                                            fontWeight: 600,\r\n                                        }}\r\n                                    >\r\n                                        Remove\r\n                                    </p>\r\n                                </ReactTooltip>\r\n                            </Types>\r\n\r\n                            {type.map((type, key) => (\r\n                                <Types\r\n                                    key={type.type.name}\r\n                                    title={type.type.name}\r\n                                    className={`poke__type__bg ${type.type.name}`}\r\n                                >\r\n                                    <IconTypes\r\n                                        src={`${type.type.name}.png`}\r\n                                    ></IconTypes>\r\n                                </Types>\r\n                            ))}\r\n                        </TypesText>\r\n                    </Header>\r\n                    <Link to={`/pokemon/` + name}>\r\n                        <Utama>\r\n                            <ImageCard src={image}></ImageCard>\r\n                            <Name maxLength=\"12\">\r\n                                {name}\r\n                                <p style={{ color: \"#08a0ff\" }}>({titleNew})</p>\r\n                            </Name>\r\n                        </Utama>\r\n                    </Link>\r\n                    <Footer>\r\n                        <About>\r\n                            <AboutText>About</AboutText>\r\n                        </About>\r\n                        <MainFooter>\r\n                            <Weight>\r\n                                <JudulW>Weight</JudulW>\r\n                                <Penjelasan>{weight} g</Penjelasan>\r\n                            </Weight>\r\n                            <Weight>\r\n                                <JudulW>Height</JudulW>\r\n                                <Penjelasan>{height / 10} m</Penjelasan>\r\n                            </Weight>\r\n                        </MainFooter>\r\n                    </Footer>\r\n                </IsiCard>\r\n            </CardList>\r\n        </>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pikachu.cb81c8c0.png\";","import styled from \"styled-components\";\r\n\r\nexport const CardLoading = styled.div`\r\n    width: 220px;\r\n    min-height: 300px;\r\n    text-align: center;\r\n    border-radius: 24px;\r\n    margin: 0;\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: #222;\r\n    overflow: hidden;\r\n\r\n    @media (min-width: 320px) and (max-width: 1099px) {\r\n        width: 220px;\r\n    }\r\n`;\r\n\r\nexport const IsiCardLoading = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: auto;\r\n    row-gap: 20px;\r\n    grid-template-areas:\r\n        \"header\"\r\n        \"utama\"\r\n        \"footer\";\r\n    padding: 20px;\r\n    animation: pulse 2s infinite;\r\n\r\n    @keyframes pulse {\r\n        0% {\r\n            opacity: 1;\r\n        }\r\n        50% {\r\n            opacity: 0.5;\r\n        }\r\n        100% {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    grid-area: header;\r\n    gap: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n`;\r\n\r\nexport const Utama = styled.div`\r\n    grid-area: utama;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    width: 100px;\r\n    margin: auto;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n    grid-area: footer;\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const Number = styled.div`\r\n    display: inline-block;\r\n    color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 4px;\r\n    font-weight: 600;\r\n    width: 50px;\r\n    height: 20px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nexport const Types = styled.div`\r\n    display: flex;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    padding: 10px;\r\n    max-width: 80px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const TypesText = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 5px;\r\n`;\r\n\r\nexport const IconTypes = styled.div`\r\n    transition: 0.1s all ease;\r\n    height: 14px;\r\n    width: 14px;\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n    filter: grayscale(100%);\r\n    border-radius: 4px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nexport const AboutText = styled.p`\r\n    font-size: 12px;\r\n    color: transparent;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    margin: auto;\r\n    width: 50px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const About = styled.div`\r\n    display: grid;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    height: 22px;\r\n    max-width: 50%;\r\n    margin-bottom: -10px;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    z-index: 2;\r\n    align-items: center;\r\n`;\r\n\r\nexport const MainFooter = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    height: 45px;\r\n    max-width: 100%;\r\n    border-radius: 8px;\r\n    text-align: center;\r\n    gap: 5px;\r\n    padding: 6px 0;\r\n    position: relative;\r\n    z-index: 1;\r\n`;\r\n\r\nexport const JudulW = styled.p`\r\n    font-size: 10px;\r\n    color: transparent;\r\n    font-weight: 500;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    margin: auto;\r\n    width: 50px;\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const Penjelasan = styled.p`\r\n    font-size: 12px;\r\n    color: transparent;\r\n    font-weight: 500;\r\n    margin: auto;\r\n    width: 70px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const Weight = styled.div`\r\n    margin-top: 5px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const ImageCard = styled.div`\r\n    height: 100px;\r\n    transition: 0.1s all ease;\r\n    cursor: pointer;\r\n    opacity: 0.5;\r\n    max-width: 100%;\r\n    filter: grayscale(100%);\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const Name = styled.h4`\r\n    display: inline-block;\r\n    text-transform: capitalize;\r\n    color: transparent;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 4px;\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n    CardLoading,\r\n    IsiCardLoading,\r\n    Header,\r\n    Utama,\r\n    Footer,\r\n    Number,\r\n    TypesText,\r\n    Types,\r\n    About,\r\n    AboutText,\r\n    IconTypes,\r\n    ImageCard,\r\n    JudulW,\r\n    MainFooter,\r\n    Name,\r\n    Penjelasan,\r\n    Weight,\r\n    CardContent,\r\n} from \"./LoadingElements\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <CardContent>\r\n            <CardLoading>\r\n                <IsiCardLoading>\r\n                    <Header>\r\n                        <Number></Number>\r\n                        <TypesText>\r\n                            <Types>\r\n                                <IconTypes></IconTypes>\r\n                            </Types>\r\n                        </TypesText>\r\n                    </Header>\r\n                    <Utama>\r\n                        <ImageCard></ImageCard>\r\n                        <Name>Bulbasur</Name>\r\n                    </Utama>\r\n                    <Footer>\r\n                        <About>\r\n                            <AboutText>About</AboutText>\r\n                        </About>\r\n                        <MainFooter>\r\n                            <Weight>\r\n                                <JudulW>Weight</JudulW>\r\n                                <Penjelasan>500 g</Penjelasan>\r\n                            </Weight>\r\n                            <Weight>\r\n                                <JudulW>Height</JudulW>\r\n                                <Penjelasan>0.78 m</Penjelasan>\r\n                            </Weight>\r\n                        </MainFooter>\r\n                    </Footer>\r\n                </IsiCardLoading>\r\n            </CardLoading>\r\n        </CardContent>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","const breakpoints = {\r\n    xs: \"320px\", // min-width : 320px and max-width : 480px\r\n    sm: \"600px\",\r\n\r\n    md: \"840px\",\r\n    ml: \"1100px\",\r\n\r\n    lg: \"1280px\",\r\n\r\n    xl: \"1824px\",\r\n};\r\n\r\nexport const devices = {\r\n    smartphone: `@media only screen and (min-width: ${breakpoints.xs}) and (max-width: ${breakpoints.sm})`,\r\n    ipads: `@media only screen and (min-width: ${breakpoints.sm}) and (max-width: ${breakpoints.md})`,\r\n    tablet: `@media only screen and (min-width: ${breakpoints.md}) and (max-width: ${breakpoints.ml})`,\r\n    laptop: `@media only screen and (min-width: ${breakpoints.ml}) and (max-width: ${breakpoints.lg})`,\r\n\r\n    desktops: `@media only screen and (min-width: ${breakpoints.lg})`,\r\n    screen_large: `@media only screen and (min-width: ${breakpoints.xl})`,\r\n};\r\n","import styled from \"styled-components\";\r\nimport { devices } from \"../../services/media\";\r\n\r\nexport const CategoryContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n\r\n    @media (min-width: 1281px) {\r\n        max-width: 1300px;\r\n    }\r\n\r\n    ${devices.laptop} {\r\n        max-width: 1100px;\r\n    }\r\n\r\n    ${devices.tablet} {\r\n        max-width: 950px;\r\n    }\r\n\r\n    ${devices.ipads} {\r\n        max-width: 830px;\r\n    }\r\n`;\r\n\r\nexport const CategoryContent = styled.div`\r\n    display: grid;\r\n    grid-template-rows: 150px auto;\r\n    padding: 35px;\r\n    width: 100%;\r\n\r\n    ${devices.laptop} {\r\n        grid-template-columns: auto;\r\n        justify-content: center;\r\n    }\r\n\r\n    ${devices.tablet} {\r\n        grid-template-columns: auto;\r\n        justify-content: center;\r\n    }\r\n\r\n    ${devices.ipads} {\r\n        grid-template-columns: auto;\r\n        gap: 30px;\r\n    }\r\n\r\n    ${devices.smartphone} {\r\n        grid-template-columns: auto;\r\n    }\r\n`;\r\n\r\nexport const IconCategory = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: row;\r\n    gap: 20px;\r\n\r\n    ${devices.ipads} {\r\n        justify-content: center;\r\n        flex-direction: row;\r\n        gap: 20px;\r\n    }\r\n\r\n    ${devices.smartphone} {\r\n        justify-content: center;\r\n        flex-direction: row;\r\n        gap: 20px;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    --size: 30px;\r\n    transition: 0.1s all ease;\r\n    height: var(--size);\r\n    width: var(--size);\r\n    opacity: 0.5;\r\n    filter: grayscale(100%);\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n        filter: grayscale(0%);\r\n        transform: scale(1.3);\r\n    }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n    color: rgba(255, 255, 255, 0.64);\r\n    line-height: 60px;\r\n    font-weight: 500;\r\n    font-size: 40px;\r\n\r\n    ${devices.ipads} {\r\n        line-height: 45px;\r\n        font-size: 35px;\r\n        margin-top: 0;\r\n    }\r\n\r\n    ${devices.smartphone} {\r\n        margin-bottom: 20px;\r\n        line-height: 45px;\r\n        font-size: 35px;\r\n    }\r\n`;\r\n\r\nexport const BungkusIcon = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #5547ff;\r\n    border-radius: 16px;\r\n    height: 60px;\r\n    width: 60px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n    display: inline-block;\r\n    color: rgba(255, 255, 255, 0.64);\r\n    font-weight: 600;\r\n    font-size: 12px;\r\n`;\r\n\r\nexport const ImgBox = styled.div`\r\n    position: absolute;\r\n    transform: translateY(-50%);\r\n    transition: 0.5s;\r\n    height: 220px;\r\n    z-index: 100;\r\n    width: 100%;\r\n    top: 50%;\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n    display: grid;\r\n    gap: 30px;\r\n\r\n    .card__content_home {\r\n        display: grid;\r\n        grid-template-columns: repeat(5, auto);\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 30px;\r\n\r\n        ${devices.laptop} {\r\n            grid-template-columns: repeat(4, auto);\r\n        }\r\n\r\n        ${devices.tablet} {\r\n            grid-template-columns: repeat(3, auto);\r\n        }\r\n\r\n        ${devices.ipads} {\r\n            grid-template-columns: repeat(2, auto);\r\n        }\r\n\r\n        ${devices.smartphone} {\r\n            grid-template-columns: repeat(1, auto);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardContainerTambah = styled.div`\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const BungkusanIconnya = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 10px;\r\n\r\n    ${devices.smartphone} {\r\n        display: none;\r\n    }\r\n`;\r\n","import { animateScroll as scroll } from \"react-scroll\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaAngleUp } from \"react-icons/fa\";\r\nimport { IconButtonnya } from \"./NavbarElements\";\r\n\r\nconst Scroll = () => {\r\n    const [scrollIcon, setScrollIcon] = useState(true);\r\n\r\n    const changeIcon = () => {\r\n        if (window.scrollY >= 550) {\r\n            setScrollIcon(false);\r\n        } else {\r\n            setScrollIcon(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", changeIcon);\r\n    }, []);\r\n\r\n    const toggleHome = () => {\r\n        scroll.scrollToTop();\r\n    };\r\n\r\n    return (\r\n        <IconButtonnya scrollIcon={scrollIcon} onClick={toggleHome}>\r\n            <FaAngleUp />\r\n        </IconButtonnya>\r\n    );\r\n};\r\nexport default Scroll;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Filters from \"../components/Filter\";\r\nimport HomeSection from \"../components/HomeSection\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Pokemon from \"../components/Pokemon/index.js\";\r\nimport logoTypes from \"../assets/images/pikachu.png\";\r\nimport Loading from \"../components/Loading\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n    CategoryContainer,\r\n    BungkusIcon,\r\n    CategoryContent,\r\n    Description,\r\n    Icon,\r\n    IconCategory,\r\n    CardContent,\r\n    BungkusanIconnya,\r\n} from \"../components/Category/CategoryElements\";\r\nimport Scroll from \"../components/Navbar/Scroll\";\r\nimport \"../app/app.css\";\r\n\r\nexport class PokemonHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allPokemons: [],\r\n            searchPokemons: [],\r\n            filterPokemons: [],\r\n            evoChain: [],\r\n            abilities: \"\",\r\n            height: \"\",\r\n            weight: \"\",\r\n            catergory: \"\",\r\n            stats: [],\r\n            imageURL: \"\",\r\n            pokeName: \"\",\r\n            pokeNumber: \"\",\r\n            genderRate: \"\",\r\n            genera: \"\",\r\n            isTypeSelected: false,\r\n            selectedType: \"\",\r\n            showInfo: false,\r\n            isSearch: false,\r\n            searchString: \"\",\r\n            description: \"\",\r\n            showLoading: true,\r\n            isFilter: false,\r\n            noDataFound: false,\r\n            limit: 151,\r\n            offset: 0,\r\n            isChecked: false,\r\n            evolID: \"\",\r\n            evolName: \"\",\r\n            evolTypes: [],\r\n            evolImgURL: \"\",\r\n            regions: [\r\n                {\r\n                    name: \"Kanto\",\r\n                    limit: 151,\r\n                    offset: 0,\r\n                },\r\n                {\r\n                    name: \"Johto\",\r\n                    limit: 100,\r\n                    offset: 151,\r\n                },\r\n                {\r\n                    name: \"Hoenn\",\r\n                    limit: 135,\r\n                    offset: 251,\r\n                },\r\n                {\r\n                    name: \"Sinnoh\",\r\n                    limit: 108,\r\n                    offset: 386,\r\n                },\r\n                {\r\n                    name: \"Unova\",\r\n                    limit: 155,\r\n                    offset: 494,\r\n                },\r\n                {\r\n                    name: \"Kalos\",\r\n                    limit: 72,\r\n                    offset: 649,\r\n                },\r\n                {\r\n                    name: \"Alola\",\r\n                    limit: 88,\r\n                    offset: 721,\r\n                },\r\n                {\r\n                    name: \"Galar\",\r\n                    limit: 89,\r\n                    offset: 809,\r\n                },\r\n            ],\r\n            types: [\r\n                \"all types\",\r\n                \"grass\",\r\n                \"bug\",\r\n                \"dark\",\r\n                \"dragon\",\r\n                \"electric\",\r\n                \"fairy\",\r\n                \"fighting\",\r\n                \"fire\",\r\n                \"flying\",\r\n                \"ghost\",\r\n                \"ground\",\r\n                \"ice\",\r\n                \"normal\",\r\n                \"poison\",\r\n                \"psychic\",\r\n                \"rock\",\r\n                \"steel\",\r\n                \"water\",\r\n            ],\r\n            sortby: [\"ID\", \"Name\"],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllPokemons(this.state.offset, this.state.limit);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // console.log(\"updatedd\");\r\n    }\r\n\r\n    getAllPokemons = async (offset, limit) => {\r\n        const response = await axios\r\n            .get(\r\n                `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n            )\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        this.getPokemonData(response.data.results);\r\n    };\r\n\r\n    getPokemonData = async (result) => {\r\n        // debugger;\r\n        const pokemonArr = [],\r\n            filterArr = [];\r\n        await Promise.all(\r\n            result.map((pokemonItem) => {\r\n                return axios\r\n                    .get(\r\n                        `https://pokeapi.co/api/v2/pokemon/${pokemonItem.name}`\r\n                    )\r\n                    .then((result) => {\r\n                        pokemonArr.push(result.data);\r\n                    });\r\n            })\r\n        );\r\n        pokemonArr.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0));\r\n        if (this.state.isTypeSelected) {\r\n            for (let i = 0; i < pokemonArr.length; i++) {\r\n                for (let j = 0; j < pokemonArr[i].types.length; j++) {\r\n                    if (\r\n                        this.state.selectedType ===\r\n                        pokemonArr[i].types[j].type.name\r\n                    ) {\r\n                        filterArr.push(pokemonArr[i]);\r\n                    }\r\n                }\r\n            }\r\n            this.setState({\r\n                isFilter: true,\r\n                filterPokemons: filterArr,\r\n                allPokemons: pokemonArr,\r\n                showLoading: false,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isFilter: false,\r\n                allPokemons: pokemonArr,\r\n                showLoading: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    fetchEvoDetails = async (url) => {\r\n        // debugger\r\n        const response = await axios\r\n            .get(url)\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        // console.log(response);\r\n        const evoChain = [];\r\n        let evoData = response.data.chain;\r\n        do {\r\n            const evoDetails = evoData[\"evolution_details\"][0];\r\n            evoChain.push({\r\n                species_name: evoData.species.name,\r\n                min_level: !evoDetails ? 1 : evoDetails.min_level,\r\n                trigger_name: !evoDetails ? null : evoDetails.trigger.name,\r\n                item: !evoDetails ? null : evoDetails.item,\r\n            });\r\n            evoData = evoData[\"evolves_to\"][0];\r\n        } while (!!evoData && evoData.hasOwnProperty(\"evolves_to\"));\r\n        this.fetchEvoImages(evoChain);\r\n    };\r\n\r\n    fetchEvoImages = async (evoChainArr) => {\r\n        // debugger\r\n        for (let i = 0; i < evoChainArr.length; i++) {\r\n            const response = await axios\r\n                .get(\r\n                    `https://pokeapi.co/api/v2/pokemon/${evoChainArr[i].species_name}`\r\n                )\r\n                .catch((err) => console.log(\"Error:\", err));\r\n            response.data.sprites.other.dream_world.front_default\r\n                ? (evoChainArr[i][\"image_url\"] =\r\n                      response.data.sprites.other.dream_world.front_default)\r\n                : (evoChainArr[i][\"image_url\"] =\r\n                      response.data.sprites.other[\r\n                          \"official-artwork\"\r\n                      ].front_default);\r\n        }\r\n        this.setState({\r\n            evoChain: evoChainArr,\r\n        });\r\n    };\r\n\r\n    fetchPokemonData = async (number, pokemon, category, imageURL) => {\r\n        // debugger\r\n        const response = await axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        // console.log(response);\r\n        const statistics = [],\r\n            abs = [];\r\n        const id = response.data.id;\r\n        for (let i = 0; i < response.data.abilities.length; i++) {\r\n            abs.push(response.data.abilities[i].ability.name);\r\n        }\r\n        for (let j = 0; j < response.data.stats.length; j++) {\r\n            const Obj = {};\r\n            Obj[\"stat__name\"] = response.data.stats[j].stat.name;\r\n            Obj[\"stat__val\"] = response.data.stats[j].base_stat;\r\n            statistics.push(Obj);\r\n        }\r\n        this.setState({\r\n            weight: response.data.weight,\r\n            height: response.data.height,\r\n            category,\r\n            pokeNumber: id,\r\n            imageURL,\r\n            pokeName: pokemon,\r\n            showInfo: true,\r\n            stats: statistics,\r\n            abilities: abs,\r\n        });\r\n        this.setState({\r\n            evoChain: [],\r\n            genderRate: \"\",\r\n            genera: \"\",\r\n        });\r\n        this.fetchPokemonDescription(pokemon);\r\n    };\r\n\r\n    fetchPokemonDescription = async (pokemon_name) => {\r\n        // debugger;\r\n        let genera = \"\";\r\n        const response = await axios\r\n            .get(`https://pokeapi.co/api/v2/pokemon-species/${pokemon_name}`)\r\n            .catch((err) => console.log(\"Error:\", err));\r\n        this.fetchEvoDetails(response.data.evolution_chain.url);\r\n        try {\r\n            for (\r\n                let i = 0;\r\n                i < response.data.flavor_text_entries.length - 1;\r\n                i++\r\n            ) {\r\n                if (\r\n                    response.data.flavor_text_entries[i].language.name === \"en\"\r\n                ) {\r\n                    this.state.description =\r\n                        response.data.flavor_text_entries[i].flavor_text;\r\n                    break;\r\n                }\r\n            }\r\n            for (let j = 0; j < response.data.genera.length; j++) {\r\n                if (response.data.genera[j].language.name === \"en\") {\r\n                    genera = response.data.genera[j].genus;\r\n                    break;\r\n                }\r\n            }\r\n            this.setState({\r\n                description: this.state.description,\r\n                genderRate: response.data.gender_rate,\r\n                genera,\r\n            });\r\n        } catch (e) {\r\n            this.setState({\r\n                description: \"Description not found\",\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeRegions = (value) => {\r\n        // debugger;\r\n        for (let i = 0; i < this.state.regions.length; i++) {\r\n            if (this.state.regions[i].name === value.value) {\r\n                this.setState({\r\n                    valueregion: value.value,\r\n                    // valuetype: \"all types\",\r\n                    sorttype: \"ID\",\r\n                    isSearch: false,\r\n                    isFilter: false,\r\n                    showLoading: true,\r\n                });\r\n                this.getAllPokemons(\r\n                    this.state.regions[i].offset,\r\n                    this.state.regions[i].limit\r\n                );\r\n                break;\r\n            }\r\n        }\r\n        // console.log(value.value);\r\n    };\r\n\r\n    handleChangeTypes = (value) => {\r\n        // debugger;\r\n        if (value.value === \"all types\") {\r\n            const allPoks = this.state.allPokemons;\r\n            if (this.state.sorttype === \"Name\") {\r\n                allPoks.sort((a, b) =>\r\n                    a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                );\r\n                this.setState({\r\n                    isFilter: false,\r\n                    valuetype: value.value,\r\n                    allPokemons: allPoks,\r\n                    isTypeSelected: false,\r\n                });\r\n            } else {\r\n                allPoks.sort((a, b) =>\r\n                    a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n                );\r\n                this.setState({\r\n                    isFilter: false,\r\n                    valuetype: value.value,\r\n                    allPokemons: allPoks,\r\n                    isTypeSelected: false,\r\n                });\r\n            }\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                isTypeSelected: true,\r\n                selectedType: value.value,\r\n            });\r\n        }\r\n        let filterArr = [];\r\n        for (let i = 0; i < this.state.allPokemons.length; i++) {\r\n            for (let j = 0; j < this.state.allPokemons[i].types.length; j++) {\r\n                if (\r\n                    value.value === this.state.allPokemons[i].types[j].type.name\r\n                ) {\r\n                    filterArr.push(this.state.allPokemons[i]);\r\n                }\r\n            }\r\n        }\r\n        this.state.sorttype === \"Name\"\r\n            ? filterArr.sort((a, b) =>\r\n                  a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n              )\r\n            : filterArr.sort((a, b) =>\r\n                  a.id > b.id ? 1 : b.id > a.id ? -1 : 0\r\n              );\r\n        this.setState({\r\n            isSearch: false,\r\n            valuesearch: \"\",\r\n            isFilter: true,\r\n            filterPokemons: filterArr,\r\n            valuetype: value.value,\r\n        });\r\n        filterArr.length === 0\r\n            ? this.setState({ noDataFound: true })\r\n            : this.setState({ noDataFound: false });\r\n    };\r\n\r\n    handleChangeSort = (value) => {\r\n        let sortArr;\r\n        this.state.isFilter\r\n            ? (sortArr = this.state.filterPokemons)\r\n            : (sortArr = this.state.allPokemons);\r\n        if (value.value === \"ID\") {\r\n            sortArr.sort((a, b) => (a.id > b.id ? 1 : b.id > a.id ? -1 : 0));\r\n        } else {\r\n            sortArr.sort((a, b) =>\r\n                a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n            );\r\n        }\r\n        this.state.isFilter\r\n            ? this.setState({\r\n                  filterPokemons: sortArr,\r\n                  sorttype: value.value,\r\n              })\r\n            : this.setState({\r\n                  allPokemons: sortArr,\r\n                  sorttype: value.value,\r\n              });\r\n        console.log(value.value);\r\n    };\r\n\r\n    handleChangeSearch = (event) => {\r\n        // debugger\r\n        event.target.value.length > 0\r\n            ? this.setState({\r\n                  isSearch: true,\r\n                  valuetype: \"all types\",\r\n                  valuesearch: event.target.value,\r\n              })\r\n            : this.setState({\r\n                  isSearch: false,\r\n                  isFilter: false,\r\n                  valuesearch: event.target.value,\r\n              });\r\n        let searchArr = [];\r\n        for (let i = 0; i < this.state.allPokemons.length; i++) {\r\n            // eslint-disable-next-line eqeqeq\r\n            if (\r\n                this.state.allPokemons[i].name.includes(\r\n                    event.target.value.toLowerCase()\r\n                ) ||\r\n                this.state.allPokemons[i].id\r\n                    .toString()\r\n                    .includes(event.target.value)\r\n            ) {\r\n                searchArr.push(this.state.allPokemons[i]);\r\n            }\r\n        }\r\n        searchArr.length === 0\r\n            ? this.setState({ noDataFound: true, searchPokemons: [] })\r\n            : this.setState({ noDataFound: false, searchPokemons: searchArr });\r\n        // console.log(event.target.value);\r\n    };\r\n\r\n    handleClick = () => {\r\n        window[`scrollTo`]({\r\n            top: document.body.scrollHeight,\r\n            behavior: `smooth`,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const listnya = {\r\n            visible: {\r\n                opacity: 1,\r\n                transition: {\r\n                    when: \"beforeChildren\",\r\n                    staggerChildren: 0.35,\r\n                    delayChildren: 0.75,\r\n                },\r\n            },\r\n            hidden: {\r\n                opacity: 0,\r\n                transition: {\r\n                    when: \"afterChildren\",\r\n                },\r\n            },\r\n        };\r\n\r\n        const itemsnya = {\r\n            visible: { opacity: 1, x: 0 },\r\n            hidden: { opacity: 0, x: -150 },\r\n        };\r\n\r\n        document.title = `Pokédex-id`;\r\n\r\n        return (\r\n            <>\r\n                <Scroll />\r\n                <Navbar />\r\n                <HomeSection\r\n                    description=\"Search for a Pokémon by name or using its National\r\n                            Pokédex number.\"\r\n                />\r\n                <Filters\r\n                    regions={this.state.regions}\r\n                    types={this.state.types}\r\n                    sortby={this.state.sortby}\r\n                    valueregion={this.state.valueregion}\r\n                    valuetype={this.state.valuetype}\r\n                    sorttype={this.state.sorttype}\r\n                    valuesearch={this.state.valuesearch}\r\n                    regionsSelect={this.handleChangeRegions}\r\n                    typesSelect={this.handleChangeTypes}\r\n                    sortSelect={this.handleChangeSort}\r\n                    searchChange={this.handleChangeSearch}\r\n                />\r\n                <CategoryContainer>\r\n                    <CategoryContent>\r\n                        <IconCategory>\r\n                            <BungkusanIconnya>\r\n                                <BungkusIcon>\r\n                                    <Icon src={logoTypes}></Icon>\r\n                                </BungkusIcon>\r\n                            </BungkusanIconnya>\r\n                            <Description>Design Pokédex Card</Description>\r\n                        </IconCategory>\r\n                        {this.state.showLoading && (\r\n                            <CardContent>\r\n                                <ul className=\"card__content_home\">\r\n                                    <li className=\"card__li\">\r\n                                        <Loading />\r\n                                    </li>\r\n                                    <li className=\"card__li\">\r\n                                        <Loading />\r\n                                    </li>\r\n                                    <li className=\"card__li\">\r\n                                        <Loading />\r\n                                    </li>\r\n                                    <li className=\"card__li\">\r\n                                        <Loading />\r\n                                    </li>\r\n                                    <li className=\"card__li\">\r\n                                        <Loading />\r\n                                    </li>\r\n                                </ul>\r\n                            </CardContent>\r\n                        )}\r\n                        {!this.state.showLoading && (\r\n                            <CardContent>\r\n                                {this.state.isSearch ? (\r\n                                    <motion.ul\r\n                                        className=\"card__content\"\r\n                                        initial=\"hidden\"\r\n                                        animate=\"visible\"\r\n                                        variants={listnya}\r\n                                    >\r\n                                        {Object.keys(\r\n                                            this.state.searchPokemons\r\n                                        ).map((item, key) => (\r\n                                            <motion.li\r\n                                                className=\"card__li\"\r\n                                                key={\r\n                                                    this.state.allPokemons[item]\r\n                                                        .id\r\n                                                }\r\n                                                variants={itemsnya}\r\n                                            >\r\n                                                <Pokemon\r\n                                                    key={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    id={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    image={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].sprites.other\r\n                                                            .dream_world\r\n                                                            .front_default\r\n                                                            ? this.state\r\n                                                                  .searchPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other\r\n                                                                  .dream_world\r\n                                                                  .front_default\r\n                                                            : this.state\r\n                                                                  .searchPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other[\r\n                                                                  \"official-artwork\"\r\n                                                              ].front_default\r\n                                                    }\r\n                                                    name={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].name\r\n                                                    }\r\n                                                    type={\r\n                                                        this.state\r\n                                                            .searchPokemons[\r\n                                                            item\r\n                                                        ].types\r\n                                                    }\r\n                                                    height={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].height\r\n                                                    }\r\n                                                    weight={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].weight\r\n                                                    }\r\n                                                    onElemClick={() =>\r\n                                                        this.fetchPokemonData(\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].id,\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].name,\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].types,\r\n                                                            this.state\r\n                                                                .searchPokemons[\r\n                                                                item\r\n                                                            ].sprites.other\r\n                                                                .dream_world\r\n                                                                .front_default\r\n                                                                ? this.state\r\n                                                                      .searchPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other\r\n                                                                      .dream_world\r\n                                                                      .front_default\r\n                                                                : this.state\r\n                                                                      .searchPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other[\r\n                                                                      \"official-artwork\"\r\n                                                                  ]\r\n                                                                      .front_default\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </motion.li>\r\n                                        ))}\r\n                                    </motion.ul>\r\n                                ) : !this.state.isFilter ? (\r\n                                    <motion.ul\r\n                                        className=\"card__content\"\r\n                                        initial=\"hidden\"\r\n                                        animate=\"visible\"\r\n                                        variants={listnya}\r\n                                    >\r\n                                        {Object.keys(\r\n                                            this.state.allPokemons\r\n                                        ).map((item, key) => (\r\n                                            <motion.li\r\n                                                className=\"card__li\"\r\n                                                key={\r\n                                                    this.state.allPokemons[item]\r\n                                                        .id\r\n                                                }\r\n                                                variants={itemsnya}\r\n                                            >\r\n                                                <Pokemon\r\n                                                    key={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    id={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    image={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].sprites.other\r\n                                                            .dream_world\r\n                                                            .front_default\r\n                                                            ? this.state\r\n                                                                  .allPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other\r\n                                                                  .dream_world\r\n                                                                  .front_default\r\n                                                            : this.state\r\n                                                                  .allPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other[\r\n                                                                  \"official-artwork\"\r\n                                                              ].front_default\r\n                                                    }\r\n                                                    name={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].name\r\n                                                    }\r\n                                                    type={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].types\r\n                                                    }\r\n                                                    height={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].height\r\n                                                    }\r\n                                                    weight={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].weight\r\n                                                    }\r\n                                                    onElemClick={() =>\r\n                                                        this.fetchPokemonData(\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].id,\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].name,\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].types,\r\n                                                            this.state\r\n                                                                .allPokemons[\r\n                                                                item\r\n                                                            ].sprites.other\r\n                                                                .dream_world\r\n                                                                .front_default\r\n                                                                ? this.state\r\n                                                                      .allPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other\r\n                                                                      .dream_world\r\n                                                                      .front_default\r\n                                                                : this.state\r\n                                                                      .allPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other[\r\n                                                                      \"official-artwork\"\r\n                                                                  ]\r\n                                                                      .front_default\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </motion.li>\r\n                                        ))}\r\n                                    </motion.ul>\r\n                                ) : (\r\n                                    <motion.ul\r\n                                        // style={{\r\n                                        //     display: \"grid\",\r\n                                        //     gridTemplateColumns: \"1fr 1fr 1fr\",\r\n                                        //     width: \"100%\",\r\n                                        //     gap: \"30px\",\r\n                                        //     listStyleType: \"none\",\r\n                                        //     paddingInlineStart: \"0px\",\r\n                                        //     alignItems: \"center\",\r\n                                        //     justifyContent: \"center\",\r\n                                        // }}\r\n                                        className=\"card__content\"\r\n                                        initial=\"hidden\"\r\n                                        animate=\"visible\"\r\n                                        variants={listnya}\r\n                                    >\r\n                                        {Object.keys(\r\n                                            this.state.filterPokemons\r\n                                        ).map((item, key) => (\r\n                                            <motion.li\r\n                                                className=\"card__li\"\r\n                                                key={\r\n                                                    this.state.allPokemons[item]\r\n                                                        .id\r\n                                                }\r\n                                                variants={itemsnya}\r\n                                            >\r\n                                                <Pokemon\r\n                                                    key={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    id={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].id\r\n                                                    }\r\n                                                    image={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].sprites.other\r\n                                                            .dream_world\r\n                                                            .front_default\r\n                                                            ? this.state\r\n                                                                  .filterPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other\r\n                                                                  .dream_world\r\n                                                                  .front_default\r\n                                                            : this.state\r\n                                                                  .filterPokemons[\r\n                                                                  item\r\n                                                              ].sprites.other[\r\n                                                                  \"official-artwork\"\r\n                                                              ].front_default\r\n                                                    }\r\n                                                    name={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].name\r\n                                                    }\r\n                                                    type={\r\n                                                        this.state\r\n                                                            .filterPokemons[\r\n                                                            item\r\n                                                        ].types\r\n                                                    }\r\n                                                    height={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].height\r\n                                                    }\r\n                                                    weight={\r\n                                                        this.state.allPokemons[\r\n                                                            item\r\n                                                        ].weight\r\n                                                    }\r\n                                                    onElemClick={() =>\r\n                                                        this.fetchPokemonData(\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].id,\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].name,\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].types,\r\n                                                            this.state\r\n                                                                .filterPokemons[\r\n                                                                item\r\n                                                            ].sprites.other\r\n                                                                .dream_world\r\n                                                                .front_default\r\n                                                                ? this.state\r\n                                                                      .filterPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other\r\n                                                                      .dream_world\r\n                                                                      .front_default\r\n                                                                : this.state\r\n                                                                      .filterPokemons[\r\n                                                                      item\r\n                                                                  ].sprites\r\n                                                                      .other[\r\n                                                                      \"official-artwork\"\r\n                                                                  ]\r\n                                                                      .front_default\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            </motion.li>\r\n                                        ))}\r\n                                    </motion.ul>\r\n                                )}\r\n                            </CardContent>\r\n                        )}\r\n                    </CategoryContent>\r\n                </CategoryContainer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ListContainer } from \"../components/Elements/Elements\";\r\nimport { HomeSectionList } from \"../components/HomeSection\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Scroll from \"../components/Navbar/Scroll\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { PokemonCardList } from \"../components/Pokemon/index.js\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst PokemonList = () => {\r\n    const { listPokemon } = useContext(GlobalContext);\r\n\r\n    const container = {\r\n        hidden: { opacity: 1, scale: 0 },\r\n        visible: {\r\n            opacity: 1,\r\n            scale: 1,\r\n            transition: {\r\n                delayChildren: 0.8,\r\n                staggerChildren: 0.4,\r\n            },\r\n        },\r\n    };\r\n\r\n    const item_nya = {\r\n        hidden: { x: -120, opacity: 0 },\r\n        visible: {\r\n            x: 0,\r\n            opacity: 1,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <HomeSectionList description=\"This page is My Pokemon List.\" />\r\n            <ListContainer>\r\n                <motion.div\r\n                    variants={container}\r\n                    initial=\"hidden\"\r\n                    animate=\"visible\"\r\n                    className=\"grid_content\"\r\n                >\r\n                    {listPokemon.map((item, i) => (\r\n                        <motion.li\r\n                            variants={item_nya}\r\n                            key={i}\r\n                            className=\"card__li\"\r\n                        >\r\n                            <PokemonCardList\r\n                                id={item.id}\r\n                                name={item.name}\r\n                                type={item.types}\r\n                                weight={item.weight}\r\n                                height={item.height}\r\n                                image={\r\n                                    item.sprites.other.dream_world.front_default\r\n                                        ? item.sprites.other.dream_world\r\n                                              .front_default\r\n                                        : item.sprites.other[\"official-artwork\"]\r\n                                              .front_default\r\n                                }\r\n                                titleNew={item.title}\r\n                            />\r\n                        </motion.li>\r\n                    ))}\r\n                </motion.div>\r\n            </ListContainer>\r\n            <Scroll />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PokemonList;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport PokemonDetails from \"../pages/PokemonDetails\";\nimport { PokemonHome } from \"../pages/PokemonHome\";\nimport React from \"react\";\nimport PokemonList from \"../pages/PokemonList\";\nimport \"./app.css\";\nimport { GlobalProvider } from \"../context/GlobalState\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <GlobalProvider>\n                <BrowserRouter basename=\"/pokedex-id\">\n                    <Routes>\n                        <Route exact path=\"/\" element={<PokemonHome />} />\n                        <Route\n                            path=\"/pokemon/:name\"\n                            element={<PokemonDetails />}\n                        />\n                        <Route path=\"/mypokemon\" element={<PokemonList />} />\n                    </Routes>\n                </BrowserRouter>\n            </GlobalProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}